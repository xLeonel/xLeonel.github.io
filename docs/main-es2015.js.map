{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth/auth.guard.ts","./src/app/auth/error.interceptor.ts","./src/app/auth/fake-backend.ts","./src/app/auth/jwt.interceptor.ts","./src/app/components/alerta/alerta.component.ts","./src/app/components/alerta/alerta.component.html","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/models/alert.ts","./src/app/models/user.ts","./src/app/pages/cadastro/cadastro.component.ts","./src/app/pages/cadastro/cadastro.component.html","./src/app/pages/home/home.component.ts","./src/app/pages/home/home.component.html","./src/app/pages/login/login.component.ts","./src/app/pages/login/login.component.html","./src/app/pipes/trata-tipo-user.pipe.ts","./src/app/services/account.service.ts","./src/app/services/alert.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AuthGuard } from './auth/auth.guard';\r\nimport { CadastroComponent } from './pages/cadastro/cadastro.component';\r\nimport { HomeComponent } from './pages/home/home.component';\r\nimport { LoginComponent } from './pages/login/login.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: HomeComponent, canActivate: [AuthGuard] },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'cadastro', component: CadastroComponent },\r\n  { path: '**', redirectTo: '' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\nimport { AccountService } from './services/account.service';\r\nimport { User } from './models/user';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'valida-presenca';\r\n}\r\n","<!-- nav -->\r\n<app-navbar></app-navbar>\r\n\r\n<!-- main container -->\r\n<div class=\"app-container\">\r\n  <alert></alert>\r\n  <router-outlet></router-outlet>\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { NavbarComponent } from './components/navbar/navbar.component';\r\nimport { LoginComponent } from './pages/login/login.component';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { CadastroComponent } from './pages/cadastro/cadastro.component';\r\nimport { HomeComponent } from './pages/home/home.component';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { JwtInterceptor } from './auth/jwt.interceptor';\r\nimport { ErrorInterceptor } from './auth/error.interceptor';\r\nimport { FakeBackendInterceptor } from './auth/fake-backend';\r\nimport { AlertaComponent } from './components/alerta/alerta.component';\r\nimport { TrataTipoUserPipe } from './pipes/trata-tipo-user.pipe';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavbarComponent,\r\n    LoginComponent,\r\n    CadastroComponent,\r\n    HomeComponent,\r\n    AlertaComponent,\r\n    TrataTipoUserPipe\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [\r\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: FakeBackendInterceptor, multi: true }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AccountService } from '../services/account.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(\n      private router: Router,\n      private accountService: AccountService\n  ) {}\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n      const user = this.accountService.userValue;\n      if (user) {\n          // authorised so return true\n          return true;\n      }\n\n      // not logged in so redirect to login page with the return url\n      this.router.navigate(['/login']);\n      return false;\n  }\n}","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { AccountService } from '../services/account.service';\r\n\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n    constructor(private accountService: AccountService) {}\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        return next.handle(request).pipe(catchError(err => {\r\n            if (err.status === 401) {\r\n                // auto logout if 401 response returned from api\r\n                this.accountService.logout();\r\n            }\r\n            \r\n            const error = err.error.message || err.statusText;\r\n            return throwError(error);\r\n        }))\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpResponse, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable, of, throwError } from 'rxjs';\r\nimport { delay, mergeMap, materialize, dematerialize } from 'rxjs/operators';\r\nimport { TipoUser, User } from '../models/user';\r\n\r\n// array in local storage for registered users\r\nlet users = <User[]>JSON.parse(localStorage.getItem('usuarios')) || [];\r\n\r\nlet prof: User = new User();\r\nprof.id = 0,\r\n    prof.email = 'prof@email.com',\r\n    prof.senha = 'prof123',\r\n    prof.rgm = '12345678',\r\n    prof.cpf = '11111111111',\r\n    prof.nome = 'Andrea',\r\n    prof.sobrenome = 'Martins',\r\n    prof.tipoUsuario = TipoUser.professor\r\n\r\nlet adm: User = new User();\r\nadm.id = 0,\r\n    adm.email = 'adm@email.com',\r\n    adm.senha = 'adm123',\r\n    adm.rgm = '87654321',\r\n    adm.cpf = '11111111100',\r\n    adm.nome = 'Adailton',\r\n    adm.sobrenome = 'Pereira',\r\n    adm.tipoUsuario = TipoUser.adm\r\n\r\nlet ok = true;\r\n\r\nif (users.find(x => x.cpf === prof.cpf || adm.cpf)) {\r\n    ok = false;\r\n}\r\n\r\nif (ok) {\r\n    prof.id = users.length ? Math.max(...users.map(x => x.id)) + 1 : 1;\r\n    users.push(prof);\r\n    users.push(adm);\r\n    localStorage.setItem('usuarios', JSON.stringify(users));\r\n}\r\n\r\n@Injectable()\r\nexport class FakeBackendInterceptor implements HttpInterceptor {\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        const { url, method, headers, body } = request;\r\n\r\n        // wrap in delayed observable to simulate server api call\r\n        return of(null)\r\n            .pipe(mergeMap(handleRoute))\r\n            .pipe(materialize()) // call materialize and dematerialize to ensure delay even if an error is thrown (https://github.com/Reactive-Extensions/RxJS/issues/648)\r\n            .pipe(delay(500))\r\n            .pipe(dematerialize());\r\n\r\n        function handleRoute() {\r\n            switch (true) {\r\n                case url.endsWith('/login') && method === 'POST':\r\n                    return autenticar();\r\n                case url.endsWith('/cadastro') && method === 'POST':\r\n                    return cadastro();\r\n                case url.endsWith('/users') && method === 'GET':\r\n                    return getUsers();\r\n                case url.match(/\\/users\\/\\d+$/) && method === 'GET':\r\n                    return getUserById();\r\n                case url.match(/\\/users\\/\\d+$/) && method === 'PUT':\r\n                    return updateUser();\r\n                case url.match(/\\/users\\/\\d+$/) && method === 'DELETE':\r\n                    return deleteUser();\r\n                default:\r\n                    // pass through any requests not handled above\r\n                    return next.handle(request);\r\n            }\r\n        }\r\n\r\n        // mock rotas\r\n        function autenticar() {\r\n            const { acesso, senha } = body;\r\n\r\n            let user: User;\r\n\r\n            if (acesso.includes('@')) {\r\n                //email\r\n                user = users.find(x => x.email === acesso && x.senha === senha);\r\n            }\r\n            else if (acesso.lenght === 8) {\r\n                //rgm\r\n                user = users.find(x => x.rgm === acesso && x.senha === senha);\r\n            }\r\n            else if (acesso.lenght == 11) {\r\n                //cpf\r\n                user = users.find(x => x.cpf === acesso && x.senha === senha);\r\n            }\r\n\r\n            if (!user) return error('Acesso ou Senha incorreto');\r\n            return ok({\r\n                id: user.id,\r\n                email: user.email,\r\n                senha: user.senha,\r\n                rgm: user.rgm,\r\n                cpf: user.cpf,\r\n                nome: user.nome,\r\n                sobrenome: user.sobrenome,\r\n                tipoUsuario: user.tipoUsuario,\r\n                token: 'fake-jwt-token'\r\n            })\r\n        }\r\n\r\n        function cadastro() {\r\n            const user = body\r\n\r\n            console.log('usuaros', users)\r\n\r\n            if (users.find(x => x.cpf === user.cpf)) {\r\n                return error('Username \"' + user.username + '\" is already taken')\r\n            }\r\n\r\n            user.id = users.length ? Math.max(...users.map(x => x.id)) + 1 : 1;\r\n            users.push(user);\r\n            localStorage.setItem('usuarios', JSON.stringify(users));\r\n            return ok();\r\n        }\r\n\r\n        function getUsers() {\r\n            if (!isLoggedIn()) return unauthorized();\r\n            return ok(users);\r\n        }\r\n\r\n        function getUserById() {\r\n            if (!isLoggedIn()) return unauthorized();\r\n\r\n            const user = users.find(x => x.id === idFromUrl());\r\n            return ok(user);\r\n        }\r\n\r\n        function updateUser() {\r\n            if (!isLoggedIn()) return unauthorized();\r\n\r\n            let params = body;\r\n            let user = users.find(x => x.id === idFromUrl());\r\n\r\n            // only update password if entered\r\n            if (!params.password) {\r\n                delete params.password;\r\n            }\r\n\r\n            // update and save user\r\n            Object.assign(user, params);\r\n            localStorage.setItem('users', JSON.stringify(users));\r\n\r\n            return ok();\r\n        }\r\n\r\n        function deleteUser() {\r\n            if (!isLoggedIn()) return unauthorized();\r\n\r\n            users = users.filter(x => x.id !== idFromUrl());\r\n            localStorage.setItem('users', JSON.stringify(users));\r\n            return ok();\r\n        }\r\n\r\n        // status code\r\n\r\n        function ok(body?) {\r\n            return of(new HttpResponse({ status: 200, body }))\r\n        }\r\n\r\n        function error(message) {\r\n            return throwError({ error: { message } });\r\n        }\r\n\r\n        function unauthorized() {\r\n            return throwError({ status: 401, error: { message: 'Unauthorised' } });\r\n        }\r\n\r\n        function isLoggedIn() {\r\n            return headers.get('Authorization') === 'Bearer fake-jwt-token';\r\n        }\r\n\r\n        function idFromUrl() {\r\n            const urlParts = url.split('/');\r\n            return parseInt(urlParts[urlParts.length - 1]);\r\n        }\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { AccountService } from '../services/account.service';\r\nimport { environment } from '../../environments/environment';\r\n@Injectable()\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n    constructor(private accountService: AccountService) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        // add auth header with jwt if user is logged in and request is to the api url\r\n        const user = this.accountService.userValue;\r\n        const isLoggedIn = user && user.token;\r\n        const isApiUrl = request.url.startsWith(environment.apiUrl);\r\n        if (isLoggedIn && isApiUrl) {\r\n            request = request.clone({\r\n                setHeaders: {\r\n                    Authorization: `Bearer ${user.token}`\r\n                }\r\n            });\r\n        }\r\n\r\n        return next.handle(request);\r\n    }\r\n}","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\nimport { Router, NavigationStart } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { Alert, AlertType } from '../../models/alert';\nimport { AlertService } from '../../services/alert.service';\n\n\n@Component({ selector: 'alert', templateUrl: 'alerta.component.html' })\n\nexport class AlertaComponent implements OnInit, OnDestroy {\n  @Input() id = 'default-alert';\n  @Input() fade = true;\n\n  alerts: Alert[] = [];\n  alertSubscription: Subscription;\n  routeSubscription: Subscription;\n\n  constructor(private router: Router, private alertService: AlertService) { }\n\n  ngOnInit() {\n    // subscribe to new alert notifications\n    this.alertSubscription = this.alertService.onAlert(this.id)\n      .subscribe(alert => {\n        // clear alerts when an empty alert is received\n        if (!alert.message) {\n          // filter out alerts without 'keepAfterRouteChange' flag\n          this.alerts = this.alerts.filter(x => x.keepAfterRouteChange);\n\n          // remove 'keepAfterRouteChange' flag on the rest\n          this.alerts.forEach(x => delete x.keepAfterRouteChange);\n          return;\n        }\n\n        // add alert to array\n        this.alerts.push(alert);\n\n        // auto close alert if required\n        if (alert.autoClose) {\n          setTimeout(() => this.removeAlert(alert), 3000);\n        }\n      });\n\n    // clear alerts on location change\n    this.routeSubscription = this.router.events.subscribe(event => {\n      if (event instanceof NavigationStart) {\n        this.alertService.clear(this.id);\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    // unsubscribe to avoid memory leaks\n    this.alertSubscription.unsubscribe();\n    this.routeSubscription.unsubscribe();\n  }\n\n  removeAlert(alert: Alert) {\n    // check if already removed to prevent error on auto close\n    if (!this.alerts.includes(alert)) return;\n\n    if (this.fade) {\n      // fade out alert\n      this.alerts.find(x => x === alert).fade = true;\n\n      // remove alert after faded out\n      setTimeout(() => {\n        this.alerts = this.alerts.filter(x => x !== alert);\n      }, 250);\n    } else {\n      // remove alert\n      this.alerts = this.alerts.filter(x => x !== alert);\n    }\n  }\n\n  cssClass(alert: Alert) {\n    if (!alert) return;\n\n    const classes = ['alert', 'alert-dismissable', 'mt-4', 'container'];\n\n    const alertTypeClass = {\n      [AlertType.Success]: 'alert alert-success',\n      [AlertType.Error]: 'alert alert-danger',\n      [AlertType.Info]: 'alert alert-info',\n      [AlertType.Warning]: 'alert alert-warning'\n    }\n\n    classes.push(alertTypeClass[alert.type]);\n\n    if (alert.fade) {\n      classes.push('fade');\n    }\n\n    return classes.join(' ');\n  }\n}","<div *ngFor=\"let alert of alerts\" class=\"{{cssClass(alert)}}\">\n    <a class=\"close\" (click)=\"removeAlert(alert)\">&times;</a>\n    <span [innerHTML]=\"alert.message\"></span>\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { TipoUser, User } from '../../models/user';\r\nimport { AccountService } from '../../services/account.service';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent {\r\n  tipoAluno = TipoUser.aluno;\r\n  tipoAdm = TipoUser.adm;\r\n  tipoProf = TipoUser.professor;\r\n\r\n  user: User;\r\n\r\n  constructor(private accountService: AccountService) {\r\n    this.accountService.user.subscribe(x => this.user = x);\r\n  }\r\n\r\n  logout() {\r\n    this.accountService.logout();\r\n  }\r\n\r\n}\r\n","<nav class=\"navbar navbar-expand navbar-dark bg-dark\" *ngIf=\"user\">\r\n  <div class=\"navbar-nav\">\r\n      <a class=\"nav-item nav-link\" routerLink=\"/\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\">Home</a>\r\n      <a class=\"nav-item nav-link\" routerLink=\"/users\" routerLinkActive=\"active\" *ngIf=\"user.tipoUsuario == tipoAluno\">Presencas</a>\r\n      <a class=\"nav-item nav-link\" routerLink=\"/users\" routerLinkActive=\"active\" *ngIf=\"user.tipoUsuario == tipoProf || tipoAdm\">Aulas</a>\r\n      <a class=\"nav-item nav-link\" routerLink=\"/users\" routerLinkActive=\"active\" *ngIf=\"user.tipoUsuario == tipoAdm\">Professores</a>\r\n      <a class=\"nav-item nav-link\" routerLink=\"/users\" routerLinkActive=\"active\" *ngIf=\"user.tipoUsuario == tipoAdm\">Alunos</a>\r\n      <a class=\"nav-item nav-link\" (click)=\"logout()\">Sair</a>\r\n  </div>\r\n</nav>","export class Alert {\r\n    id: string;\r\n    type: AlertType;\r\n    message: string;\r\n    autoClose: boolean;\r\n    keepAfterRouteChange: boolean;\r\n    fade: boolean;\r\n\r\n    constructor(init?:Partial<Alert>) {\r\n        Object.assign(this, init);\r\n    }\r\n}\r\n\r\nexport enum AlertType {\r\n    Success,\r\n    Error,\r\n    Info,\r\n    Warning\r\n}","export class User {\r\n    id: number;\r\n    email: string;\r\n    senha: string;\r\n    rgm: string;\r\n    cpf: string;\r\n    nome: string;\r\n    sobrenome: string;\r\n    tipoUsuario: TipoUser\r\n    token: string;\r\n}\r\n\r\nexport enum TipoUser {\r\n    aluno,\r\n    professor,\r\n    adm\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { first } from 'rxjs/operators';\r\nimport { TipoUser, User } from 'src/app/models/user';\r\nimport { AccountService } from 'src/app/services/account.service';\r\nimport { AlertService } from 'src/app/services/alert.service';\r\n\r\n@Component({\r\n    selector: 'app-cadastro',\r\n    templateUrl: './cadastro.component.html',\r\n    styleUrls: ['./cadastro.component.css']\r\n})\r\nexport class CadastroComponent implements OnInit {\r\n    form: FormGroup;\r\n    loading = false;\r\n    submitted = false;\r\n\r\n    //get form fields\r\n    get formulario() { return this.form.controls; }\r\n\r\n    constructor(\r\n        private formBuilder: FormBuilder,\r\n        private route: ActivatedRoute,\r\n        private router: Router,\r\n        private accountService: AccountService,\r\n        private alertService: AlertService\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        // direciona pra home se ja tiver um usuario logado\r\n        if (this.accountService.userValue) {\r\n            this.router.navigate(['/']);\r\n        }\r\n\r\n        this.form = this.formBuilder.group({\r\n            nome: ['', [Validators.required]],\r\n            sobrenome: ['', [Validators.required]],\r\n            rgm: ['', [Validators.required, Validators.minLength(8)]],\r\n            cpf: ['', [Validators.required, Validators.minLength(11)]],\r\n            email: ['', [Validators.required, Validators.email]],\r\n            senha: ['', [Validators.required, Validators.minLength(6)]],\r\n            tipoUsuario: [TipoUser.aluno, Validators.required],\r\n        });\r\n    }\r\n\r\n    registrar() {\r\n        this.submitted = true;\r\n\r\n        this.alertService.clear();\r\n\r\n        if (this.form.invalid) {\r\n            return;\r\n        }\r\n\r\n        this.loading = true;\r\n\r\n        this.accountService.register(this.form.value)\r\n            .pipe(first())\r\n            .subscribe(\r\n                data => {\r\n                    this.alertService.success('Cadastrado com sucesso', { keepAfterRouteChange: true });\r\n                    this.router.navigate(['/login'], { relativeTo: this.route });\r\n                },\r\n                error => {\r\n                    this.alertService.error(error);\r\n                    this.loading = false;\r\n                });\r\n    }\r\n}","<div class=\"card\">\r\n    <h4 class=\"card-header\">Register</h4>\r\n    <div class=\"card-body\">\r\n        <form [formGroup]=\"form\" (ngSubmit)=\"registrar()\">\r\n            <div class=\"form-group\">\r\n                <label for=\"nome\">Nome</label>\r\n                <input type=\"text\" formControlName=\"nome\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && formulario.nome.errors }\"placeholder=\"Insira seu nome\" />\r\n                <div *ngIf=\"submitted && formulario.nome.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"formulario.nome.errors.required\">Nome é obrigatório</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"sobrenome\">Sobrenome</label>\r\n                <input type=\"text\" formControlName=\"sobrenome\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && formulario.sobrenome.errors }\" placeholder=\"Insira seu sobrenome\"/>\r\n                <div *ngIf=\"submitted && formulario.sobrenome.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"formulario.sobrenome.errors.required\">Sobrenome é obrigatório</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"rgm\">RGM</label>\r\n                <input type=\"text\" formControlName=\"rgm\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && formulario.rgm.errors }\" placeholder=\"Insira seu RGM\" maxlength=\"8\"/>\r\n                <div *ngIf=\"submitted && formulario.rgm.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"formulario.rgm.errors.required\">RGM é obrigatório</div>\r\n                    <div *ngIf=\"formulario.rgm.errors.minlength\">RGM precisa ter ao menos 8 caracteres</div>\r\n                    <div *ngIf=\"formulario.rgm.errors.maxlength\">RGM precisa ter no maximo 8 caracteres</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"cpf\">CPF</label>\r\n                <input type=\"text\" formControlName=\"cpf\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && formulario.cpf.errors }\" placeholder=\"Insira seu CPF\" maxlength=\"11\"/>\r\n                <div *ngIf=\"submitted && formulario.cpf.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"formulario.cpf.errors.required\">CPF é obrigatório</div>\r\n                    <div *ngIf=\"formulario.cpf.errors.minlength\">CPF precisa ter ao menos 11 caracteres</div>\r\n                    <div *ngIf=\"formulario.cpf.errors.maxlength\">CPF precisa ter no maximo 11 caracteres</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"email\">Email</label>\r\n                <input type=\"text\" formControlName=\"email\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && formulario.email.errors }\" placeholder=\"Insira seu email\"/>\r\n                <div *ngIf=\"submitted && formulario.email.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"formulario.email.errors.required\">Email é obrigatório</div>\r\n                    <div *ngIf=\"formulario.email.errors.email\">Email é obrigatório</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"senha\">Senha</label>\r\n                <input type=\"senha\" formControlName=\"senha\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && formulario.senha.errors }\"  placeholder=\"Insira sua senha\"/>\r\n                <div *ngIf=\"submitted && formulario.senha.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"formulario.senha.errors.required\">Senha é obrigatório</div>\r\n                    <div *ngIf=\"formulario.senha.errors.minlength\">Senha precisa ter ao menos 6 caracteres</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <button [disabled]=\"loading\" class=\"btn btn-primary\">\r\n                    <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\r\n                    Registrar\r\n                </button>\r\n                <a routerLink=\"../login\" class=\"btn btn-link\">Voltar</a>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>","import { Component } from '@angular/core';\nimport { User } from '../../models/user';\nimport { AccountService } from '../../services/account.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent {\n  user: User;\n\n  constructor(private accountService: AccountService) {\n    this.accountService.user.subscribe(x => this.user = x);\n  }\n}\n","<div class=\"p-4\">\n    <div class=\"container\">\n        <h1>olá {{user.nome}}!</h1>\n        <p>perfil: {{user.tipoUsuario | trataTipoUser}}</p>      \n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { first } from 'rxjs/operators';\r\nimport { AccountService } from '../../services/account.service';\r\nimport { AlertService } from '../../services/alert.service';\r\n\r\n@Component({\r\n    selector: 'app-login',\r\n    templateUrl: './login.component.html',\r\n    styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n    form: FormGroup;\r\n    loading = false;\r\n    submitted = false;\r\n\r\n    // get form fields\r\n    get formulario() { return this.form.controls; }\r\n\r\n    constructor(\r\n        private formBuilder: FormBuilder,\r\n        private route: ActivatedRoute,\r\n        private router: Router,\r\n        private accountService: AccountService,\r\n        private alertService: AlertService\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        // direciona pra home se ja tiver um usuario logado\r\n        if (this.accountService.userValue) {\r\n            this.router.navigate(['/']);\r\n        }\r\n\r\n        this.form = this.formBuilder.group({\r\n            username: ['', Validators.required],\r\n            password: ['', Validators.required]\r\n        });\r\n    }\r\n\r\n    login() {\r\n        this.submitted = true;\r\n\r\n        this.alertService.clear();\r\n\r\n        if (this.form.invalid) {\r\n            return;\r\n        }\r\n\r\n        this.loading = true;\r\n\r\n        this.accountService.login(this.formulario.username.value, this.formulario.password.value)\r\n            .pipe(first())\r\n            .subscribe(\r\n                data => {\r\n                    this.router.navigate(['/']); //home\r\n                },\r\n                error => {\r\n                    this.alertService.error(error);\r\n                    this.loading = false;\r\n                });\r\n    }\r\n}","<div class=\"card\">\r\n    <h4 class=\"card-header\">Login</h4>\r\n    <div class=\"card-body\">\r\n        <form [formGroup]=\"form\" (ngSubmit)=\"login()\">\r\n            <div class=\"form-group\">\r\n                <label for=\"username\">Acesso</label>\r\n                <input type=\"text\" formControlName=\"username\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && formulario.username.errors }\" placeholder=\"Insira seu email, rgm ou cpf\"/>\r\n                <div *ngIf=\"submitted && formulario.username.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"formulario.username.errors.required\">Acesso é obrigatório</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"password\">Senha</label>\r\n                <input type=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && formulario.password.errors }\" placeholder=\"Insira sua senha\"/>\r\n                <div *ngIf=\"submitted && formulario.password.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"formulario.password.errors.required\">Senha é obrigatório</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <button [disabled]=\"loading\" class=\"btn btn-primary\">\r\n                    <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\r\n                    Login\r\n                </button>\r\n                <a routerLink=\"/cadastro\" class=\"btn btn-link\">Registrar</a>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>","import { Pipe, PipeTransform } from '@angular/core';\nimport { TipoUser } from '../models/user';\n\n@Pipe({\n  name: 'trataTipoUser'\n})\nexport class TrataTipoUserPipe implements PipeTransform {\n\n  transform(value: TipoUser): unknown {\n    switch (value) {\n      case TipoUser.adm:\n        return 'Administrador';\n      case TipoUser.aluno:\n        return 'Aluno';\n      case TipoUser.professor:\n        return 'Professor(a)';\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { User } from '../models/user';\r\nimport { environment } from 'src/environments/environment';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AccountService {\r\n  private userSubject: BehaviorSubject<User>;\r\n  public user: Observable<User>;\r\n\r\n  constructor(\r\n      private router: Router,\r\n      private http: HttpClient\r\n  ) {\r\n      this.userSubject = new BehaviorSubject<User>(JSON.parse(localStorage.getItem('usuario')));\r\n      this.user = this.userSubject.asObservable();\r\n  }\r\n\r\n  public get userValue(): User {\r\n      return this.userSubject.value;\r\n  }\r\n\r\n  login(acesso, senha) {\r\n      return this.http.post<User>(`${environment.apiUrl}/login`, { acesso, senha })\r\n          .pipe(map(user => {\r\n              // store user details and jwt token in local storage to keep user logged in between page refreshes\r\n              localStorage.setItem('usuario', JSON.stringify(user));\r\n              this.userSubject.next(user);\r\n              return user;\r\n          }));\r\n  }\r\n\r\n  logout() {\r\n      // remove user from local storage and set current user to null\r\n      localStorage.removeItem('usuario');\r\n      this.userSubject.next(null);\r\n      this.router.navigate(['/login']);\r\n  }\r\n\r\n  register(user: User) {\r\n      return this.http.post(`${environment.apiUrl}/cadastro`, user);\r\n  }\r\n\r\n  getAll() {\r\n      return this.http.get<User[]>(`${environment.apiUrl}/users`);\r\n  }\r\n\r\n  getById(id: string) {\r\n      return this.http.get<User>(`${environment.apiUrl}/users/${id}`);\r\n  }\r\n\r\n  update(id, params) {\r\n      return this.http.put(`${environment.apiUrl}/users/${id}`, params)\r\n          .pipe(map(x => {\r\n              // update stored user if the logged in user updated their own record\r\n              if (id == this.userValue.id) {\r\n                  // update local storage\r\n                  const user = { ...this.userValue, ...params };\r\n                  localStorage.setItem('user', JSON.stringify(user));\r\n\r\n                  // publish updated user to subscribers\r\n                  this.userSubject.next(user);\r\n              }\r\n              return x;\r\n          }));\r\n  }\r\n\r\n  delete(id: number) {\r\n      return this.http.delete(`${environment.apiUrl}/users/${id}`)\r\n          .pipe(map(x => {\r\n              // auto logout if the logged in user deleted their own record\r\n              if (id == this.userValue.id) {\r\n                  this.logout();\r\n              }\r\n              return x;\r\n          }));\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\nimport { Alert, AlertType } from '../models/alert';\r\n\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AlertService {\r\n    private subject = new Subject<Alert>();\r\n    private defaultId = 'default-alert';\r\n\r\n    // enable subscribing to alerts observable\r\n    onAlert(id = this.defaultId): Observable<Alert> {\r\n        return this.subject.asObservable().pipe(filter(x => x && x.id === id));\r\n    }\r\n\r\n    // convenience methods\r\n    success(message: string, options?: any) {\r\n        this.alert(new Alert({ ...options, type: AlertType.Success, message }));\r\n    }\r\n\r\n    error(message: string, options?: any) {\r\n        this.alert(new Alert({ ...options, type: AlertType.Error, message }));\r\n    }\r\n\r\n    info(message: string, options?: any) {\r\n        this.alert(new Alert({ ...options, type: AlertType.Info, message }));\r\n    }\r\n\r\n    warn(message: string, options?: any) {\r\n        this.alert(new Alert({ ...options, type: AlertType.Warning, message }));\r\n    }\r\n\r\n    // main alert method    \r\n    alert(alert: Alert) {\r\n        alert.id = alert.id || this.defaultId;\r\n        this.subject.next(alert);\r\n    }\r\n\r\n    // clear alerts\r\n    clear(id = this.defaultId) {\r\n        this.subject.next(new Alert({ id }));\r\n    }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:4000'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}