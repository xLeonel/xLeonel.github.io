{"version":3,"sources":["./src/app/services/aula.service.ts","./src/app/pages/home/home.component.ts","./src/app/pages/home/home.component.html","./src/app/models/user.ts","./src/app/services/alert.service.ts","./src/environments/environment.ts","./src/app/pages/login/login.component.ts","./src/app/pages/login/login.component.html","./src/app/pages/professores/professores.component.ts","./src/app/pages/professores/professores.component.html","./src/app/pages/alunos/alunos.component.ts","./src/app/pages/alunos/alunos.component.html","./src/app/models/periodo.ts","./src/app/models/curso.ts","./src/app/auth/jwt.interceptor.ts","./src/app/auth/error.interceptor.ts","./src/app/auth/auth.guard.ts","./src/app/pages/cadastro/cadastro.component.ts","./src/app/pages/cadastro/cadastro.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/models/aula.ts","./src/app/models/alert.ts","./src/app/app.module.ts","./src/app/services/account.service.ts","./src/app/services/curso.service.ts","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/models/semestre.ts","./src/app/auth/fake-backend.ts","./src/app/pipes/trata-tipo-user.pipe.ts","./src/app/models/materia.ts","./src/app/pages/add-edit/add-edit.component.ts","./src/app/pages/add-edit/add-edit.component.html","./src/app/components/alerta/alerta.component.ts","./src/app/components/alerta/alerta.component.html","./src/app/app-routing.module.ts","./src/app/pages/aulas/aulas.component.ts","./src/app/pages/aulas/aulas.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Aula } from '../models/aula';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AulaService {\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  getAllByProfessor(idProfessor: number) {\r\n    return this.http.get<Aula[]>(`${environment.apiUrl}/aulas/${idProfessor}`);\r\n  }\r\n\r\n  register(aula: Aula) {\r\n    return this.http.post(`${environment.apiUrl}/aulas`, aula);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AlertService } from '../../services/alert.service';\r\nimport { AulaService } from '../../services/aula.service';\r\nimport { TipoUser, User } from '../../models/user';\r\nimport { AccountService } from '../../services/account.service';\r\nimport { Aula } from '../../models/aula';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Materia } from 'src/app/models/materia';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  private aulas: Aula[];\r\n\r\n  materias: Materia[] = [];\r\n  user: User;\r\n  form: FormGroup;\r\n  loading = false;\r\n  submitted = false;\r\n\r\n  get isAluno() {\r\n    return this.user.tipoUsuario === TipoUser.aluno;\r\n  }\r\n\r\n  get isProfessor() {\r\n    return this.user.tipoUsuario === TipoUser.professor;\r\n  }\r\n\r\n  //get form fields\r\n  get formulario() { return this.form.controls; }\r\n\r\n\r\n  constructor(private accountService: AccountService,\r\n    private aulasService: AulaService,\r\n    private alertService: AlertService,\r\n    private formBuilder: FormBuilder) {\r\n    this.accountService.user.subscribe(x => this.user = x);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.isProfessor) {\r\n      this.form = this.formBuilder.group({\r\n        dateFim: ['', [Validators.required]],\r\n        curso: ['', [Validators.required]],\r\n        materia: ['', [Validators.required]]\r\n      });\r\n    }\r\n  }\r\n\r\n  criarAula(): void {\r\n    console.log(this.form.value)\r\n  }\r\n\r\n  PreencherMaterias(id: string) {\r\n    this.materias = this.user.curso.find(c => c.id === parseInt(id)).materias;\r\n  }\r\n}\r\n\r\n\r\n\r\n","<div class=\"p-4\">\r\n    <div class=\"container\">\r\n        <h1>olá {{user.nome}}!</h1>\r\n        <p>perfil: {{user.tipoUsuario | trataTipoUser}}</p>\r\n        <div *ngIf=\"isProfessor\">\r\n            <h3>Iniciar Aula</h3>\r\n\r\n            <form [formGroup]=\"form\" (ngSubmit)=\"criarAula()\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"dateFim\">Horário Fim</label>\r\n                    <input type=\"time\" formControlName=\"dateFim\" class=\"form-control\"\r\n                        [ngClass]=\"{ 'is-invalid': submitted && formulario.dateFim.errors }\"\r\n                        placeholder=\"Insira a hora do final da aula\" />\r\n                    <div *ngIf=\"submitted && formulario.dateFim.errors\" class=\"invalid-feedback\">\r\n                        <div *ngIf=\"formulario.dateFim.errors.required\">Hora Fim é obrigatório</div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"curso\">Curso</label>\r\n                    <select (change)=\"PreencherMaterias($event.target.value)\" formControlName=\"curso\" [ngClass]=\"{ 'is-invalid': submitted && formulario.curso.errors }\"\r\n                        class=\"form-select\" required>\r\n                        <option selected disabled value=\"\">Selecione o curso</option>\r\n                        <option *ngFor=\"let curso of user.curso\" [ngValue]=\"curso.id\">\r\n                            {{curso.nome}}\r\n                        </option>\r\n                    </select>\r\n\r\n                    <div *ngIf=\"submitted && formulario.curso.errors\" class=\"invalid-feedback\">\r\n                        <div *ngIf=\"formulario.curso.errors.required\">Curso é obrigatório</div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"materia\">Materia</label>\r\n                    <select formControlName=\"materia\"\r\n                        [ngClass]=\"{ 'is-invalid': submitted && formulario.materia.errors }\" class=\"form-select\"\r\n                        required>\r\n                        <option selected disabled value=\"\">Selecione a materia</option>\r\n                        <option *ngFor=\"let materia of materias\" [ngValue]=\"materia.id\">\r\n                            {{materia.nome}}\r\n                        </option>\r\n                    </select>\r\n\r\n                    <div *ngIf=\"submitted && formulario.materia.errors\" class=\"invalid-feedback\">\r\n                        <div *ngIf=\"formulario.materia.errors.required\">Materia é obrigatório</div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <button [disabled]=\"loading\" type=\"submit\" class=\"btn btn-primary\">\r\n                        <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\r\n                        Gerar QR Code\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>","import { Curso } from \"./curso\";\r\nimport { Periodo } from \"./periodo\";\r\n\r\nexport class User {\r\n    id: number;\r\n    email: string;\r\n    senha: string;\r\n    rgm: string;\r\n    cpf: string;\r\n    nome: string;\r\n    sobrenome: string;\r\n    tipoUsuario: TipoUser;\r\n    token?: string;\r\n    periodo: Periodo;\r\n    curso: Curso[];\r\n}\r\n\r\nexport enum TipoUser {\r\n    aluno,\r\n    professor,\r\n    adm\r\n}","import { Injectable } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\nimport { Alert, AlertType } from '../models/alert';\r\n\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AlertService {\r\n    private subject = new Subject<Alert>();\r\n    private defaultId = 'default-alert';\r\n\r\n    // enable subscribing to alerts observable\r\n    onAlert(id = this.defaultId): Observable<Alert> {\r\n        return this.subject.asObservable().pipe(filter(x => x && x.id === id));\r\n    }\r\n\r\n    // convenience methods\r\n    success(message: string, options?: any) {\r\n        this.alert(new Alert({ ...options, type: AlertType.Success, message, }));\r\n    }\r\n\r\n    error(message: string, options?: any) {\r\n        this.alert(new Alert({ ...options, type: AlertType.Error, message }));\r\n    }\r\n\r\n    info(message: string, options?: any) {\r\n        this.alert(new Alert({ ...options, type: AlertType.Info, message }));\r\n    }\r\n\r\n    warn(message: string, options?: any) {\r\n        this.alert(new Alert({ ...options, type: AlertType.Warning, message }));\r\n    }\r\n\r\n    // main alert method    \r\n    alert(alert: Alert) {\r\n        alert.id = alert.id || this.defaultId;\r\n        this.subject.next(alert);\r\n    }\r\n\r\n    // clear alerts\r\n    clear(id = this.defaultId) {\r\n        this.subject.next(new Alert({ id }));\r\n    }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:4000'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { first } from 'rxjs/operators';\r\nimport { AccountService } from '../../services/account.service';\r\nimport { AlertService } from '../../services/alert.service';\r\n\r\n@Component({\r\n    selector: 'app-login',\r\n    templateUrl: './login.component.html',\r\n    styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n    form: FormGroup;\r\n    loading = false;\r\n    submitted = false;\r\n\r\n    // get form fields\r\n    get formulario() { return this.form.controls; }\r\n\r\n    constructor(\r\n        private formBuilder: FormBuilder,\r\n        private route: ActivatedRoute,\r\n        private router: Router,\r\n        private accountService: AccountService,\r\n        private alertService: AlertService\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        // direciona pra home se ja tiver um usuario logado\r\n        if (this.accountService.userValue) {\r\n            this.router.navigate(['/']);\r\n        }\r\n\r\n        this.form = this.formBuilder.group({\r\n            username: ['', Validators.required],\r\n            password: ['', Validators.required]\r\n        });\r\n    }\r\n\r\n    login() {\r\n        this.submitted = true;\r\n\r\n        this.alertService.clear();\r\n\r\n        if (this.form.invalid) {\r\n            return;\r\n        }\r\n\r\n        this.loading = true;\r\n\r\n        this.accountService.login(this.formulario.username.value, this.formulario.password.value)\r\n            .pipe(first())\r\n            .subscribe(\r\n                data => {\r\n                    this.router.navigate(['/']); //home\r\n                },\r\n                error => {\r\n                    this.alertService.error(error);\r\n                    this.loading = false;\r\n                });\r\n    }\r\n}","<section class=\"vh-100 overflow-auto\" style=\"background-color: #01376d;\">\r\n  <div class=\"container py-5 h-100\">\r\n    <div class=\"row d-flex justify-content-center align-items-center h-100\">\r\n      <div class=\"col-12 col-md-8 col-lg-6 col-xl-5\">\r\n        <div class=\"card shadow-2-strong\" style=\"border-radius: 1rem;\">\r\n          <div class=\"card-body p-4\">\r\n\r\n            <div class=\"d-flex justify-content-center\">\r\n              <div style=\"width: 200px;\" class=\"d-flex justify-content-center\">\r\n                <img class=\"mb-4\" style=\"width: 100%;\" src=\"assets/logo.png\">\r\n              </div>\r\n            </div>\r\n\r\n            <form [formGroup]=\"form\" (ngSubmit)=\"login()\">\r\n\r\n              <div class=\"form-outline mb-4\">\r\n                <label class=\"form-label\" for=\"username\">Acesso</label>\r\n                <input type=\"text\" formControlName=\"username\" class=\"form-control\"\r\n                  [ngClass]=\"{ 'is-invalid': submitted && formulario.username.errors }\"\r\n                  placeholder=\"Insira seu email, rgm ou cpf\" />\r\n                <div *ngIf=\"submitted && formulario.username.errors\" class=\"invalid-feedback\">\r\n                  <div *ngIf=\"formulario.username.errors.required\">Acesso é obrigatório</div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"form-outline mb-4\">\r\n                <label class=\"form-label\" for=\"password\">Senha</label>\r\n                <input type=\"password\" formControlName=\"password\" class=\"form-control\"\r\n                  [ngClass]=\"{ 'is-invalid': submitted && formulario.password.errors }\"\r\n                  placeholder=\"Insira sua senha\" />\r\n                <div *ngIf=\"submitted && formulario.password.errors\" class=\"invalid-feedback\">\r\n                  <div *ngIf=\"formulario.password.errors.required\">Senha é obrigatório</div>\r\n                </div>\r\n                <p class=\"small mb-2 pb-lg-2 d-flex justify-content-end\"><a class=\"text-muted\" href=\"#!\">Esqueceu a\r\n                    senha?</a></p>\r\n              </div>\r\n\r\n              <button [disabled]=\"loading\" class=\"btn btn-block mb-4\"\r\n                style=\"background-color: #00346d; color: #fff;\">\r\n                <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\r\n                Login\r\n              </button>\r\n              <p>Não possui conta ainda? <a routerLink=\"/cadastro\" class=\"text-blue-50 fw-bold\">Cadastre-se</a></p>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>","import { Component, OnInit } from '@angular/core';\r\nimport { first } from 'rxjs/operators';\r\nimport { AccountService } from 'src/app/services/account.service';\r\nimport { AlertService } from 'src/app/services/alert.service';\r\nimport { TipoUser, User } from '../../models/user';\r\n\r\n@Component({\r\n  selector: 'app-professores',\r\n  templateUrl: './professores.component.html',\r\n  styleUrls: ['./professores.component.css']\r\n})\r\nexport class ProfessoresComponent implements OnInit {\r\n  private usuarios: User[] = [];\r\n\r\n  usuarioFiltered: User[] = [];\r\n  filterBy!: string;\r\n\r\n  notFound = false;\r\n\r\n  set filter(value: string) {\r\n    this.filterBy = value;\r\n\r\n    if (this.filterBy.includes('@')) {\r\n      this.usuarioFiltered = this.usuarios.filter((user: User) => user.email.toLocaleLowerCase().indexOf(this.filterBy.toLowerCase()) > -1);\r\n    }\r\n    else if (this.filterBy.length <= 8 && this.isNum(this.filterBy)) {\r\n      this.usuarioFiltered = this.usuarios.filter((user: User) => user.rgm.toLocaleLowerCase().indexOf(this.filterBy.toLowerCase()) > -1);\r\n    }\r\n    else if (this.filterBy.length > 8 && this.isNum(this.filterBy)) {\r\n      this.usuarioFiltered = this.usuarios.filter((user: User) => user.cpf.toLocaleLowerCase().indexOf(this.filterBy.toLowerCase()) > -1);\r\n    }\r\n    else {\r\n      this.usuarioFiltered = this.usuarios.filter((user: User) => user.nome.toLocaleLowerCase().indexOf(this.filterBy.toLowerCase()) > -1);\r\n    }\r\n  }\r\n\r\n  get filter() {\r\n    return this.filterBy;\r\n  }\r\n\r\n  constructor(private accountService: AccountService,\r\n    private alertService: AlertService) { }\r\n\r\n  ngOnInit() {\r\n    this.getAllByRole();\r\n  }\r\n\r\n  deleteUser(id: number) {\r\n    const user = <any>this.usuarioFiltered.find(u => u.id === id);\r\n    user.isDeleting = true;\r\n\r\n    this.accountService.delete(id)\r\n      .pipe(first())\r\n      .subscribe(\r\n        () => {\r\n          this.getAllByRole();\r\n        },\r\n        error => {\r\n          this.alertService.error(error);\r\n        });\r\n\r\n  }\r\n\r\n  private getAllByRole() {\r\n    this.accountService.getAllByRole(TipoUser.professor)\r\n      .pipe(first())\r\n      .subscribe(\r\n        users => {\r\n          if (users.length == 0) {\r\n            this.notFound = true;\r\n          }\r\n\r\n          this.usuarios = users;\r\n          this.usuarioFiltered = this.usuarios;\r\n        },\r\n        error => {\r\n          this.alertService.error(error);\r\n        });\r\n  }\r\n\r\n  private isNum(value: string): boolean {\r\n    console.log(/^\\d+$/.test(value))\r\n    return /^\\d+$/.test(value);\r\n  }\r\n}\r\n","<div class=\"p-4\">\r\n    <div class=\"container\">\r\n        <h1>Professores</h1>\r\n\r\n        <div class=\"form-group row\">\r\n            <div class=\"col-sm-5\">\r\n                <input [(ngModel)]=\"filter\" class=\"form-control\" placeholder=\"Insira o email, rgm ou cpf\">\r\n            </div>\r\n        </div>\r\n\r\n        <div style=\"display: flex;justify-content: end;\">\r\n            <a routerLink=\"/professores/cadastro\" class=\"btn btn-sm btn-success mb-2\">Novo Professor(a)</a>\r\n        </div>\r\n\r\n        <table class=\"table table-striped\">\r\n            <thead>\r\n                <tr>\r\n                    <th style=\"width: 30%\">Nome</th>\r\n                    <th style=\"width: 30%\">Sobrenome</th>\r\n                    <th style=\"width: 30%\">RGM</th>\r\n                    <th style=\"width: 10%\"></th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr *ngFor=\"let user of usuarioFiltered\">\r\n                    <td>{{user.nome}}</td>\r\n                    <td>{{user.sobrenome}}</td>\r\n                    <td>{{user.rgm}}</td>\r\n                    <td style=\"white-space: nowrap\">\r\n                        <a routerLink=\"/professores/editar/{{user.id}}\" class=\"btn btn-sm btn-primary mr-1\">Editar</a>\r\n                        <button (click)=\"deleteUser(user.id)\" class=\"btn btn-sm btn-danger btn-delete-user\"\r\n                            [disabled]=\"user.isDeleting\">\r\n                            <span *ngIf=\"user.isDeleting\" class=\"spinner-border spinner-border-sm\"></span>\r\n                            <span *ngIf=\"!user.isDeleting\">Deletar</span>\r\n                        </button>\r\n                    </td>\r\n                </tr>\r\n                <tr *ngIf=\"!usuarioFiltered && !notFound\">\r\n                    <td colspan=\"4\" class=\"text-center\">\r\n                        <span class=\"spinner-border spinner-border-lg align-center\"></span>\r\n                    </td>\r\n                </tr>\r\n                <tr *ngIf=\"notFound\">\r\n                    <td colspan=\"4\" class=\"text-center\">\r\n                        <span class=\"align-center\">Sem professores cadastrados</span>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { first } from 'rxjs/operators';\r\nimport { TipoUser, User } from '../../models/user';\r\nimport { AccountService } from '../../services/account.service';\r\nimport { AlertService } from '../../services/alert.service';\r\n\r\n@Component({\r\n  selector: 'app-alunos',\r\n  templateUrl: './alunos.component.html',\r\n  styleUrls: ['./alunos.component.css']\r\n})\r\nexport class AlunosComponent implements OnInit {\r\n  private usuarios: User[] = [];\r\n\r\n  usuarioFiltered: User[] = [];\r\n  filterBy!: string;\r\n\r\n  notFound = false;\r\n\r\n  set filter(value: string) {\r\n    this.filterBy = value;\r\n\r\n    if (this.filterBy.includes('@')) {\r\n      this.usuarioFiltered = this.usuarios.filter((user: User) => user.email.toLocaleLowerCase().indexOf(this.filterBy.toLowerCase()) > -1);\r\n    }\r\n    else if (this.filterBy.length <= 8 && this.isNum(this.filterBy)) {\r\n      this.usuarioFiltered = this.usuarios.filter((user: User) => user.rgm.toLocaleLowerCase().indexOf(this.filterBy.toLowerCase()) > -1);\r\n    }\r\n    else if (this.filterBy.length > 8 && this.isNum(this.filterBy)) {\r\n      this.usuarioFiltered = this.usuarios.filter((user: User) => user.cpf.toLocaleLowerCase().indexOf(this.filterBy.toLowerCase()) > -1);\r\n    }\r\n    else {\r\n      this.usuarioFiltered = this.usuarios.filter((user: User) => user.nome.toLocaleLowerCase().indexOf(this.filterBy.toLowerCase()) > -1);\r\n    }\r\n  }\r\n\r\n  get filter() {\r\n    return this.filterBy;\r\n  }\r\n\r\n  constructor(private accountService: AccountService,\r\n    private alertService: AlertService) { }\r\n\r\n  ngOnInit() {\r\n    this.getAllByRole();\r\n  }\r\n\r\n  deleteUser(id: number) {\r\n    const user = <any>this.usuarioFiltered.find(u => u.id === id);\r\n    user.isDeleting = true;\r\n\r\n    this.accountService.delete(id)\r\n      .pipe(first())\r\n      .subscribe(\r\n        () => {\r\n          this.getAllByRole();\r\n        },\r\n        error => {\r\n          this.alertService.error(error);\r\n        });\r\n\r\n  }\r\n\r\n  private getAllByRole() {\r\n    this.accountService.getAllByRole(TipoUser.aluno)\r\n      .pipe(first())\r\n      .subscribe(\r\n        users => {\r\n          if (users.length == 0) {\r\n            this.notFound = true;\r\n          }\r\n\r\n          this.usuarios = users;\r\n          this.usuarioFiltered = this.usuarios;\r\n        },\r\n        error => {\r\n          this.alertService.error(error);\r\n        });\r\n  }\r\n\r\n  private isNum(value: string): boolean {\r\n    console.log(/^\\d+$/.test(value))\r\n    return /^\\d+$/.test(value);\r\n  }\r\n}\r\n","<div class=\"p-4\">\r\n    <div class=\"container\">\r\n        <h1>Alunos</h1>\r\n\r\n        <div class=\"form-group row\">\r\n            <div class=\"col-sm-5\">\r\n                <input [(ngModel)]=\"filter\" class=\"form-control\" placeholder=\"Insira o email, rgm ou cpf\">\r\n            </div>\r\n        </div>\r\n        \r\n        <div style=\"display: flex;justify-content: end;\">\r\n            <a routerLink=\"/alunos/cadastro\" class=\"btn btn-sm btn-success mb-2\">Novo Aluno</a>\r\n        </div>\r\n\r\n        <table class=\"table table-striped\">\r\n            <thead>\r\n                <tr>\r\n                    <th style=\"width: 30%\">Nome</th>\r\n                    <th style=\"width: 30%\">Sobrenome</th>\r\n                    <th style=\"width: 30%\">RGM</th>\r\n                    <th style=\"width: 10%\"></th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr *ngFor=\"let user of usuarioFiltered\">\r\n                    <td>{{user.nome}}</td>\r\n                    <td>{{user.sobrenome}}</td>\r\n                    <td>{{user.rgm}}</td>\r\n                    <td style=\"white-space: nowrap\">\r\n                        <a routerLink=\"/alunos/editar/{{user.id}}\" class=\"btn btn-sm btn-primary mr-1\">Editar</a>\r\n                        <button (click)=\"deleteUser(user.id)\" class=\"btn btn-sm btn-danger btn-delete-user\"\r\n                            [disabled]=\"user.isDeleting\">\r\n                            <span *ngIf=\"user.isDeleting\" class=\"spinner-border spinner-border-sm\"></span>\r\n                            <span *ngIf=\"!user.isDeleting\">Deletar</span>\r\n                        </button>\r\n                    </td>\r\n                </tr>\r\n                <tr *ngIf=\"!usuarioFiltered && !notFound\">\r\n                    <td colspan=\"4\" class=\"text-center\">\r\n                        <span class=\"spinner-border spinner-border-lg align-center\"></span>\r\n                    </td>\r\n                </tr>\r\n                <tr *ngIf=\"notFound\">\r\n                    <td colspan=\"4\" class=\"text-center\">\r\n                        <span class=\"align-center\">Sem alunos cadastrados</span>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n</div>","export enum Periodo {\r\n    manha,\r\n    tarde,\r\n    noite,\r\n    integral\r\n}\r\n","import { Materia } from \"./materia\";\r\n\r\nexport class Curso {\r\n    id: number;\r\n    nome: string;\r\n    materias: Materia[]\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { AccountService } from '../services/account.service';\r\nimport { environment } from '../../environments/environment';\r\n@Injectable()\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n    constructor(private accountService: AccountService) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        // add auth header with jwt if user is logged in and request is to the api url\r\n        const user = this.accountService.userValue;\r\n        const isLoggedIn = user && user.token;\r\n        const isApiUrl = request.url.startsWith(environment.apiUrl);\r\n        if (isLoggedIn && isApiUrl) {\r\n            request = request.clone({\r\n                setHeaders: {\r\n                    Authorization: `Bearer ${user.token}`\r\n                }\r\n            });\r\n        }\r\n\r\n        return next.handle(request);\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { AccountService } from '../services/account.service';\r\n\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n    constructor(private accountService: AccountService) {}\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        return next.handle(request).pipe(catchError(err => {\r\n            if (err.status === 401) {\r\n                // auto logout if 401 response returned from api\r\n                this.accountService.logout();\r\n            }\r\n            \r\n            const error = err.error.message || err.statusText;\r\n            return throwError(error);\r\n        }))\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { AccountService } from '../services/account.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(\r\n    private router: Router,\r\n    private accountService: AccountService\r\n  ) { }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n    const user = this.accountService.userValue;\r\n    if (user) {\r\n      // check a permissao do usuario\r\n      if (route.data.permissao && route.data.permissao.indexOf(user.tipoUsuario) === -1) {\r\n        // direciona para home caso nao esteja autorizado\r\n        this.router.navigate(['/']);\r\n        return false;\r\n      }\r\n      // authorised so return true\r\n      return true;\r\n    }\r\n\r\n    // not logged in so redirect to login page with the return url\r\n    this.router.navigate(['/login']);\r\n    return false;\r\n  }\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { first } from 'rxjs/operators';\r\nimport { Curso } from 'src/app/models/curso';\r\nimport { CursoService } from 'src/app/services/curso.service';\r\nimport { Periodo } from '../../models/periodo';\r\nimport { Semestre } from '../../models/semestre';\r\nimport { TipoUser } from '../../models/user';\r\nimport { AccountService } from '../../services/account.service';\r\nimport { AlertService } from '../../services/alert.service';\r\n\r\n@Component({\r\n    selector: 'app-cadastro',\r\n    templateUrl: './cadastro.component.html',\r\n    styleUrls: ['./cadastro.component.css']\r\n})\r\nexport class CadastroComponent implements OnInit {\r\n    form: FormGroup;\r\n    loading = false;\r\n    submitted = false;\r\n\r\n    cursos: Curso[] = [];\r\n\r\n    semestres = Semestre;\r\n    periodos = Periodo;\r\n\r\n    get valuesSemestres() {\r\n        var values = Object.values(this.semestres);\r\n        return values.slice(values.length / 2);\r\n    }\r\n\r\n    get valuesPeriodos() {\r\n        var keys = Object.keys(this.periodos);\r\n\r\n        keys.keys\r\n        return keys.slice(keys.length / 2);\r\n    }\r\n\r\n    //get form fields\r\n    get formulario() { return this.form.controls; }\r\n\r\n    constructor(\r\n        private formBuilder: FormBuilder,\r\n        private route: ActivatedRoute,\r\n        private router: Router,\r\n        private accountService: AccountService,\r\n        private alertService: AlertService,\r\n        private cursosService: CursoService\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        // direciona pra home se ja tiver um usuario logado\r\n        if (this.accountService.userValue) {\r\n            this.router.navigate(['/']);\r\n        }\r\n\r\n        this.getCursos();\r\n\r\n        this.form = this.formBuilder.group({\r\n            nome: ['', [Validators.required]],\r\n            sobrenome: ['', [Validators.required]],\r\n            rgm: ['', [Validators.required, Validators.minLength(8)]],\r\n            cpf: ['', [Validators.required, Validators.minLength(11)]],\r\n            email: ['', [Validators.required, Validators.email]],\r\n            senha: ['', [Validators.required, Validators.minLength(6)]],\r\n            tipoUsuario: [TipoUser.aluno, Validators.required],\r\n            curso: ['', [Validators.required]],\r\n            semestre: ['', [Validators.required]],\r\n            periodo: ['', [Validators.required]],\r\n        });\r\n\r\n    }\r\n\r\n    registrar() {\r\n        this.submitted = true;\r\n\r\n        this.alertService.clear();\r\n\r\n        if (this.form.invalid) {\r\n            return;\r\n        }\r\n\r\n        this.loading = true;\r\n\r\n        this.accountService.register(this.form.value)\r\n            .pipe(first())\r\n            .subscribe(\r\n                () => {\r\n                    // this.alertService.success('Cadastrado com sucesso', { keepAfterRouteChange: true });\r\n                    this.router.navigate(['/login'], { relativeTo: this.route });\r\n                },\r\n                error => {\r\n                    this.alertService.error(error);\r\n                    this.loading = false;\r\n                });\r\n    }\r\n\r\n    KeyFromPeriodo(key: string) {\r\n        return this.periodos[key]\r\n    }\r\n\r\n    private async getCursos() {\r\n        this.cursosService.getAll()\r\n            .pipe(first())\r\n            .subscribe(\r\n                data => {\r\n                    this.cursos = data;\r\n                },\r\n                error => {\r\n                    this.alertService.error(error);\r\n                });\r\n    }\r\n}","<section class=\"h-100 h-custom overflow-auto bgsection\" >\r\n    <div class=\"container py-5 h-100\">\r\n        <div class=\"row d-flex justify-content-center align-items-center h-100\">\r\n            <div class=\"col-12\">\r\n                <div class=\"card card-registration card-registration-2\" style=\"border-radius: 15px;\">\r\n                    <div class=\"card-body p-0\">\r\n                        <form [formGroup]=\"form\" (ngSubmit)=\"registrar()\">\r\n                            <div class=\"row g-0\">\r\n                                <div class=\"col-lg-6\">\r\n                                    <div class=\"p-5\">\r\n                                        <div class=\"d-flex justify-content-center\">\r\n                                            <div style=\"width: 200px;\" class=\"d-flex justify-content-center\">\r\n                                                <img class=\"mb-5\" style=\"width: 100%;\" src=\"assets/logo.png\">\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"row\">\r\n                                            <div class=\"col-md-6 pb-2\">\r\n\r\n                                                <div class=\"form-outline\">\r\n                                                    <label for=\"nome\">Nome</label>\r\n                                                    <input type=\"text\" formControlName=\"nome\" class=\"form-control\"\r\n                                                        [ngClass]=\"{ 'is-invalid': submitted && formulario.nome.errors }\"\r\n                                                        placeholder=\"Insira seu nome\" />\r\n                                                    <div *ngIf=\"submitted && formulario.nome.errors\"\r\n                                                        class=\"invalid-feedback\">\r\n                                                        <div *ngIf=\"formulario.nome.errors.required\">Nome é obrigatório\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                            </div>\r\n                                            <div class=\"col-md-6 pb-2\">\r\n\r\n                                                <div class=\"form-outline\">\r\n                                                    <label for=\"sobrenome\">Sobrenome</label>\r\n                                                    <input type=\"text\" formControlName=\"sobrenome\" class=\"form-control\"\r\n                                                        [ngClass]=\"{ 'is-invalid': submitted && formulario.sobrenome.errors }\"\r\n                                                        placeholder=\"Insira seu sobrenome\" />\r\n                                                    <div *ngIf=\"submitted && formulario.sobrenome.errors\"\r\n                                                        class=\"invalid-feedback\">\r\n                                                        <div *ngIf=\"formulario.sobrenome.errors.required\">Sobrenome é\r\n                                                            obrigatório</div>\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div class=\"pb-2\">\r\n                                            <div class=\"form-outline\">\r\n                                                <label for=\"cpf\">CPF</label>\r\n                                                <input type=\"text\" formControlName=\"cpf\" class=\"form-control\"\r\n                                                    [ngClass]=\"{ 'is-invalid': submitted && formulario.cpf.errors }\"\r\n                                                    placeholder=\"Insira seu CPF\" maxlength=\"11\" />\r\n                                                <div *ngIf=\"submitted && formulario.cpf.errors\"\r\n                                                    class=\"invalid-feedback\">\r\n                                                    <div *ngIf=\"formulario.cpf.errors.required\">CPF é obrigatório</div>\r\n                                                    <div *ngIf=\"formulario.cpf.errors.minlength\">CPF precisa ter ao\r\n                                                        menos 11 caracteres</div>\r\n                                                    <div *ngIf=\"formulario.cpf.errors.maxlength\">CPF precisa ter no\r\n                                                        maximo 11 caracteres</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div class=\"pb-2\">\r\n                                            <div class=\"form-outline\">\r\n                                                <label for=\"email\">Email</label>\r\n                                                <input type=\"text\" formControlName=\"email\" class=\"form-control\"\r\n                                                    [ngClass]=\"{ 'is-invalid': submitted && formulario.email.errors }\"\r\n                                                    placeholder=\"Insira seu email\" />\r\n                                                <div *ngIf=\"submitted && formulario.email.errors\"\r\n                                                    class=\"invalid-feedback\">\r\n                                                    <div *ngIf=\"formulario.email.errors.required\">Email é obrigatório\r\n                                                    </div>\r\n                                                    <div *ngIf=\"formulario.email.errors.email\">Email é obrigatório</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n                                        <div class=\" pb-2\">\r\n                                            <div class=\"form-outline\">\r\n                                                <label for=\"senha\">Senha</label>\r\n                                                <input type=\"password\" formControlName=\"senha\" class=\"form-control\"\r\n                                                    [ngClass]=\"{ 'is-invalid': submitted && formulario.senha.errors }\"\r\n                                                    placeholder=\"Insira sua senha\" />\r\n                                                <div *ngIf=\"submitted && formulario.senha.errors\"\r\n                                                    class=\"invalid-feedback\">\r\n                                                    <div *ngIf=\"formulario.senha.errors.required\">Senha é obrigatório\r\n                                                    </div>\r\n                                                    <div *ngIf=\"formulario.senha.errors.minlength\">Senha precisa ter ao\r\n                                                        menos 6\r\n                                                        caracteres</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-lg-6 bg-indigo clText\">\r\n                                    <div class=\"p-5\">\r\n                                        <h3 class=\"fw-normal mb-5\">Informações sobre sua matricula</h3>\r\n\r\n                                        <div class=\"pb-2\">\r\n                                            <div class=\"form-outline form-white\">\r\n                                                <label for=\"rgm\">RGM</label>\r\n                                                <input type=\"text\" formControlName=\"rgm\" class=\"form-control\"\r\n                                                    [ngClass]=\"{ 'is-invalid': submitted && formulario.rgm.errors }\"\r\n                                                    placeholder=\"Insira seu RGM\" maxlength=\"8\" />\r\n                                                <div *ngIf=\"submitted && formulario.rgm.errors\"\r\n                                                    class=\"invalid-feedback\">\r\n                                                    <div *ngIf=\"formulario.rgm.errors.required\">RGM é obrigatório</div>\r\n                                                    <div *ngIf=\"formulario.rgm.errors.minlength\">RGM precisa ter ao\r\n                                                        menos 8\r\n                                                        caracteres</div>\r\n                                                    <div *ngIf=\"formulario.rgm.errors.maxlength\">RGM precisa ter no\r\n                                                        maximo 8\r\n                                                        caracteres</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div class=\"pb-2\">\r\n                                            <label for=\"curso\">Curso</label>\r\n                                            <select formControlName=\"curso\"\r\n                                                [ngClass]=\"{ 'is-invalid': submitted && formulario.curso.errors }\"\r\n                                                class=\"form-select\" required>\r\n                                                <option selected disabled value=\"\">Selecione seu curso</option>\r\n                                                <option *ngFor=\"let curso of cursos\" [ngValue]=\"curso.id\">\r\n                                                    {{curso.nome}}\r\n                                                </option>\r\n                                            </select>\r\n\r\n                                            <div *ngIf=\"submitted && formulario.curso.errors\" class=\"invalid-feedback\">\r\n                                                <div *ngIf=\"formulario.curso.errors.required\">Curso é obrigatório</div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div class=\"pb-2\">\r\n                                            <label for=\"semestre\">Semestre</label>\r\n                                            <select formControlName=\"semestre\"\r\n                                                [ngClass]=\"{ 'is-invalid': submitted && formulario.semestre.errors }\"\r\n                                                class=\"form-select\" required>\r\n                                                <option selected disabled value=\"\">Selecione seu semestre</option>\r\n                                                <option *ngFor=\"let semestre of valuesSemestres\" [ngValue]=\"semestre\">\r\n                                                    {{semestre}}° Semestre\r\n                                                </option>\r\n                                            </select>\r\n\r\n                                            <div *ngIf=\"submitted && formulario.semestre.errors\"\r\n                                                class=\"invalid-feedback\">\r\n                                                <div *ngIf=\"formulario.semestre.errors.required\">Semestre é obrigatório\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div class=\"mb-5 pb-2\">\r\n                                            <label for=\"turno\">Periodo</label>\r\n                                            <select formControlName=\"periodo\"\r\n                                                [ngClass]=\"{ 'is-invalid': submitted && formulario.periodo.errors }\"\r\n                                                class=\"form-select\" required>\r\n                                                <option selected disabled value=\"\">Selecione seu turno</option>\r\n                                                <option *ngFor=\"let periodo of valuesPeriodos\"\r\n                                                    [ngValue]=\"KeyFromPeriodo(periodo)\">\r\n                                                    {{periodo}}\r\n                                                </option>\r\n                                            </select>\r\n\r\n                                            <div *ngIf=\"submitted && formulario.periodo.errors\"\r\n                                                class=\"invalid-feedback\">\r\n                                                <div *ngIf=\"formulario.periodo.errors.required\">Periodo é obrigatório\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div class=\"row d-flex justify-content-center\">\r\n                                            <div class=\"col-md-4 mb-1\">\r\n                                                <button [disabled]=\"loading\" type=\"submit\" class=\"btn btn-block mb-3\"\r\n                                                    style=\"color: #fff; background-color: #01376d;\">\r\n                                                    <span *ngIf=\"loading\"\r\n                                                        class=\"spinner-border spinner-border-sm mr-1\"></span>\r\n                                                    Cadastre-se\r\n                                                </button>\r\n                                            </div>\r\n                                            <div class=\"col-md-4 mb-1\">\r\n                                                <a routerLink=\"../login\" class=\"btn btn-block mb-3\"\r\n                                                    style=\"color: #fff; background-color: #01376d;\">Voltar</a>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>","import { Component } from '@angular/core';\r\nimport { AccountService } from './services/account.service';\r\nimport { User } from './models/user';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'valida-presenca';\r\n}\r\n","<!-- nav -->\r\n<app-navbar></app-navbar>\r\n\r\n<!-- main container -->\r\n<div class=\"app-container\">\r\n  <alert></alert>\r\n  <router-outlet></router-outlet>\r\n</div>","import { Curso } from \"./curso\";\r\nimport { Materia } from \"./materia\";\r\nimport { User } from \"./user\";\r\n\r\nexport class Aula {\r\n    constructor(\r\n        public id: number,\r\n        public professor: User,\r\n        public curso: Curso,\r\n        public materia: Materia,\r\n        public inicio: Date,\r\n        public fim: Date,\r\n        public alunos: User[]\r\n    ) { }\r\n}","export class Alert {\r\n    id: string;\r\n    type: AlertType;\r\n    message: string;\r\n    autoClose: boolean;\r\n    keepAfterRouteChange: boolean;\r\n    fade: boolean;\r\n\r\n    constructor(init?:Partial<Alert>) {\r\n        Object.assign(this, init);\r\n    }\r\n}\r\n\r\nexport enum AlertType {\r\n    Success,\r\n    Error,\r\n    Info,\r\n    Warning\r\n}","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { NavbarComponent } from './components/navbar/navbar.component';\r\nimport { LoginComponent } from './pages/login/login.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { CadastroComponent } from './pages/cadastro/cadastro.component';\r\nimport { HomeComponent } from './pages/home/home.component';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { JwtInterceptor } from './auth/jwt.interceptor';\r\nimport { ErrorInterceptor } from './auth/error.interceptor';\r\nimport { FakeBackendInterceptor } from './auth/fake-backend';\r\nimport { AlertaComponent } from './components/alerta/alerta.component';\r\nimport { TrataTipoUserPipe } from './pipes/trata-tipo-user.pipe';\r\nimport { AlunosComponent } from './pages/alunos/alunos.component';\r\nimport { AddEditComponent } from './pages/add-edit/add-edit.component';\r\nimport { ProfessoresComponent } from './pages/professores/professores.component';\r\nimport { AulasComponent } from './pages/aulas/aulas.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavbarComponent,\r\n    LoginComponent,\r\n    CadastroComponent,\r\n    HomeComponent,\r\n    AlertaComponent,\r\n    TrataTipoUserPipe,\r\n    AlunosComponent,\r\n    AddEditComponent,\r\n    ProfessoresComponent,\r\n    AulasComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    FormsModule\r\n  ],\r\n  providers: [\r\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: FakeBackendInterceptor, multi: true }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { TipoUser, User } from '../models/user';\r\nimport { environment } from '../../environments/environment';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AccountService {\r\n  private userSubject: BehaviorSubject<User>;\r\n  public user: Observable<User>;\r\n\r\n  constructor(\r\n      private router: Router,\r\n      private http: HttpClient\r\n  ) {\r\n      this.userSubject = new BehaviorSubject<User>(JSON.parse(localStorage.getItem('usuario')));\r\n      this.user = this.userSubject.asObservable();\r\n  }\r\n\r\n  public get userValue(): User {\r\n      return this.userSubject.value;\r\n  }\r\n\r\n  login(acesso, senha) {\r\n      return this.http.post<User>(`${environment.apiUrl}/login`, { acesso, senha })\r\n          .pipe(map(user => {\r\n              // store user details and jwt token in local storage to keep user logged in between page refreshes\r\n              localStorage.setItem('usuario', JSON.stringify(user));\r\n              this.userSubject.next(user);\r\n              return user;\r\n          }));\r\n  }\r\n\r\n  logout() {\r\n      // remove user from local storage and set current user to null\r\n      localStorage.removeItem('usuario');\r\n      this.userSubject.next(null);\r\n      this.router.navigate(['/login']);\r\n  }\r\n\r\n  register(user: User) {\r\n      return this.http.post(`${environment.apiUrl}/cadastro`, user);\r\n  }\r\n\r\n  getAll() {\r\n      return this.http.get<User[]>(`${environment.apiUrl}/users`);\r\n  }\r\n\r\n  getAllByRole(tipoUser: TipoUser) {\r\n    return this.http.get<User[]>(`${environment.apiUrl}/usuarios/role/${tipoUser}`);\r\n}\r\n\r\n  getById(id: string) {\r\n      return this.http.get<User>(`${environment.apiUrl}/users/${id}`);\r\n  }\r\n\r\n  update(id, params) {\r\n      return this.http.put(`${environment.apiUrl}/users/${id}`, params)\r\n          .pipe(map(x => {\r\n              // update stored user if the logged in user updated their own record\r\n              if (id == this.userValue.id) {\r\n                  // update local storage\r\n                  const user = { ...this.userValue, ...params };\r\n                  localStorage.setItem('user', JSON.stringify(user));\r\n\r\n                  // publish updated user to subscribers\r\n                  this.userSubject.next(user);\r\n              }\r\n              return x;\r\n          }));\r\n  }\r\n\r\n  delete(id: number) {\r\n      return this.http.delete(`${environment.apiUrl}/users/${id}`)\r\n          .pipe(map(x => {\r\n              // auto logout if the logged in user deleted their own record\r\n              if (id == this.userValue.id) {\r\n                  this.logout();\r\n              }\r\n              return x;\r\n          }));\r\n  }\r\n}","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from '../../environments/environment';\r\nimport { Curso } from '../models/curso';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CursoService {\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n  \r\n  getAll() {\r\n    return this.http.get<Curso[]>(`${environment.apiUrl}/cursos`);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { TipoUser, User } from '../../models/user';\r\nimport { AccountService } from '../../services/account.service';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent {\r\n  tipoAluno = TipoUser.aluno;\r\n  tipoAdm = TipoUser.adm;\r\n  tipoProf = TipoUser.professor;\r\n\r\n  user: User;\r\n\r\n  constructor(private accountService: AccountService) {\r\n    this.accountService.user.subscribe(x => this.user = x);\r\n  }\r\n\r\n  logout() {\r\n    this.accountService.logout();\r\n  }\r\n\r\n}\r\n","<nav class=\"navbar navbar-expand navbar-dark bg-dark\" *ngIf=\"user\">\r\n  <div class=\"navbar-nav\">\r\n      <a class=\"nav-item nav-link\" routerLink=\"/\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\">Home</a>\r\n      <a class=\"nav-item nav-link\" routerLink=\"/users\" routerLinkActive=\"active\" *ngIf=\"user.tipoUsuario == tipoAluno\">Presencas</a>\r\n      <a class=\"nav-item nav-link\" routerLink=\"/aulas\" routerLinkActive=\"active\" *ngIf=\"user.tipoUsuario == tipoProf || tipoAdm\">Aulas</a>\r\n      <a class=\"nav-item nav-link\" routerLink=\"/professores\" routerLinkActive=\"active\" *ngIf=\"user.tipoUsuario == tipoAdm\">Professores</a>\r\n      <a class=\"nav-item nav-link\" routerLink=\"/alunos\" routerLinkActive=\"active\" *ngIf=\"user.tipoUsuario == tipoAdm\">Alunos</a>\r\n      <a class=\"nav-item nav-link\" (click)=\"logout()\">Sair</a>\r\n  </div>\r\n</nav>","export enum Semestre {\r\n    primeiro = 1,\r\n    segundo,\r\n    terceiro,\r\n    quarto,\r\n    quinto,\r\n    sexto,\r\n    setimo,\r\n    oitavo,\r\n    nono,\r\n    decimo,\r\n    decimoPrimeiro,\r\n    decimoSegundo\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpResponse, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable, of, throwError } from 'rxjs';\r\nimport { delay, mergeMap, materialize, dematerialize } from 'rxjs/operators';\r\nimport { TipoUser, User } from '../models/user';\r\nimport { Curso } from '../models/curso';\r\nimport { Materia } from '../models/materia';\r\nimport { Semestre } from '../models/semestre';\r\nimport { Aula } from '../models/aula';\r\n\r\n// array in local storage for registered users\r\nlet users = <User[]>JSON.parse(localStorage.getItem('usuarios')) || [];\r\nlet materias = <Materia[]>JSON.parse(localStorage.getItem('materias')) || [];\r\nlet cursos = <Curso[]>JSON.parse(localStorage.getItem('cursos')) || [];\r\nlet aulas = <Aula[]>JSON.parse(localStorage.getItem('aulas')) || [];\r\n\r\n// inicialize mock materias\r\n// **ads**\r\nlet materia = new Materia(0, 'Técnicas de programação', Semestre.primeiro);\r\ncadastroMateria(materia);\r\nmateria = new Materia(0, 'Banco de dados', Semestre.primeiro);\r\ncadastroMateria(materia);\r\nmateria = new Materia(0, 'Técnicas de desenvolvimento de algoritmos', Semestre.segundo);\r\ncadastroMateria(materia);\r\nmateria = new Materia(0, 'Programação orientada a objetos', Semestre.segundo);\r\ncadastroMateria(materia);\r\nmateria = new Materia(0, 'Programação web', Semestre.segundo);\r\ncadastroMateria(materia);\r\nmateria = new Materia(0, 'Engenharia de software', Semestre.terceiro);\r\ncadastroMateria(materia);\r\nmateria = new Materia(0, 'Fundamentos de estruturas de dados', Semestre.terceiro);\r\ncadastroMateria(materia);\r\n// **psicologia**\r\nmateria = new Materia(0, 'História da Psicologia', Semestre.primeiro);\r\ncadastroMateria(materia);\r\nmateria = new Materia(0, 'Psicologia social', Semestre.primeiro);\r\ncadastroMateria(materia);\r\nmateria = new Materia(0, 'Filosofia e ética', Semestre.segundo);\r\ncadastroMateria(materia);\r\nmateria = new Materia(0, 'práticas profissionais', Semestre.segundo);\r\ncadastroMateria(materia);\r\nmateria = new Materia(0, 'Fundamentos metodológicos', Semestre.segundo);\r\ncadastroMateria(materia);\r\nmateria = new Materia(0, 'Fenômenos e processos psicológicos básico', Semestre.terceiro);\r\ncadastroMateria(materia);\r\nmateria = new Materia(0, 'Fundamentos epistemológicos e históricos', Semestre.terceiro);\r\ncadastroMateria(materia);\r\n\r\n// inicialize mock cursos\r\nlet curso = new Curso();\r\ncurso.id = 0;\r\ncurso.nome = 'Análise e Desenvolvimento de Sistemas';\r\ncurso.materias = materias.slice(0, 6);\r\ncadastroCurso(curso);\r\ncurso = new Curso();\r\ncurso.id = 0;\r\ncurso.nome = 'Psicologia';\r\ncurso.materias = materias.slice(7, 13);\r\ncadastroCurso(curso);\r\n\r\n// inicialize mock users\r\nlet user: User = new User();\r\nuser.id = 0;\r\nuser.email = 'prof@email.com';\r\nuser.senha = 'prof123';\r\nuser.rgm = '12345678';\r\nuser.cpf = '11111111111';\r\nuser.nome = 'Andrea';\r\nuser.sobrenome = 'Martins';\r\nuser.tipoUsuario = TipoUser.professor;\r\nuser.curso = [cursos[0]];\r\ncadastroUser(user);\r\nuser = new User();\r\nuser.id = 0;\r\nuser.email = 'adm@email.com';\r\nuser.senha = 'adm123';\r\nuser.rgm = '87654321';\r\nuser.cpf = '11111111100';\r\nuser.nome = 'Adailton';\r\nuser.sobrenome = 'Pereira';\r\nuser.tipoUsuario = TipoUser.adm;\r\ncadastroUser(user);\r\n\r\n\r\n// inicialize mock aulas\r\ncadastroAula();\r\n\r\nfunction cadastroUser(usuario: User) {\r\n    let ok = true;\r\n\r\n    if (users.find(x => x.cpf === usuario.cpf)) {\r\n        ok = false;\r\n    }\r\n\r\n    if (ok) {\r\n        usuario.id = users.length ? Math.max(...users.map(x => x.id)) + 1 : 1;\r\n        users.push(usuario);\r\n        localStorage.setItem('usuarios', JSON.stringify(users));\r\n    }\r\n}\r\n\r\nfunction cadastroCurso(curso: Curso) {\r\n    let ok = true;\r\n\r\n    if (cursos.find(x => x.nome === curso.nome)) {\r\n        ok = false;\r\n    }\r\n\r\n    if (ok) {\r\n        curso.id = cursos.length ? Math.max(...cursos.map(x => x.id)) + 1 : 1;\r\n        cursos.push(curso);\r\n        localStorage.setItem('cursos', JSON.stringify(cursos));\r\n    }\r\n}\r\n\r\nfunction cadastroMateria(materia: Materia) {\r\n    let ok = true;\r\n\r\n    if (materias.find(x => x.nome === materia.nome)) {\r\n        ok = false;\r\n    }\r\n\r\n    if (ok) {\r\n        materia.id = materias.length ? Math.max(...materias.map(x => x.id)) + 1 : 1;\r\n        materias.push(materia);\r\n        localStorage.setItem('materias', JSON.stringify(materias));\r\n    }\r\n}\r\n\r\nfunction cadastroAula() {\r\n    let prof = users.filter(u => u.tipoUsuario == TipoUser.professor)[0];\r\n    let materias = prof.curso[0].materias.map(m => { return m });\r\n    let aula = new Aula(0, prof, prof.curso[0], materias[0], new Date('April 07, 2022 07:15:30'), new Date('April 07, 2022 07:20:00'), []);\r\n\r\n    let ok = true;\r\n\r\n    let dateInicio = new Date(aula.inicio).toLocaleString();\r\n\r\n    if (aulas.find(x => x.professor.cpf === aula.professor.cpf && (new Date(x.inicio).toLocaleString() >= dateInicio && new Date(x.fim).toLocaleString() <= dateInicio))) {\r\n        ok = false;\r\n    }\r\n\r\n    if (ok) {\r\n        aula.id = aulas.length ? Math.max(...aulas.map(x => x.id)) + 1 : 1;\r\n        aulas.push(aula);\r\n        localStorage.setItem('aulas', JSON.stringify(aulas));\r\n    }\r\n}\r\n\r\n@Injectable()\r\nexport class FakeBackendInterceptor implements HttpInterceptor {\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        const { url, method, headers, body } = request;\r\n\r\n        // wrap in delayed observable to simulate server api call\r\n        return of(null)\r\n            .pipe(mergeMap(handleRoute))\r\n            .pipe(materialize()) // call materialize and dematerialize to ensure delay even if an error is thrown (https://github.com/Reactive-Extensions/RxJS/issues/648)\r\n            .pipe(delay(500))\r\n            .pipe(dematerialize());\r\n\r\n        function handleRoute() {\r\n            switch (true) {\r\n                case url.endsWith('/login') && method === 'POST':\r\n                    return autenticar();\r\n                case url.endsWith('/cadastro') && method === 'POST':\r\n                    return cadastro();\r\n                case url.endsWith('/aulas') && method === 'POST':\r\n                    return cadastroAulas();\r\n                case url.endsWith('/cursos') && method === 'GET':\r\n                    return getCursos();\r\n                case url.match(/\\/aulas\\/\\d+$/) && method === 'GET':\r\n                    return getAulaByProfessor();\r\n                case url.match(/\\/role\\/\\d+$/) && method === 'GET':\r\n                    return getUsersByRole();\r\n                case url.match(/\\/users\\/\\d+$/) && method === 'GET':\r\n                    return getUserById();\r\n                case url.match(/\\/users\\/\\d+$/) && method === 'PUT':\r\n                    return updateUser();\r\n                case url.match(/\\/users\\/\\d+$/) && method === 'DELETE':\r\n                    return deleteUser();\r\n                default:\r\n                    // pass through any requests not handled above\r\n                    return next.handle(request);\r\n            }\r\n        }\r\n\r\n        // mock rotas\r\n        function autenticar() {\r\n            const { acesso, senha } = body;\r\n\r\n            let user: User;\r\n\r\n            if (acesso.includes('@')) {\r\n                //email\r\n                user = users.find(x => x.email === acesso && x.senha === senha);\r\n            }\r\n            else if (acesso.lenght === 8) {\r\n                //rgm\r\n                user = users.find(x => x.rgm === acesso && x.senha === senha);\r\n            }\r\n            else if (acesso.lenght == 11) {\r\n                //cpf\r\n                user = users.find(x => x.cpf === acesso && x.senha === senha);\r\n            }\r\n\r\n            if (!user) return error('Acesso ou Senha incorreto');\r\n            return ok({\r\n                id: user.id,\r\n                email: user.email,\r\n                senha: user.senha,\r\n                rgm: user.rgm,\r\n                cpf: user.cpf,\r\n                nome: user.nome,\r\n                sobrenome: user.sobrenome,\r\n                tipoUsuario: user.tipoUsuario,\r\n                token: 'fake-jwt-token',\r\n                curso: user.curso\r\n            })\r\n        }\r\n\r\n        function cadastro() {\r\n            const user = body\r\n\r\n            if (users.find(x => x.cpf === user.cpf)) {\r\n                return error('Já existe um CPF cadastrado')\r\n            }\r\n\r\n            if (users.find(x => x.rgm === user.rgm)) {\r\n                return error('Já existe um RGM cadastrado')\r\n            }\r\n\r\n            if (users.find(x => x.email === user.email)) {\r\n                return error('Já existe um email cadastrado')\r\n            }\r\n\r\n            user.id = users.length ? Math.max(...users.map(x => x.id)) + 1 : 1;\r\n            users.push(user);\r\n            localStorage.setItem('usuarios', JSON.stringify(users));\r\n            return ok();\r\n        }\r\n\r\n        function cadastroAulas() {\r\n            const aula = body\r\n\r\n            const dateInicio = new Date(aula.inicio).toLocaleString();\r\n\r\n            if (aulas.find(x => x.professor.cpf === aula.professor.cpf && (new Date(x.inicio).toLocaleString() >= dateInicio && new Date(x.fim).toLocaleString() <= dateInicio))) {\r\n                return error('Você já tem uma aula nesse periodo')\r\n            }\r\n\r\n            aula.id = aulas.length ? Math.max(...aulas.map(x => x.id)) + 1 : 1;\r\n            aulas.push(aula);\r\n            localStorage.setItem('aulas', JSON.stringify(users));\r\n            return ok();\r\n        }\r\n\r\n        function getAulaByProfessor() {\r\n            if (!isLoggedIn()) return unauthorized();\r\n\r\n            const aulasProfessor = aulas.filter(x => x.professor.id === idFromUrl());\r\n            return ok(aulasProfessor);\r\n        }\r\n\r\n        // function getAulaByHora() {\r\n        //     if (!isLoggedIn()) return unauthorized();\r\n\r\n        //     const urlParts = url.split('/');\r\n        //     const idProfessor = parseInt(urlParts[urlParts.length - 1]);\r\n        //     const dateAgora = new Date(urlParts[urlParts.length - 2]).toLocaleString();\r\n\r\n        //     console.log(dateAgora)\r\n        //     console.log(aulas)\r\n\r\n        //     const aulasProfessor = aulas.filter(x => x.professor.id === idProfessor && (new Date(x.inicio).toLocaleString() >= dateAgora && new Date(x.fim).toLocaleString() <= dateAgora));\r\n        //     return ok(aulasProfessor);\r\n        // }\r\n\r\n        function getCursos() {\r\n            return ok(cursos);\r\n        }\r\n\r\n        function getUserById() {\r\n            if (!isLoggedIn()) return unauthorized();\r\n\r\n            const user = users.find(x => x.id === idFromUrl());\r\n            return ok(user);\r\n        }\r\n\r\n        function getUsersByRole() {\r\n            if (!isLoggedIn()) return unauthorized();\r\n\r\n            const user = users.filter(x => x.tipoUsuario === idFromUrl());\r\n            return ok(user);\r\n        }\r\n\r\n        function updateUser() {\r\n            if (!isLoggedIn()) return unauthorized();\r\n\r\n            let params = body;\r\n            let user = users.find(x => x.id === idFromUrl());\r\n\r\n            // only update password if entered\r\n            if (!params.password) {\r\n                delete params.password;\r\n            }\r\n\r\n            // update and save user\r\n            Object.assign(user, params);\r\n            localStorage.setItem('usuarios', JSON.stringify(users));\r\n\r\n            return ok();\r\n        }\r\n\r\n        function deleteUser() {\r\n            if (!isLoggedIn()) return unauthorized();\r\n\r\n            users = users.filter(x => x.id !== idFromUrl());\r\n            localStorage.setItem('usuarios', JSON.stringify(users));\r\n            return ok();\r\n        }\r\n\r\n        // status code\r\n\r\n        function ok(body?) {\r\n            return of(new HttpResponse({ status: 200, body }))\r\n        }\r\n\r\n        function error(message) {\r\n            return throwError({ error: { message } });\r\n        }\r\n\r\n        function unauthorized() {\r\n            return throwError({ status: 401, error: { message: 'Unauthorised' } });\r\n        }\r\n\r\n        function isLoggedIn() {\r\n            return headers.get('Authorization') === 'Bearer fake-jwt-token';\r\n        }\r\n\r\n        function idFromUrl() {\r\n            const urlParts = url.split('/');\r\n            return parseInt(urlParts[urlParts.length - 1]);\r\n        }\r\n    }\r\n}","import { Pipe, PipeTransform } from '@angular/core';\nimport { TipoUser } from '../models/user';\n\n@Pipe({\n  name: 'trataTipoUser'\n})\nexport class TrataTipoUserPipe implements PipeTransform {\n\n  transform(value: TipoUser): unknown {\n    switch (value) {\n      case TipoUser.adm:\n        return 'Administrador';\n      case TipoUser.aluno:\n        return 'Aluno';\n      case TipoUser.professor:\n        return 'Professor(a)';\n    }\n  }\n\n}\n","import { Semestre } from \"./semestre\";\r\n\r\nexport class Materia {\r\n    constructor(\r\n        public id: number,\r\n        public nome: string,\r\n        public semestre: Semestre\r\n    ) { }\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { first } from 'rxjs/operators';\r\nimport { TipoUser } from '../../models/user';\r\nimport { AccountService } from '../../services/account.service';\r\nimport { AlertService } from '../../services/alert.service';\r\n\r\n@Component({\r\n  selector: 'app-add-edit',\r\n  templateUrl: './add-edit.component.html',\r\n  styleUrls: ['./add-edit.component.css']\r\n})\r\nexport class AddEditComponent implements OnInit {\r\n  form: FormGroup;\r\n  loading = false;\r\n  submitted = false;\r\n  isAddMode: boolean;\r\n  tipoExibicao: TipoUser;\r\n\r\n  private id: string;\r\n\r\n  get isAluno() {\r\n    return this.tipoExibicao === TipoUser.aluno;\r\n  }\r\n\r\n  get isProfessor() {\r\n    return this.tipoExibicao === TipoUser.professor;\r\n  }\r\n\r\n  //get form fields\r\n  get formulario() { return this.form.controls; }\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private accountService: AccountService,\r\n    private alertService: AlertService\r\n  ) {\r\n    this.route.data.subscribe(data => {\r\n      this.tipoExibicao = data.tipoExibicao;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.id = this.route.snapshot.params['id'];\r\n    this.isAddMode = !this.id;\r\n\r\n    //password not required in edit mode\r\n    const passwordValidators = [Validators.minLength(6)];\r\n    if (this.isAddMode) {\r\n      passwordValidators.push(Validators.required);\r\n    }\r\n\r\n    if (this.isAluno) {\r\n      this.form = this.formBuilder.group({\r\n        nome: ['', [Validators.required]],\r\n        sobrenome: ['', [Validators.required]],\r\n        rgm: ['', [Validators.required, Validators.minLength(8)]],\r\n        cpf: ['', [Validators.required, Validators.minLength(11)]],\r\n        email: ['', [Validators.required, Validators.email]],\r\n        senha: ['', passwordValidators],\r\n        tipoUsuario: [TipoUser.aluno, Validators.required],\r\n      });\r\n    }\r\n    else if (this.isProfessor) {\r\n\r\n      this.form = this.formBuilder.group({\r\n        nome: ['', [Validators.required]],\r\n        sobrenome: ['', [Validators.required]],\r\n        rgm: ['', [Validators.required, Validators.minLength(8)]],\r\n        cpf: ['', [Validators.required, Validators.minLength(11)]],\r\n        email: ['', [Validators.required, Validators.email]],\r\n        senha: ['', passwordValidators],\r\n        tipoUsuario: [TipoUser.professor, Validators.required],\r\n      });\r\n    }\r\n\r\n    if (!this.isAddMode) {\r\n      this.getUserById();\r\n    }\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    this.alertService.clear();\r\n\r\n    if (this.form.invalid) {\r\n      return;\r\n    }\r\n\r\n    this.loading = true;\r\n\r\n    if (this.isAddMode) {\r\n      this.createUser();\r\n    } else {\r\n      this.updateUser();\r\n    }\r\n  }\r\n\r\n  private getUserById() {\r\n    this.accountService.getById(this.id)\r\n      .pipe(first())\r\n      .subscribe(\r\n        user => {\r\n          this.formulario.nome.setValue(user.nome);\r\n          this.formulario.sobrenome.setValue(user.sobrenome);\r\n          this.formulario.rgm.setValue(user.rgm);\r\n          this.formulario.cpf.setValue(user.cpf);\r\n          this.formulario.email.setValue(user.email);\r\n        },\r\n        error => {\r\n          this.alertService.error(error);\r\n        });\r\n  }\r\n\r\n  private createUser() {\r\n    this.accountService.register(this.form.value)\r\n      .pipe(first())\r\n      .subscribe(\r\n        () => {\r\n          this.alertService.success('Cadastrado com sucesso', { keepAfterRouteChange: true });\r\n          this.router.navigate([this.isAluno ? '/alunos' : '/professores']);\r\n        },\r\n        error => {\r\n          this.alertService.error(error);\r\n          this.loading = false;\r\n        });\r\n  }\r\n\r\n  private updateUser() {\r\n    this.accountService.update(this.id, this.form.value)\r\n      .pipe(first())\r\n      .subscribe(\r\n        () => {\r\n          this.alertService.success('Atualizado com sucesso', { keepAfterRouteChange: true });\r\n          this.router.navigate([this.isAluno ? '/alunos' : '/professores']);\r\n        },\r\n        error => {\r\n          this.alertService.error(error);\r\n          this.loading = false;\r\n        });\r\n  }\r\n}","<div class=\"p-4\">\r\n    <div class=\"container\">\r\n        <h1 *ngIf=\"isAluno && isAddMode\">Cadastro Usuário</h1>\r\n        <h1 *ngIf=\"isAluno && !isAddMode\">Editar Usuário</h1>\r\n        <h1 *ngIf=\"isProfessor && isAddMode\">Cadastro Professores</h1>\r\n        <h1 *ngIf=\"isProfessor && !isAddMode\">Editar Professor</h1>\r\n\r\n        <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n            <div class=\"form-group\">\r\n                <label for=\"nome\">Nome</label>\r\n                <input type=\"text\" formControlName=\"nome\" class=\"form-control\"\r\n                    [ngClass]=\"{ 'is-invalid': submitted && formulario.nome.errors }\" placeholder=\"Insira seu nome\" />\r\n                <div *ngIf=\"submitted && formulario.nome.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"formulario.nome.errors.required\">Nome é obrigatório</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"sobrenome\">Sobrenome</label>\r\n                <input type=\"text\" formControlName=\"sobrenome\" class=\"form-control\"\r\n                    [ngClass]=\"{ 'is-invalid': submitted && formulario.sobrenome.errors }\" placeholder=\"Insira seu sobrenome\" />\r\n                <div *ngIf=\"submitted && formulario.sobrenome.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"formulario.sobrenome.errors.required\">Sobrenome é obrigatório</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"rgm\">RGM</label>\r\n                <input type=\"text\" formControlName=\"rgm\" class=\"form-control\"\r\n                    [ngClass]=\"{ 'is-invalid': submitted && formulario.rgm.errors }\" placeholder=\"Insira seu RGM\"\r\n                    maxlength=\"8\" />\r\n                <div *ngIf=\"submitted && formulario.rgm.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"formulario.rgm.errors.required\">RGM é obrigatório</div>\r\n                    <div *ngIf=\"formulario.rgm.errors.minlength\">RGM precisa ter ao menos 8 caracteres</div>\r\n                    <div *ngIf=\"formulario.rgm.errors.maxlength\">RGM precisa ter no maximo 8 caracteres</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"cpf\">CPF</label>\r\n                <input type=\"text\" formControlName=\"cpf\" class=\"form-control\"\r\n                    [ngClass]=\"{ 'is-invalid': submitted && formulario.cpf.errors }\" placeholder=\"Insira seu CPF\"\r\n                    maxlength=\"11\" />\r\n                <div *ngIf=\"submitted && formulario.cpf.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"formulario.cpf.errors.required\">CPF é obrigatório</div>\r\n                    <div *ngIf=\"formulario.cpf.errors.minlength\">CPF precisa ter ao menos 11 caracteres</div>\r\n                    <div *ngIf=\"formulario.cpf.errors.maxlength\">CPF precisa ter no maximo 11 caracteres</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"email\">Email</label>\r\n                <input type=\"text\" formControlName=\"email\" class=\"form-control\"\r\n                    [ngClass]=\"{ 'is-invalid': submitted && formulario.email.errors }\" placeholder=\"Insira seu email\" />\r\n                <div *ngIf=\"submitted && formulario.email.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"formulario.email.errors.required\">Email é obrigatório</div>\r\n                    <div *ngIf=\"formulario.email.errors.email\">Email é obrigatório</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"senha\">Senha</label>\r\n                <input type=\"senha\" formControlName=\"senha\" class=\"form-control\"\r\n                    [ngClass]=\"{ 'is-invalid': submitted && formulario.senha.errors }\" placeholder=\"Deixar em branco para manter a mesma senha\" />\r\n                <div *ngIf=\"submitted && formulario.senha.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"formulario.senha.errors.required\">Senha é obrigatório</div>\r\n                    <div *ngIf=\"formulario.senha.errors.minlength\">Senha precisa ter ao menos 6 caracteres</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <button [disabled]=\"loading\" class=\"btn btn-primary\">\r\n                    <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\r\n                    <ng-container *ngIf=\"isAddMode\">Cadastrar</ng-container>\r\n                    <ng-container *ngIf=\"!isAddMode\">Atualizar</ng-container>\r\n                </button>\r\n                <a *ngIf=\"isAluno\" routerLink=\"/alunos\" class=\"btn btn-link\">Voltar</a>\r\n                <a *ngIf=\"isProfessor\" routerLink=\"/professores\" class=\"btn btn-link\">Voltar</a>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>\r\n\r\n","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\r\nimport { Router, NavigationStart } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { Alert, AlertType } from '../../models/alert';\r\nimport { AlertService } from '../../services/alert.service';\r\n\r\n\r\n@Component({ selector: 'alert', templateUrl: 'alerta.component.html' })\r\n\r\nexport class AlertaComponent implements OnInit, OnDestroy {\r\n  @Input() id = 'default-alert';\r\n  @Input() fade = true;\r\n\r\n  alerts: Alert[] = [];\r\n  alertSubscription: Subscription;\r\n  routeSubscription: Subscription;\r\n\r\n  constructor(private router: Router, private alertService: AlertService) { }\r\n\r\n  ngOnInit() {\r\n    // subscribe to new alert notifications\r\n    this.alertSubscription = this.alertService.onAlert(this.id)\r\n      .subscribe(alert => {\r\n        // clear alerts when an empty alert is received\r\n        if (!alert.message) {\r\n          // filter out alerts without 'keepAfterRouteChange' flag\r\n          this.alerts = this.alerts.filter(x => x.keepAfterRouteChange);\r\n\r\n          // remove 'keepAfterRouteChange' flag on the rest\r\n          this.alerts.forEach(x => delete x.keepAfterRouteChange);\r\n          return;\r\n        }\r\n\r\n        // add alert to array\r\n        this.alerts.push(alert);\r\n\r\n        // auto close alert if required\r\n        if (alert.autoClose) {\r\n          setTimeout(() => this.removeAlert(alert), 3000);\r\n        }\r\n      });\r\n\r\n    // clear alerts on location change\r\n    this.routeSubscription = this.router.events.subscribe(event => {\r\n      if (event instanceof NavigationStart) {\r\n        this.alertService.clear(this.id);\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // unsubscribe to avoid memory leaks\r\n    this.alertSubscription.unsubscribe();\r\n    this.routeSubscription.unsubscribe();\r\n  }\r\n\r\n  removeAlert(alert: Alert) {\r\n    // check if already removed to prevent error on auto close\r\n    if (!this.alerts.includes(alert)) return;\r\n\r\n    if (this.fade) {\r\n      // fade out alert\r\n      this.alerts.find(x => x === alert).fade = true;\r\n\r\n      // remove alert after faded out\r\n      setTimeout(() => {\r\n        this.alerts = this.alerts.filter(x => x !== alert);\r\n      }, 250);\r\n    } else {\r\n      // remove alert\r\n      this.alerts = this.alerts.filter(x => x !== alert);\r\n    }\r\n  }\r\n\r\n  cssClass(alert: Alert) {\r\n    if (!alert) return;\r\n\r\n    const classes = ['alert', 'alert-dismissable', 'mt-4', 'container'];\r\n\r\n    const alertTypeClass = {\r\n      [AlertType.Success]: 'alert alert-success',\r\n      [AlertType.Error]: 'alert alert-danger',\r\n      [AlertType.Info]: 'alert alert-info',\r\n      [AlertType.Warning]: 'alert alert-warning'\r\n    }\r\n\r\n    classes.push(alertTypeClass[alert.type]);\r\n\r\n    if (alert.fade) {\r\n      classes.push('fade');\r\n    }\r\n\r\n    return classes.join(' ');\r\n  }\r\n}","<div *ngFor=\"let alert of alerts\" class=\"{{cssClass(alert)}}\">\r\n    <a class=\"close\" (click)=\"removeAlert(alert)\">&times;</a>\r\n    <span [innerHTML]=\"alert.message\"></span>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AuthGuard } from './auth/auth.guard';\r\nimport { TipoUser } from './models/user';\r\nimport { AddEditComponent } from './pages/add-edit/add-edit.component';\r\nimport { AlunosComponent } from './pages/alunos/alunos.component';\r\nimport { AulasComponent } from './pages/aulas/aulas.component';\r\nimport { CadastroComponent } from './pages/cadastro/cadastro.component';\r\nimport { HomeComponent } from './pages/home/home.component';\r\nimport { LoginComponent } from './pages/login/login.component';\r\nimport { ProfessoresComponent } from './pages/professores/professores.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: HomeComponent, canActivate: [AuthGuard] },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'cadastro', component: CadastroComponent },\r\n  { path: 'aulas', component: AulasComponent, canActivate: [AuthGuard], data: { permissao: [TipoUser.professor] } },\r\n  { path: 'alunos', component: AlunosComponent, canActivate: [AuthGuard], data: { permissao: [TipoUser.adm] } },\r\n  { path: 'alunos/editar/:id', component: AddEditComponent, canActivate: [AuthGuard], data: { permissao: [TipoUser.adm], tipoExibicao: TipoUser.aluno } },\r\n  { path: 'alunos/cadastro', component: AddEditComponent, canActivate: [AuthGuard], data: { permissao: [TipoUser.adm], tipoExibicao: TipoUser.aluno } },\r\n  { path: 'professores', component: ProfessoresComponent, canActivate: [AuthGuard], data: { permissao: [TipoUser.adm] } },\r\n  { path: 'professores/editar/:id', component: AddEditComponent, canActivate: [AuthGuard], data: { permissao: [TipoUser.adm], tipoExibicao: TipoUser.professor } },\r\n  { path: 'professores/cadastro', component: AddEditComponent, canActivate: [AuthGuard], data: { permissao: [TipoUser.adm], tipoExibicao: TipoUser.professor } },\r\n  { path: '**', redirectTo: '' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { first } from 'rxjs/operators';\r\nimport { Aula } from '../../models/aula';\r\nimport { User } from '../../models/user';\r\nimport { AulaService } from '../../services/aula.service';\r\nimport { AccountService } from '../../services/account.service';\r\nimport { AlertService } from '../../services/alert.service';\r\n\r\n@Component({\r\n  selector: 'app-aulas',\r\n  templateUrl: './aulas.component.html',\r\n  styleUrls: ['./aulas.component.css']\r\n})\r\nexport class AulasComponent implements OnInit {\r\n  private aulas: Aula[] = [];\r\n  private user: User;\r\n\r\n\r\n  aulasFiltered: Aula[] = [];\r\n  filterBy!: string;\r\n\r\n  notFound = false;\r\n\r\n  set filter(value: string) {\r\n    this.filterBy = value;\r\n\r\n    // if (this.filterBy.includes('@')) {\r\n    //   this.aulasFiltered = this.aulas.filter((aula: Aula) => user.email.toLocaleLowerCase().indexOf(this.filterBy.toLowerCase()) > -1);\r\n    // }\r\n    // else if (this.filterBy.length <= 8 && this.isNum(this.filterBy)) {\r\n    //   this.aulasFiltered = this.aulas.filter((user: User) => user.rgm.toLocaleLowerCase().indexOf(this.filterBy.toLowerCase()) > -1);\r\n    // }\r\n    // else if (this.filterBy.length > 8 && this.isNum(this.filterBy)) {\r\n    //   this.aulasFiltered = this.aulas.filter((user: User) => user.cpf.toLocaleLowerCase().indexOf(this.filterBy.toLowerCase()) > -1);\r\n    // }\r\n    // else {\r\n    //   this.aulasFiltered = this.aulas.filter((user: User) => user.nome.toLocaleLowerCase().indexOf(this.filterBy.toLowerCase()) > -1);\r\n    // }\r\n  }\r\n\r\n  get filter() {\r\n    return this.filterBy;\r\n  }\r\n\r\n  constructor(private accountService: AccountService,\r\n    private aulasService: AulaService,\r\n    private alertService: AlertService) { this.accountService.user.subscribe(x => this.user = x) }\r\n\r\n  ngOnInit() {\r\n    this.aulasService.getAllByProfessor(this.user.id)\r\n    .pipe(first())\r\n    .subscribe(\r\n      aulas => {\r\n        if (aulas.length == 0) {\r\n          this.notFound = true;\r\n        }\r\n\r\n        console.log(aulas)\r\n        this.aulas = aulas;\r\n        this.aulasFiltered = this.aulas;\r\n      },\r\n      error => {\r\n        this.alertService.error(error);\r\n      });\r\n  }\r\n\r\n  private isNum(value: string): boolean {\r\n    console.log(/^\\d+$/.test(value))\r\n    return /^\\d+$/.test(value);\r\n  }\r\n}","<div class=\"p-4\">\r\n    <div class=\"container\">\r\n        <h1>Aulas</h1>\r\n\r\n        <div class=\"form-group row\">\r\n            <div class=\"col-sm-5\">\r\n                <input [(ngModel)]=\"filter\" class=\"form-control\" placeholder=\"Insira o email, rgm ou cpf\">\r\n            </div>\r\n        </div>\r\n        \r\n        <div style=\"display: flex;justify-content: end;\">\r\n            <a routerLink=\"/alunos/cadastro\" class=\"btn btn-sm btn-success mb-2\">Nova Aula</a>\r\n        </div>\r\n\r\n        <table class=\"table table-striped\">\r\n            <thead>\r\n                <tr>\r\n                    <th style=\"width: 30%\">Aula</th>\r\n                    <th style=\"width: 30%\">Materia</th>\r\n                    <th style=\"width: 30%\">Professor</th>\r\n                    <th style=\"width: 10%\"></th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr *ngFor=\"let aula of aulasFiltered\">\r\n                    <td>{{aula.curso.nome}}</td>\r\n                    <td>{{aula.materia.nome}}</td>\r\n                    <td>{{aula.professor.nome}}</td>\r\n                    <td style=\"white-space: nowrap\">\r\n                        <a routerLink=\"/aulas/editar/{{aula.id}}\" class=\"btn btn-sm btn-primary mr-1\">Visualizar</a>                   \r\n                    </td>\r\n                </tr>\r\n                <tr *ngIf=\"!aulasFiltered && !notFound\">\r\n                    <td colspan=\"4\" class=\"text-center\">\r\n                        <span class=\"spinner-border spinner-border-lg align-center\"></span>\r\n                    </td>\r\n                </tr>\r\n                <tr *ngIf=\"notFound\">\r\n                    <td colspan=\"4\" class=\"text-center\">\r\n                        <span class=\"align-center\">Sem aulas cadastrados</span>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n</div>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}