{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth/auth.guard.ts","webpack:///src/app/auth/error.interceptor.ts","webpack:///src/app/auth/fake-backend.ts","webpack:///src/app/auth/jwt.interceptor.ts","webpack:///src/app/components/alerta/alerta.component.ts","webpack:///src/app/components/alerta/alerta.component.html","webpack:///src/app/components/navbar/navbar.component.ts","webpack:///src/app/components/navbar/navbar.component.html","webpack:///src/app/models/alert.ts","webpack:///src/app/pages/cadastro/cadastro.component.ts","webpack:///src/app/pages/cadastro/cadastro.component.html","webpack:///src/app/pages/home/home.component.ts","webpack:///src/app/pages/home/home.component.html","webpack:///src/app/pages/login/login.component.ts","webpack:///src/app/pages/login/login.component.html","webpack:///src/app/services/account.service.ts","webpack:///src/app/services/alert.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","canActivate","redirectTo","AppRoutingModule","forRoot","imports","AppComponent","accountService","title","user","subscribe","x","logout","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","declarations","providers","bootstrap","AuthGuard","router","route","state","userValue","navigate","providedIn","ErrorInterceptor","request","next","handle","pipe","err","status","error","message","statusText","users","JSON","parse","localStorage","getItem","FakeBackendInterceptor","url","method","headers","body","handleRoute","endsWith","authenticate","register","getUsers","match","getUserById","updateUser","deleteUser","username","password","find","ok","firstName","lastName","token","length","Math","max","map","push","setItem","stringify","isLoggedIn","unauthorized","idFromUrl","params","Object","assign","filter","get","urlParts","split","parseInt","fakeBackendProvider","JwtInterceptor","isApiUrl","startsWith","apiUrl","clone","setHeaders","Authorization","AlertaComponent","alertService","fade","alerts","alertSubscription","onAlert","alert","keepAfterRouteChange","forEach","autoClose","setTimeout","removeAlert","routeSubscription","events","event","clear","unsubscribe","includes","classes","alertTypeClass","Success","Info","Warning","type","join","NavbarComponent","Alert","init","AlertType","CadastroComponent","formBuilder","loading","submitted","form","group","required","minLength","controls","invalid","value","data","success","relativeTo","onSubmit","HomeComponent","LoginComponent","returnUrl","snapshot","queryParams","login","f","AccountService","http","userSubject","asObservable","post","removeItem","put","AlertService","subject","defaultId","options","environment","production","bootstrapModule","console"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AuthGuard } from './auth/auth.guard';\r\nimport { CadastroComponent } from './pages/cadastro/cadastro.component';\r\nimport { HomeComponent } from './pages/home/home.component';\r\nimport { LoginComponent } from './pages/login/login.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: HomeComponent, canActivate: [AuthGuard] },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'register', component: CadastroComponent },\r\n\r\n  // otherwise redirect to home\r\n  { path: '**', redirectTo: '' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\nimport { AccountService } from './services/account.service';\r\nimport { User } from './models/user';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'valida-presenca';\r\n\r\n  user: User;\r\n\r\n  constructor(private accountService: AccountService) {\r\n      this.accountService.user.subscribe(x => this.user = x);\r\n  }\r\n\r\n  logout() {\r\n      this.accountService.logout();\r\n  }\r\n}\r\n","<!-- nav -->\r\n<nav class=\"navbar navbar-expand navbar-dark bg-dark\" *ngIf=\"user\">\r\n  <div class=\"navbar-nav\">\r\n      <a class=\"nav-item nav-link\" routerLink=\"/\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\">Home</a>\r\n      <a class=\"nav-item nav-link\" routerLink=\"/users\" routerLinkActive=\"active\">Users</a>\r\n      <a class=\"nav-item nav-link\" (click)=\"logout()\">Logout</a>\r\n  </div>\r\n</nav>\r\n\r\n<!-- main app container -->\r\n<div class=\"app-container\" [ngClass]=\"{ 'bg-light': user }\">\r\n  <alert></alert>\r\n  <router-outlet></router-outlet>\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { NavbarComponent } from './components/navbar/navbar.component';\r\nimport { LoginComponent } from './pages/login/login.component';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { CadastroComponent } from './pages/cadastro/cadastro.component';\r\nimport { HomeComponent } from './pages/home/home.component';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { JwtInterceptor } from './auth/jwt.interceptor';\r\nimport { ErrorInterceptor } from './auth/error.interceptor';\r\nimport { fakeBackendProvider } from './auth/fake-backend';\r\nimport { AlertaComponent } from './components/alerta/alerta.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavbarComponent,\r\n    LoginComponent,\r\n    CadastroComponent,\r\n    HomeComponent,\r\n    AlertaComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [\r\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\r\n\r\n    // provider used to create fake backend\r\n    fakeBackendProvider\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AccountService } from '../services/account.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(\n      private router: Router,\n      private accountService: AccountService\n  ) {}\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n      const user = this.accountService.userValue;\n      if (user) {\n          // authorised so return true\n          return true;\n      }\n\n      // not logged in so redirect to login page with the return url\n      this.router.navigate(['/login']);\n      return false;\n  }\n}","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { AccountService } from '../services/account.service';\r\n\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n    constructor(private accountService: AccountService) {}\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        return next.handle(request).pipe(catchError(err => {\r\n            if (err.status === 401) {\r\n                // auto logout if 401 response returned from api\r\n                this.accountService.logout();\r\n            }\r\n            \r\n            const error = err.error.message || err.statusText;\r\n            return throwError(error);\r\n        }))\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpResponse, HttpHandler, HttpEvent, HttpInterceptor, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { Observable, of, throwError } from 'rxjs';\r\nimport { delay, mergeMap, materialize, dematerialize } from 'rxjs/operators';\r\n\r\n// array in local storage for registered users\r\nlet users = JSON.parse(localStorage.getItem('users')) || [];\r\n\r\n@Injectable()\r\nexport class FakeBackendInterceptor implements HttpInterceptor {\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        const { url, method, headers, body } = request;\r\n\r\n        // wrap in delayed observable to simulate server api call\r\n        return of(null)\r\n            .pipe(mergeMap(handleRoute))\r\n            .pipe(materialize()) // call materialize and dematerialize to ensure delay even if an error is thrown (https://github.com/Reactive-Extensions/RxJS/issues/648)\r\n            .pipe(delay(500))\r\n            .pipe(dematerialize());\r\n\r\n        function handleRoute() {\r\n            switch (true) {\r\n                case url.endsWith('/users/authenticate') && method === 'POST':\r\n                    return authenticate();\r\n                case url.endsWith('/users/register') && method === 'POST':\r\n                    return register();\r\n                case url.endsWith('/users') && method === 'GET':\r\n                    return getUsers();\r\n                case url.match(/\\/users\\/\\d+$/) && method === 'GET':\r\n                    return getUserById();\r\n                case url.match(/\\/users\\/\\d+$/) && method === 'PUT':\r\n                    return updateUser();\r\n                case url.match(/\\/users\\/\\d+$/) && method === 'DELETE':\r\n                    return deleteUser();\r\n                default:\r\n                    // pass through any requests not handled above\r\n                    return next.handle(request);\r\n            }    \r\n        }\r\n\r\n        // route functions\r\n\r\n        function authenticate() {\r\n            const { username, password } = body;\r\n            const user = users.find(x => x.username === username && x.password === password);\r\n            if (!user) return error('Username or password is incorrect');\r\n            return ok({\r\n                id: user.id,\r\n                username: user.username,\r\n                firstName: user.firstName,\r\n                lastName: user.lastName,\r\n                token: 'fake-jwt-token'\r\n            })\r\n        }\r\n\r\n        function register() {\r\n            const user = body\r\n\r\n            if (users.find(x => x.username === user.username)) {\r\n                return error('Username \"' + user.username + '\" is already taken')\r\n            }\r\n\r\n            user.id = users.length ? Math.max(...users.map(x => x.id)) + 1 : 1;\r\n            users.push(user);\r\n            localStorage.setItem('users', JSON.stringify(users));\r\n            return ok();\r\n        }\r\n\r\n        function getUsers() {\r\n            if (!isLoggedIn()) return unauthorized();\r\n            return ok(users);\r\n        }\r\n\r\n        function getUserById() {\r\n            if (!isLoggedIn()) return unauthorized();\r\n\r\n            const user = users.find(x => x.id === idFromUrl());\r\n            return ok(user);\r\n        }\r\n\r\n        function updateUser() {\r\n            if (!isLoggedIn()) return unauthorized();\r\n\r\n            let params = body;\r\n            let user = users.find(x => x.id === idFromUrl());\r\n\r\n            // only update password if entered\r\n            if (!params.password) {\r\n                delete params.password;\r\n            }\r\n\r\n            // update and save user\r\n            Object.assign(user, params);\r\n            localStorage.setItem('users', JSON.stringify(users));\r\n\r\n            return ok();\r\n        }\r\n\r\n        function deleteUser() {\r\n            if (!isLoggedIn()) return unauthorized();\r\n\r\n            users = users.filter(x => x.id !== idFromUrl());\r\n            localStorage.setItem('users', JSON.stringify(users));\r\n            return ok();\r\n        }\r\n\r\n        // helper functions\r\n\r\n        function ok(body?) {\r\n            return of(new HttpResponse({ status: 200, body }))\r\n        }\r\n\r\n        function error(message) {\r\n            return throwError({ error: { message } });\r\n        }\r\n\r\n        function unauthorized() {\r\n            return throwError({ status: 401, error: { message: 'Unauthorised' } });\r\n        }\r\n\r\n        function isLoggedIn() {\r\n            return headers.get('Authorization') === 'Bearer fake-jwt-token';\r\n        }\r\n\r\n        function idFromUrl() {\r\n            const urlParts = url.split('/');\r\n            return parseInt(urlParts[urlParts.length - 1]);\r\n        }\r\n    }\r\n}\r\n\r\nexport const fakeBackendProvider = {\r\n    // use fake backend in place of Http service for backend-less development\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: FakeBackendInterceptor,\r\n    multi: true\r\n};","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { AccountService } from '../services/account.service';\r\nimport { environment } from '../../environments/environment';\r\n@Injectable()\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n    constructor(private accountService: AccountService) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        // add auth header with jwt if user is logged in and request is to the api url\r\n        const user = this.accountService.userValue;\r\n        const isLoggedIn = user && user.token;\r\n        const isApiUrl = request.url.startsWith(environment.apiUrl);\r\n        if (isLoggedIn && isApiUrl) {\r\n            request = request.clone({\r\n                setHeaders: {\r\n                    Authorization: `Bearer ${user.token}`\r\n                }\r\n            });\r\n        }\r\n\r\n        return next.handle(request);\r\n    }\r\n}","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\nimport { Router, NavigationStart } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { Alert, AlertType } from 'src/app/models/alert';\nimport { AlertService } from 'src/app/services/alert.service';\n\n\n@Component({ selector: 'alert', templateUrl: 'alerta.component.html' })\n\nexport class AlertaComponent implements OnInit, OnDestroy {\n  @Input() id = 'default-alert';\n  @Input() fade = true;\n\n  alerts: Alert[] = [];\n  alertSubscription: Subscription;\n  routeSubscription: Subscription;\n\n  constructor(private router: Router, private alertService: AlertService) { }\n\n  ngOnInit() {\n    // subscribe to new alert notifications\n    this.alertSubscription = this.alertService.onAlert(this.id)\n      .subscribe(alert => {\n        // clear alerts when an empty alert is received\n        if (!alert.message) {\n          // filter out alerts without 'keepAfterRouteChange' flag\n          this.alerts = this.alerts.filter(x => x.keepAfterRouteChange);\n\n          // remove 'keepAfterRouteChange' flag on the rest\n          this.alerts.forEach(x => delete x.keepAfterRouteChange);\n          return;\n        }\n\n        // add alert to array\n        this.alerts.push(alert);\n\n        // auto close alert if required\n        if (alert.autoClose) {\n          setTimeout(() => this.removeAlert(alert), 3000);\n        }\n      });\n\n    // clear alerts on location change\n    this.routeSubscription = this.router.events.subscribe(event => {\n      if (event instanceof NavigationStart) {\n        this.alertService.clear(this.id);\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    // unsubscribe to avoid memory leaks\n    this.alertSubscription.unsubscribe();\n    this.routeSubscription.unsubscribe();\n  }\n\n  removeAlert(alert: Alert) {\n    // check if already removed to prevent error on auto close\n    if (!this.alerts.includes(alert)) return;\n\n    if (this.fade) {\n      // fade out alert\n      this.alerts.find(x => x === alert).fade = true;\n\n      // remove alert after faded out\n      setTimeout(() => {\n        this.alerts = this.alerts.filter(x => x !== alert);\n      }, 250);\n    } else {\n      // remove alert\n      this.alerts = this.alerts.filter(x => x !== alert);\n    }\n  }\n\n  cssClass(alert: Alert) {\n    if (!alert) return;\n\n    const classes = ['alert', 'alert-dismissable', 'mt-4', 'container'];\n\n    const alertTypeClass = {\n      [AlertType.Success]: 'alert alert-success',\n      [AlertType.Error]: 'alert alert-danger',\n      [AlertType.Info]: 'alert alert-info',\n      [AlertType.Warning]: 'alert alert-warning'\n    }\n\n    classes.push(alertTypeClass[alert.type]);\n\n    if (alert.fade) {\n      classes.push('fade');\n    }\n\n    return classes.join(' ');\n  }\n}","<div *ngFor=\"let alert of alerts\" class=\"{{cssClass(alert)}}\">\n    <a class=\"close\" (click)=\"removeAlert(alert)\">&times;</a>\n    <span [innerHTML]=\"alert.message\"></span>\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<nav class=\"navbar navbar-dark bg-dark fixed-top\">\r\n    <div class=\"container-fluid\">\r\n      <a class=\"navbar-brand\" href=\"#\">Valida Presença</a>\r\n      \r\n      <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"offcanvas\" data-bs-target=\"#offcanvasNavbar\" aria-controls=\"offcanvasNavbar\">\r\n        <span class=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n\r\n\r\n      <div class=\"offcanvas bg-dark offcanvas-end\" tabindex=\"-1\" id=\"offcanvasNavbar\" aria-labelledby=\"offcanvasNavbarLabel\">\r\n        <div class=\"offcanvas-header\">\r\n          <h5 class=\"offcanvas-title\" id=\"offcanvasNavbarLabel\">Menu</h5>\r\n          <button type=\"button\" class=\"btn-close bg-light\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\"></button>\r\n        </div>\r\n        <div class=\"offcanvas-body\">\r\n          <ul class=\"navbar-nav justify-content-end flex-grow-1 pe-3\">\r\n            <li class=\"nav-item\">\r\n              <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n              <a class=\"nav-link\" href=\"#\">Link</a>\r\n            </li>\r\n            <li class=\"nav-item dropdown\">\r\n              <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"offcanvasNavbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                Dropdown\r\n              </a>\r\n              <ul class=\"dropdown-menu\" aria-labelledby=\"offcanvasNavbarDropdown\">\r\n                <li><a class=\"dropdown-item\" href=\"#\">Action</a></li>\r\n                <li><a class=\"dropdown-item\" href=\"#\">Another action</a></li>\r\n                <li>\r\n                  <hr class=\"dropdown-divider\">\r\n                </li>\r\n                <li><a class=\"dropdown-item\" href=\"#\">Something else here</a></li>\r\n              </ul>\r\n            </li>\r\n          </ul>       \r\n        </div>\r\n      </div>\r\n    </div>\r\n  </nav>","export class Alert {\r\n    id: string;\r\n    type: AlertType;\r\n    message: string;\r\n    autoClose: boolean;\r\n    keepAfterRouteChange: boolean;\r\n    fade: boolean;\r\n\r\n    constructor(init?:Partial<Alert>) {\r\n        Object.assign(this, init);\r\n    }\r\n}\r\n\r\nexport enum AlertType {\r\n    Success,\r\n    Error,\r\n    Info,\r\n    Warning\r\n}","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\nimport { AccountService } from 'src/app/services/account.service';\nimport { AlertService } from 'src/app/services/alert.service';\n\n@Component({\n  selector: 'app-cadastro',\n  templateUrl: './cadastro.component.html',\n  styleUrls: ['./cadastro.component.css']\n})\nexport class CadastroComponent implements OnInit {\n  form: FormGroup;\n  loading = false;\n  submitted = false;\n\n  constructor(\n      private formBuilder: FormBuilder,\n      private route: ActivatedRoute,\n      private router: Router,\n      private accountService: AccountService,\n      private alertService: AlertService\n  ) { }\n\n  ngOnInit() {\n      // redirect to home if already logged in\n      if (this.accountService.userValue) {\n        this.router.navigate(['/']);\n    }\n\n      this.form = this.formBuilder.group({\n          firstName: ['', Validators.required],\n          lastName: ['', Validators.required],\n          username: ['', Validators.required],\n          password: ['', [Validators.required, Validators.minLength(6)]]\n      });\n  }\n\n  // convenience getter for easy access to form fields\n  get f() { return this.form.controls; }\n\n  onSubmit() {\n      this.submitted = true;\n\n      // reset alerts on submit\n      this.alertService.clear();\n\n      // stop here if form is invalid\n      if (this.form.invalid) {\n          return;\n      }\n\n      this.loading = true;\n      this.accountService.register(this.form.value)\n          .pipe(first())\n          .subscribe(\n              data => {\n                  this.alertService.success('Registration successful', { keepAfterRouteChange: true });\n                  this.router.navigate(['../login'], { relativeTo: this.route });\n              },\n              error => {\n                  this.alertService.error(error);\n                  this.loading = false;\n              });\n  }\n}","<div class=\"card\">\n    <h4 class=\"card-header\">Register</h4>\n    <div class=\"card-body\">\n        <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n            <div class=\"form-group\">\n                <label for=\"firstName\">First Name</label>\n                <input type=\"text\" formControlName=\"firstName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.firstName.errors }\" />\n                <div *ngIf=\"submitted && f.firstName.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.firstName.errors.required\">First Name is required</div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"lastName\">Last Name</label>\n                <input type=\"text\" formControlName=\"lastName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.lastName.errors }\" />\n                <div *ngIf=\"submitted && f.lastName.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.lastName.errors.required\">Last Name is required</div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"username\">Username</label>\n                <input type=\"text\" formControlName=\"username\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\" />\n                <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.username.errors.required\">Username is required</div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"password\">Password</label>\n                <input type=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\n                <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.password.errors.required\">Password is required</div>\n                    <div *ngIf=\"f.password.errors.minlength\">Password must be at least 6 characters</div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <button [disabled]=\"loading\" class=\"btn btn-primary\">\n                    <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n                    Register\n                </button>\n                <a routerLink=\"../login\" class=\"btn btn-link\">Cancel</a>\n            </div>\n        </form>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>home works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\nimport { AccountService } from 'src/app/services/account.service';\nimport { AlertService } from 'src/app/services/alert.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  form: FormGroup;\n  loading = false;\n  submitted = false;\n  returnUrl: string;\n\n  constructor(\n      private formBuilder: FormBuilder,\n      private route: ActivatedRoute,\n      private router: Router,\n      private accountService: AccountService,\n      private alertService: AlertService\n  ) { }\n\n  ngOnInit() {\n\n    // redirect to home if already logged in\n    if (this.accountService.userValue) {\n        this.router.navigate(['/']);\n    }\n\n      this.form = this.formBuilder.group({\n          username: ['', Validators.required],\n          password: ['', Validators.required]\n      });\n\n      // get return url from route parameters or default to '/'\n      this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n  }\n\n  // convenience getter for easy access to form fields\n  get f() { return this.form.controls; }\n\n  onSubmit() {\n      this.submitted = true;\n\n      // reset alerts on submit\n      this.alertService.clear();\n\n      // stop here if form is invalid\n      if (this.form.invalid) {\n          return;\n      }\n\n      this.loading = true;\n      this.accountService.login(this.f.username.value, this.f.password.value)\n          .pipe(first())\n          .subscribe(\n              data => {\n                  this.router.navigate([this.returnUrl]);\n              },\n              error => {\n                  this.alertService.error(error);\n                  this.loading = false;\n              });\n  }\n}","<div class=\"card\">\n    <h4 class=\"card-header\">Login</h4>\n    <div class=\"card-body\">\n        <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n            <div class=\"form-group\">\n                <label for=\"username\">Username</label>\n                <input type=\"text\" formControlName=\"username\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\" />\n                <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.username.errors.required\">Username is required</div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"password\">Password</label>\n                <input type=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\n                <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.password.errors.required\">Password is required</div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <button [disabled]=\"loading\" class=\"btn btn-primary\">\n                    <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n                    Login\n                </button>\n                <a routerLink=\"../register\" class=\"btn btn-link\">Register</a>\n            </div>\n        </form>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { User } from '../models/user';\nimport { environment } from 'src/environments/environment';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountService {\n  private userSubject: BehaviorSubject<User>;\n  public user: Observable<User>;\n\n  constructor(\n      private router: Router,\n      private http: HttpClient\n  ) {\n      this.userSubject = new BehaviorSubject<User>(JSON.parse(localStorage.getItem('user')));\n      this.user = this.userSubject.asObservable();\n  }\n\n  public get userValue(): User {\n      return this.userSubject.value;\n  }\n\n  login(username, password) {\n      return this.http.post<User>(`${environment.apiUrl}/users/authenticate`, { username, password })\n          .pipe(map(user => {\n              // store user details and jwt token in local storage to keep user logged in between page refreshes\n              localStorage.setItem('user', JSON.stringify(user));\n              this.userSubject.next(user);\n              return user;\n          }));\n  }\n\n  logout() {\n      // remove user from local storage and set current user to null\n      localStorage.removeItem('user');\n      this.userSubject.next(null);\n      this.router.navigate(['/login']);\n  }\n\n  register(user: User) {\n      return this.http.post(`${environment.apiUrl}/users/register`, user);\n  }\n\n  getAll() {\n      return this.http.get<User[]>(`${environment.apiUrl}/users`);\n  }\n\n  getById(id: string) {\n      return this.http.get<User>(`${environment.apiUrl}/users/${id}`);\n  }\n\n  update(id, params) {\n      return this.http.put(`${environment.apiUrl}/users/${id}`, params)\n          .pipe(map(x => {\n              // update stored user if the logged in user updated their own record\n              if (id == this.userValue.id) {\n                  // update local storage\n                  const user = { ...this.userValue, ...params };\n                  localStorage.setItem('user', JSON.stringify(user));\n\n                  // publish updated user to subscribers\n                  this.userSubject.next(user);\n              }\n              return x;\n          }));\n  }\n\n  delete(id: string) {\n      return this.http.delete(`${environment.apiUrl}/users/${id}`)\n          .pipe(map(x => {\n              // auto logout if the logged in user deleted their own record\n              if (id == this.userValue.id) {\n                  this.logout();\n              }\n              return x;\n          }));\n  }\n}","import { Injectable } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\nimport { Alert, AlertType } from '../models/alert';\r\n\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AlertService {\r\n    private subject = new Subject<Alert>();\r\n    private defaultId = 'default-alert';\r\n\r\n    // enable subscribing to alerts observable\r\n    onAlert(id = this.defaultId): Observable<Alert> {\r\n        return this.subject.asObservable().pipe(filter(x => x && x.id === id));\r\n    }\r\n\r\n    // convenience methods\r\n    success(message: string, options?: any) {\r\n        this.alert(new Alert({ ...options, type: AlertType.Success, message }));\r\n    }\r\n\r\n    error(message: string, options?: any) {\r\n        this.alert(new Alert({ ...options, type: AlertType.Error, message }));\r\n    }\r\n\r\n    info(message: string, options?: any) {\r\n        this.alert(new Alert({ ...options, type: AlertType.Info, message }));\r\n    }\r\n\r\n    warn(message: string, options?: any) {\r\n        this.alert(new Alert({ ...options, type: AlertType.Warning, message }));\r\n    }\r\n\r\n    // main alert method    \r\n    alert(alert: Alert) {\r\n        alert.id = alert.id || this.defaultId;\r\n        this.subject.next(alert);\r\n    }\r\n\r\n    // clear alerts\r\n    clear(id = this.defaultId) {\r\n        this.subject.next(new Alert({ id }));\r\n    }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:4000'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}