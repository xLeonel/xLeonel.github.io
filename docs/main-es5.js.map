{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth/auth.guard.ts","webpack:///src/app/auth/error.interceptor.ts","webpack:///src/app/auth/fake-backend.ts","webpack:///src/app/auth/jwt.interceptor.ts","webpack:///src/app/components/alerta/alerta.component.ts","webpack:///src/app/components/alerta/alerta.component.html","webpack:///src/app/components/navbar/navbar.component.ts","webpack:///src/app/components/navbar/navbar.component.html","webpack:///src/app/models/alert.ts","webpack:///src/app/models/user.ts","webpack:///src/app/pages/add-edit/add-edit.component.ts","webpack:///src/app/pages/add-edit/add-edit.component.html","webpack:///src/app/pages/alunos/alunos.component.ts","webpack:///src/app/pages/alunos/alunos.component.html","webpack:///src/app/pages/cadastro/cadastro.component.ts","webpack:///src/app/pages/cadastro/cadastro.component.html","webpack:///src/app/pages/home/home.component.ts","webpack:///src/app/pages/home/home.component.html","webpack:///src/app/pages/login/login.component.ts","webpack:///src/app/pages/login/login.component.html","webpack:///src/app/pipes/trata-tipo-user.pipe.ts","webpack:///src/app/services/account.service.ts","webpack:///src/app/services/alert.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","canActivate","data","permissao","adm","tipoExibicao","aluno","professor","redirectTo","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","declarations","providers","bootstrap","AuthGuard","router","accountService","route","state","user","userValue","indexOf","tipoUsuario","navigate","providedIn","ErrorInterceptor","request","next","handle","pipe","err","status","logout","error","message","statusText","users","JSON","parse","localStorage","getItem","prof","email","senha","rgm","cpf","nome","sobrenome","ok","find","x","length","Math","max","map","push","setItem","stringify","FakeBackendInterceptor","url","method","headers","body","handleRoute","endsWith","autenticar","cadastro","match","getUsersByRole","getUserById","updateUser","deleteUser","acesso","includes","lenght","token","getUsers","isLoggedIn","unauthorized","idFromUrl","filter","params","password","Object","assign","get","urlParts","split","parseInt","JwtInterceptor","isApiUrl","startsWith","apiUrl","clone","setHeaders","Authorization","AlertaComponent","alertService","fade","alerts","alertSubscription","onAlert","subscribe","alert","keepAfterRouteChange","forEach","autoClose","setTimeout","removeAlert","routeSubscription","events","event","clear","unsubscribe","classes","alertTypeClass","Success","Info","Warning","type","join","NavbarComponent","tipoAluno","tipoAdm","tipoProf","Alert","init","AlertType","User","TipoUser","AddEditComponent","formBuilder","loading","submitted","form","controls","snapshot","isAddMode","passwordValidators","minLength","required","isAluno","group","getById","formulario","setValue","isProfessor","invalid","createUser","register","value","success","update","onSubmit","AlunosComponent","usuarios","usuarioFiltered","notFound","filterBy","toLocaleLowerCase","toLowerCase","isNum","getAllByRole","u","isDeleting","console","log","test","CadastroComponent","relativeTo","registrar","HomeComponent","LoginComponent","username","login","TrataTipoUserPipe","name","AccountService","http","userSubject","asObservable","post","removeItem","tipoUser","put","AlertService","subject","defaultId","options","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AuthGuard } from './auth/auth.guard';\r\nimport { TipoUser } from './models/user';\r\nimport { AddEditComponent } from './pages/add-edit/add-edit.component';\r\nimport { AlunosComponent } from './pages/alunos/alunos.component';\r\nimport { CadastroComponent } from './pages/cadastro/cadastro.component';\r\nimport { HomeComponent } from './pages/home/home.component';\r\nimport { LoginComponent } from './pages/login/login.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: HomeComponent, canActivate: [AuthGuard] },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'cadastro', component: CadastroComponent },\r\n  { path: 'alunos', component: AlunosComponent, canActivate: [AuthGuard], data: { permissao: [TipoUser.adm] } },\r\n  { path: 'alunos/editar/:id', component: AddEditComponent, canActivate: [AuthGuard], data: { permissao: [TipoUser.adm], tipoExibicao: TipoUser.aluno } },\r\n  { path: 'alunos/cadastro', component: AddEditComponent, canActivate: [AuthGuard], data: { permissao: [TipoUser.adm], tipoExibicao: TipoUser.aluno } },\r\n  { path: 'professores/:id', component: AddEditComponent, canActivate: [AuthGuard], data: { permissao: [TipoUser.adm], tipoExibicao: TipoUser.professor } },\r\n  { path: 'professores/cadastro', component: AddEditComponent, canActivate: [AuthGuard], data: { permissao: [TipoUser.adm], tipoExibicao: TipoUser.professor } },\r\n  { path: '**', redirectTo: '' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\nimport { AccountService } from './services/account.service';\r\nimport { User } from './models/user';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'valida-presenca';\r\n}\r\n","<!-- nav -->\r\n<app-navbar></app-navbar>\r\n\r\n<!-- main container -->\r\n<div class=\"app-container\">\r\n  <alert></alert>\r\n  <router-outlet></router-outlet>\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { NavbarComponent } from './components/navbar/navbar.component';\r\nimport { LoginComponent } from './pages/login/login.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { CadastroComponent } from './pages/cadastro/cadastro.component';\r\nimport { HomeComponent } from './pages/home/home.component';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { JwtInterceptor } from './auth/jwt.interceptor';\r\nimport { ErrorInterceptor } from './auth/error.interceptor';\r\nimport { FakeBackendInterceptor } from './auth/fake-backend';\r\nimport { AlertaComponent } from './components/alerta/alerta.component';\r\nimport { TrataTipoUserPipe } from './pipes/trata-tipo-user.pipe';\r\nimport { AlunosComponent } from './pages/alunos/alunos.component';\r\nimport { AddEditComponent } from './pages/add-edit/add-edit.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavbarComponent,\r\n    LoginComponent,\r\n    CadastroComponent,\r\n    HomeComponent,\r\n    AlertaComponent,\r\n    TrataTipoUserPipe,\r\n    AlunosComponent,\r\n    AddEditComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    FormsModule\r\n  ],\r\n  providers: [\r\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: FakeBackendInterceptor, multi: true }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { AccountService } from '../services/account.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(\r\n    private router: Router,\r\n    private accountService: AccountService\r\n  ) { }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n    const user = this.accountService.userValue;\r\n    if (user) {\r\n      // check a permissao do usuario\r\n      if (route.data.permissao && route.data.permissao.indexOf(user.tipoUsuario) === -1) {\r\n        // direciona para home caso nao esteja autorizado\r\n        this.router.navigate(['/']);\r\n        return false;\r\n      }\r\n      // authorised so return true\r\n      return true;\r\n    }\r\n\r\n    // not logged in so redirect to login page with the return url\r\n    this.router.navigate(['/login']);\r\n    return false;\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { AccountService } from '../services/account.service';\r\n\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n    constructor(private accountService: AccountService) {}\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        return next.handle(request).pipe(catchError(err => {\r\n            if (err.status === 401) {\r\n                // auto logout if 401 response returned from api\r\n                this.accountService.logout();\r\n            }\r\n            \r\n            const error = err.error.message || err.statusText;\r\n            return throwError(error);\r\n        }))\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpResponse, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable, of, throwError } from 'rxjs';\r\nimport { delay, mergeMap, materialize, dematerialize } from 'rxjs/operators';\r\nimport { TipoUser, User } from '../models/user';\r\n\r\n// array in local storage for registered users\r\nlet users = <User[]>JSON.parse(localStorage.getItem('usuarios')) || [];\r\n\r\nlet prof: User = new User();\r\nprof.id = 0,\r\n    prof.email = 'prof@email.com',\r\n    prof.senha = 'prof123',\r\n    prof.rgm = '12345678',\r\n    prof.cpf = '11111111111',\r\n    prof.nome = 'Andrea',\r\n    prof.sobrenome = 'Martins',\r\n    prof.tipoUsuario = TipoUser.professor\r\n\r\nlet adm: User = new User();\r\nadm.id = 0,\r\n    adm.email = 'adm@email.com',\r\n    adm.senha = 'adm123',\r\n    adm.rgm = '87654321',\r\n    adm.cpf = '11111111100',\r\n    adm.nome = 'Adailton',\r\n    adm.sobrenome = 'Pereira',\r\n    adm.tipoUsuario = TipoUser.adm\r\n\r\nlet ok = true;\r\n\r\nif (users.find(x => x.cpf === prof.cpf)) {\r\n    ok = false;\r\n}\r\n\r\nif (ok) {\r\n    prof.id = users.length ? Math.max(...users.map(x => x.id)) + 1 : 1;\r\n    users.push(prof);\r\n    localStorage.setItem('usuarios', JSON.stringify(users));\r\n}\r\n\r\nif (users.find(x => x.cpf === adm.cpf)) {\r\n    ok = false;\r\n}\r\n\r\nif (ok) {\r\n    adm.id = users.length ? Math.max(...users.map(x => x.id)) + 1 : 1;\r\n    users.push(adm);\r\n    localStorage.setItem('usuarios', JSON.stringify(users));\r\n}\r\n\r\n@Injectable()\r\nexport class FakeBackendInterceptor implements HttpInterceptor {\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        const { url, method, headers, body } = request;\r\n\r\n        // wrap in delayed observable to simulate server api call\r\n        return of(null)\r\n            .pipe(mergeMap(handleRoute))\r\n            .pipe(materialize()) // call materialize and dematerialize to ensure delay even if an error is thrown (https://github.com/Reactive-Extensions/RxJS/issues/648)\r\n            .pipe(delay(500))\r\n            .pipe(dematerialize());\r\n\r\n        function handleRoute() {\r\n            switch (true) {\r\n                case url.endsWith('/login') && method === 'POST':\r\n                    return autenticar();\r\n                case url.endsWith('/cadastro') && method === 'POST':\r\n                    return cadastro();\r\n                // case url.endsWith('/users') && method === 'GET':\r\n                //     return getUsers();\r\n                case url.match(/\\/role\\/\\d+$/) && method === 'GET':\r\n                    return getUsersByRole();\r\n                case url.match(/\\/users\\/\\d+$/) && method === 'GET':\r\n                    return getUserById();\r\n                case url.match(/\\/users\\/\\d+$/) && method === 'PUT':\r\n                    return updateUser();\r\n                case url.match(/\\/users\\/\\d+$/) && method === 'DELETE':\r\n                    return deleteUser();\r\n                default:\r\n                    // pass through any requests not handled above\r\n                    return next.handle(request);\r\n            }\r\n        }\r\n\r\n        // mock rotas\r\n        function autenticar() {\r\n            const { acesso, senha } = body;\r\n\r\n            let user: User;\r\n\r\n            if (acesso.includes('@')) {\r\n                //email\r\n                user = users.find(x => x.email === acesso && x.senha === senha);\r\n            }\r\n            else if (acesso.lenght === 8) {\r\n                //rgm\r\n                user = users.find(x => x.rgm === acesso && x.senha === senha);\r\n            }\r\n            else if (acesso.lenght == 11) {\r\n                //cpf\r\n                user = users.find(x => x.cpf === acesso && x.senha === senha);\r\n            }\r\n\r\n            if (!user) return error('Acesso ou Senha incorreto');\r\n            return ok({\r\n                id: user.id,\r\n                email: user.email,\r\n                senha: user.senha,\r\n                rgm: user.rgm,\r\n                cpf: user.cpf,\r\n                nome: user.nome,\r\n                sobrenome: user.sobrenome,\r\n                tipoUsuario: user.tipoUsuario,\r\n                token: 'fake-jwt-token'\r\n            })\r\n        }\r\n\r\n        function cadastro() {\r\n            const user = body\r\n\r\n            if (users.find(x => x.cpf === user.cpf)) {\r\n                return error('Já existe um CPF cadastrado')\r\n            }\r\n\r\n            if (users.find(x => x.rgm === user.rgm)) {\r\n                return error('Já existe um RGM cadastrado')\r\n            }\r\n\r\n            if (users.find(x => x.email === user.email)) {\r\n                return error('Já existe um email cadastrado')\r\n            }\r\n\r\n            user.id = users.length ? Math.max(...users.map(x => x.id)) + 1 : 1;\r\n            users.push(user);\r\n            localStorage.setItem('usuarios', JSON.stringify(users));\r\n            return ok();\r\n        }\r\n\r\n        function getUsers() {\r\n            if (!isLoggedIn()) return unauthorized();\r\n            return ok(users);\r\n        }\r\n\r\n        function getUserById() {\r\n            if (!isLoggedIn()) return unauthorized();\r\n\r\n            const user = users.find(x => x.id === idFromUrl());\r\n            return ok(user);\r\n        }\r\n\r\n        function getUsersByRole() {\r\n            if (!isLoggedIn()) return unauthorized();\r\n\r\n            const user = users.filter(x => x.tipoUsuario === idFromUrl());\r\n            return ok(user);\r\n        }\r\n\r\n        function updateUser() {\r\n            if (!isLoggedIn()) return unauthorized();\r\n\r\n            let params = body;\r\n            let user = users.find(x => x.id === idFromUrl());\r\n\r\n            // only update password if entered\r\n            if (!params.password) {\r\n                delete params.password;\r\n            }\r\n\r\n            // update and save user\r\n            Object.assign(user, params);\r\n            localStorage.setItem('usuarios', JSON.stringify(users));\r\n\r\n            return ok();\r\n        }\r\n\r\n        function deleteUser() {\r\n            if (!isLoggedIn()) return unauthorized();\r\n\r\n            users = users.filter(x => x.id !== idFromUrl());\r\n            localStorage.setItem('usuarios', JSON.stringify(users));\r\n            return ok();\r\n        }\r\n\r\n        // status code\r\n\r\n        function ok(body?) {\r\n            return of(new HttpResponse({ status: 200, body }))\r\n        }\r\n\r\n        function error(message) {\r\n            return throwError({ error: { message } });\r\n        }\r\n\r\n        function unauthorized() {\r\n            return throwError({ status: 401, error: { message: 'Unauthorised' } });\r\n        }\r\n\r\n        function isLoggedIn() {\r\n            return headers.get('Authorization') === 'Bearer fake-jwt-token';\r\n        }\r\n\r\n        function idFromUrl() {\r\n            const urlParts = url.split('/');\r\n            return parseInt(urlParts[urlParts.length - 1]);\r\n        }\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { AccountService } from '../services/account.service';\r\nimport { environment } from '../../environments/environment';\r\n@Injectable()\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n    constructor(private accountService: AccountService) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        // add auth header with jwt if user is logged in and request is to the api url\r\n        const user = this.accountService.userValue;\r\n        const isLoggedIn = user && user.token;\r\n        const isApiUrl = request.url.startsWith(environment.apiUrl);\r\n        if (isLoggedIn && isApiUrl) {\r\n            request = request.clone({\r\n                setHeaders: {\r\n                    Authorization: `Bearer ${user.token}`\r\n                }\r\n            });\r\n        }\r\n\r\n        return next.handle(request);\r\n    }\r\n}","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\r\nimport { Router, NavigationStart } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { Alert, AlertType } from '../../models/alert';\r\nimport { AlertService } from '../../services/alert.service';\r\n\r\n\r\n@Component({ selector: 'alert', templateUrl: 'alerta.component.html' })\r\n\r\nexport class AlertaComponent implements OnInit, OnDestroy {\r\n  @Input() id = 'default-alert';\r\n  @Input() fade = true;\r\n\r\n  alerts: Alert[] = [];\r\n  alertSubscription: Subscription;\r\n  routeSubscription: Subscription;\r\n\r\n  constructor(private router: Router, private alertService: AlertService) { }\r\n\r\n  ngOnInit() {\r\n    // subscribe to new alert notifications\r\n    this.alertSubscription = this.alertService.onAlert(this.id)\r\n      .subscribe(alert => {\r\n        // clear alerts when an empty alert is received\r\n        if (!alert.message) {\r\n          // filter out alerts without 'keepAfterRouteChange' flag\r\n          this.alerts = this.alerts.filter(x => x.keepAfterRouteChange);\r\n\r\n          // remove 'keepAfterRouteChange' flag on the rest\r\n          this.alerts.forEach(x => delete x.keepAfterRouteChange);\r\n          return;\r\n        }\r\n\r\n        // add alert to array\r\n        this.alerts.push(alert);\r\n\r\n        // auto close alert if required\r\n        if (alert.autoClose) {\r\n          setTimeout(() => this.removeAlert(alert), 3000);\r\n        }\r\n      });\r\n\r\n    // clear alerts on location change\r\n    this.routeSubscription = this.router.events.subscribe(event => {\r\n      if (event instanceof NavigationStart) {\r\n        this.alertService.clear(this.id);\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // unsubscribe to avoid memory leaks\r\n    this.alertSubscription.unsubscribe();\r\n    this.routeSubscription.unsubscribe();\r\n  }\r\n\r\n  removeAlert(alert: Alert) {\r\n    // check if already removed to prevent error on auto close\r\n    if (!this.alerts.includes(alert)) return;\r\n\r\n    if (this.fade) {\r\n      // fade out alert\r\n      this.alerts.find(x => x === alert).fade = true;\r\n\r\n      // remove alert after faded out\r\n      setTimeout(() => {\r\n        this.alerts = this.alerts.filter(x => x !== alert);\r\n      }, 250);\r\n    } else {\r\n      // remove alert\r\n      this.alerts = this.alerts.filter(x => x !== alert);\r\n    }\r\n  }\r\n\r\n  cssClass(alert: Alert) {\r\n    if (!alert) return;\r\n\r\n    const classes = ['alert', 'alert-dismissable', 'mt-4', 'container'];\r\n\r\n    const alertTypeClass = {\r\n      [AlertType.Success]: 'alert alert-success',\r\n      [AlertType.Error]: 'alert alert-danger',\r\n      [AlertType.Info]: 'alert alert-info',\r\n      [AlertType.Warning]: 'alert alert-warning'\r\n    }\r\n\r\n    classes.push(alertTypeClass[alert.type]);\r\n\r\n    if (alert.fade) {\r\n      classes.push('fade');\r\n    }\r\n\r\n    return classes.join(' ');\r\n  }\r\n}","<div *ngFor=\"let alert of alerts\" class=\"{{cssClass(alert)}}\">\r\n    <a class=\"close\" (click)=\"removeAlert(alert)\">&times;</a>\r\n    <span [innerHTML]=\"alert.message\"></span>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { TipoUser, User } from '../../models/user';\r\nimport { AccountService } from '../../services/account.service';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent {\r\n  tipoAluno = TipoUser.aluno;\r\n  tipoAdm = TipoUser.adm;\r\n  tipoProf = TipoUser.professor;\r\n\r\n  user: User;\r\n\r\n  constructor(private accountService: AccountService) {\r\n    this.accountService.user.subscribe(x => this.user = x);\r\n  }\r\n\r\n  logout() {\r\n    this.accountService.logout();\r\n  }\r\n\r\n}\r\n","<nav class=\"navbar navbar-expand navbar-dark bg-dark\" *ngIf=\"user\">\r\n  <div class=\"navbar-nav\">\r\n      <a class=\"nav-item nav-link\" routerLink=\"/\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\">Home</a>\r\n      <a class=\"nav-item nav-link\" routerLink=\"/users\" routerLinkActive=\"active\" *ngIf=\"user.tipoUsuario == tipoAluno\">Presencas</a>\r\n      <a class=\"nav-item nav-link\" routerLink=\"/users\" routerLinkActive=\"active\" *ngIf=\"user.tipoUsuario == tipoProf || tipoAdm\">Aulas</a>\r\n      <a class=\"nav-item nav-link\" routerLink=\"/users\" routerLinkActive=\"active\" *ngIf=\"user.tipoUsuario == tipoAdm\">Professores</a>\r\n      <a class=\"nav-item nav-link\" routerLink=\"/alunos\" routerLinkActive=\"active\" *ngIf=\"user.tipoUsuario == tipoAdm\">Alunos</a>\r\n      <a class=\"nav-item nav-link\" (click)=\"logout()\">Sair</a>\r\n  </div>\r\n</nav>","export class Alert {\r\n    id: string;\r\n    type: AlertType;\r\n    message: string;\r\n    autoClose: boolean;\r\n    keepAfterRouteChange: boolean;\r\n    fade: boolean;\r\n\r\n    constructor(init?:Partial<Alert>) {\r\n        Object.assign(this, init);\r\n    }\r\n}\r\n\r\nexport enum AlertType {\r\n    Success,\r\n    Error,\r\n    Info,\r\n    Warning\r\n}","export class User {\r\n    id: number;\r\n    email: string;\r\n    senha: string;\r\n    rgm: string;\r\n    cpf: string;\r\n    nome: string;\r\n    sobrenome: string;\r\n    tipoUsuario: TipoUser\r\n    token?: string;\r\n}\r\n\r\nexport enum TipoUser {\r\n    aluno,\r\n    professor,\r\n    adm\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { first } from 'rxjs/operators';\r\nimport { TipoUser } from '../../models/user';\r\nimport { AccountService } from '../../services/account.service';\r\nimport { AlertService } from '../../services/alert.service';\r\n\r\n@Component({\r\n  selector: 'app-add-edit',\r\n  templateUrl: './add-edit.component.html',\r\n  styleUrls: ['./add-edit.component.css']\r\n})\r\nexport class AddEditComponent implements OnInit {\r\n  form: FormGroup;\r\n  loading = false;\r\n  submitted = false;\r\n  isAddMode: boolean;\r\n  tipoExibicao: TipoUser;\r\n\r\n  private id: string;\r\n  \r\n  get isAluno() {\r\n    return this.tipoExibicao === TipoUser.aluno;\r\n  }\r\n\r\n  get isProfessor() {\r\n    return this.tipoExibicao === TipoUser.professor;\r\n  }\r\n\r\n   //get form fields\r\n   get formulario() { return this.form.controls; }\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private accountService: AccountService,\r\n    private alertService: AlertService\r\n  ) {\r\n    this.route.data.subscribe(data => {\r\n      this.tipoExibicao = data.tipoExibicao;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.id = this.route.snapshot.params['id'];\r\n    this.isAddMode = !this.id;\r\n\r\n    //password not required in edit mode\r\n    const passwordValidators = [Validators.minLength(6)];\r\n    if (this.isAddMode) {\r\n      passwordValidators.push(Validators.required);\r\n    }\r\n\r\n    if (this.isAluno) {\r\n      this.form = this.formBuilder.group({\r\n        nome: ['', [Validators.required]],\r\n        sobrenome: ['', [Validators.required]],\r\n        rgm: ['', [Validators.required, Validators.minLength(8)]],\r\n        cpf: ['', [Validators.required, Validators.minLength(11)]],\r\n        email: ['', [Validators.required, Validators.email]],\r\n        senha: ['', passwordValidators],\r\n        tipoUsuario: [TipoUser.aluno, Validators.required],\r\n      });\r\n\r\n      if (!this.isAddMode) {\r\n        this.accountService.getById(this.id)\r\n          .pipe(first())\r\n          .subscribe(\r\n            user => {\r\n              this.formulario.nome.setValue(user.nome);\r\n              this.formulario.sobrenome.setValue(user.sobrenome);\r\n              this.formulario.rgm.setValue(user.rgm);\r\n              this.formulario.cpf.setValue(user.cpf);\r\n              this.formulario.email.setValue(user.email);\r\n            },\r\n            error => {\r\n              this.alertService.error(error);\r\n            });\r\n      }\r\n    }\r\n    else if (this.isProfessor) {\r\n      //todo form \r\n    }\r\n  }\r\n \r\n  onSubmit() {\r\n    this.submitted = true;\r\n    this.alertService.clear();\r\n\r\n    if (this.form.invalid) {\r\n      return;\r\n    }\r\n\r\n    this.loading = true;\r\n\r\n    if (this.isAddMode) {\r\n      this.createUser();\r\n    } else {\r\n      this.updateUser();\r\n    }\r\n  }\r\n\r\n  private createUser() {\r\n    this.accountService.register(this.form.value)\r\n    .pipe(first())\r\n    .subscribe(\r\n        () => {\r\n            this.alertService.success('Cadastrado com sucesso', { keepAfterRouteChange: true });\r\n            this.router.navigate([this.isAluno ? '/alunos' : '/professores']);\r\n        },\r\n        error => {\r\n            this.alertService.error(error);\r\n            this.loading = false;\r\n        });  \r\n  }\r\n\r\n  private updateUser() {\r\n    this.accountService.update(this.id, this.form.value)\r\n      .pipe(first())\r\n      .subscribe(\r\n        () => {\r\n          this.alertService.success('Atualizado com sucesso', { keepAfterRouteChange: true });\r\n          this.router.navigate([this.isAluno ? '/alunos' : '/professores']);\r\n        },\r\n        error => {\r\n          this.alertService.error(error);\r\n          this.loading = false;\r\n        });\r\n  }\r\n}","<div class=\"p-4\">\r\n    <div class=\"container\">\r\n        <h1 *ngIf=\"isAluno && isAddMode\">Cadastro Usuário</h1>\r\n        <h1 *ngIf=\"isAluno && !isAddMode\">Editar Usuário</h1>\r\n        <h1 *ngIf=\"isProfessor && !isAddMode\">Cadastro Professores</h1>\r\n        <h1 *ngIf=\"isProfessor && !isAddMode\">Editar Professor</h1>\r\n\r\n        <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n            <div class=\"form-group\">\r\n                <label for=\"nome\">Nome</label>\r\n                <input type=\"text\" formControlName=\"nome\" class=\"form-control\"\r\n                    [ngClass]=\"{ 'is-invalid': submitted && formulario.nome.errors }\" placeholder=\"Insira seu nome\" />\r\n                <div *ngIf=\"submitted && formulario.nome.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"formulario.nome.errors.required\">Nome é obrigatório</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"sobrenome\">Sobrenome</label>\r\n                <input type=\"text\" formControlName=\"sobrenome\" class=\"form-control\"\r\n                    [ngClass]=\"{ 'is-invalid': submitted && formulario.sobrenome.errors }\" placeholder=\"Insira seu sobrenome\" />\r\n                <div *ngIf=\"submitted && formulario.sobrenome.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"formulario.sobrenome.errors.required\">Sobrenome é obrigatório</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"rgm\">RGM</label>\r\n                <input type=\"text\" formControlName=\"rgm\" class=\"form-control\"\r\n                    [ngClass]=\"{ 'is-invalid': submitted && formulario.rgm.errors }\" placeholder=\"Insira seu RGM\"\r\n                    maxlength=\"8\" />\r\n                <div *ngIf=\"submitted && formulario.rgm.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"formulario.rgm.errors.required\">RGM é obrigatório</div>\r\n                    <div *ngIf=\"formulario.rgm.errors.minlength\">RGM precisa ter ao menos 8 caracteres</div>\r\n                    <div *ngIf=\"formulario.rgm.errors.maxlength\">RGM precisa ter no maximo 8 caracteres</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"cpf\">CPF</label>\r\n                <input type=\"text\" formControlName=\"cpf\" class=\"form-control\"\r\n                    [ngClass]=\"{ 'is-invalid': submitted && formulario.cpf.errors }\" placeholder=\"Insira seu CPF\"\r\n                    maxlength=\"11\" />\r\n                <div *ngIf=\"submitted && formulario.cpf.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"formulario.cpf.errors.required\">CPF é obrigatório</div>\r\n                    <div *ngIf=\"formulario.cpf.errors.minlength\">CPF precisa ter ao menos 11 caracteres</div>\r\n                    <div *ngIf=\"formulario.cpf.errors.maxlength\">CPF precisa ter no maximo 11 caracteres</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"email\">Email</label>\r\n                <input type=\"text\" formControlName=\"email\" class=\"form-control\"\r\n                    [ngClass]=\"{ 'is-invalid': submitted && formulario.email.errors }\" placeholder=\"Insira seu email\" />\r\n                <div *ngIf=\"submitted && formulario.email.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"formulario.email.errors.required\">Email é obrigatório</div>\r\n                    <div *ngIf=\"formulario.email.errors.email\">Email é obrigatório</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"senha\">Senha</label>\r\n                <input type=\"senha\" formControlName=\"senha\" class=\"form-control\"\r\n                    [ngClass]=\"{ 'is-invalid': submitted && formulario.senha.errors }\" placeholder=\"Deixar em branco para manter a mesma senha\" />\r\n                <div *ngIf=\"submitted && formulario.senha.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"formulario.senha.errors.required\">Senha é obrigatório</div>\r\n                    <div *ngIf=\"formulario.senha.errors.minlength\">Senha precisa ter ao menos 6 caracteres</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <button [disabled]=\"loading\" class=\"btn btn-primary\">\r\n                    <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\r\n                    <ng-container *ngIf=\"isAddMode\">Cadastrar</ng-container>\r\n                    <ng-container *ngIf=\"!isAddMode\">Atualizar</ng-container>\r\n                </button>\r\n                <a routerLink=\"/alunos\" class=\"btn btn-link\">Voltar</a>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { first } from 'rxjs/operators';\r\nimport { TipoUser, User } from '../../models/user';\r\nimport { AccountService } from '../../services/account.service';\r\nimport { AlertService } from '../../services/alert.service';\r\n\r\n@Component({\r\n  selector: 'app-alunos',\r\n  templateUrl: './alunos.component.html',\r\n  styleUrls: ['./alunos.component.css']\r\n})\r\nexport class AlunosComponent implements OnInit {\r\n  private usuarios: User[] = [];\r\n\r\n  usuarioFiltered: User[] = [];\r\n  filterBy!: string;\r\n\r\n  notFound = false;\r\n\r\n  set filter(value: string) {\r\n    this.filterBy = value;\r\n\r\n    if (this.filterBy.includes('@')) {\r\n      this.usuarioFiltered = this.usuarios.filter((user: User) => user.email.toLocaleLowerCase().indexOf(this.filterBy.toLowerCase()) > -1);\r\n    }\r\n    else if (this.filterBy.length <= 8 && this.isNum(this.filterBy)) {\r\n      this.usuarioFiltered = this.usuarios.filter((user: User) => user.rgm.toLocaleLowerCase().indexOf(this.filterBy.toLowerCase()) > -1);\r\n    }\r\n    else if (this.filterBy.length > 8 && this.isNum(this.filterBy)) {\r\n      this.usuarioFiltered = this.usuarios.filter((user: User) => user.cpf.toLocaleLowerCase().indexOf(this.filterBy.toLowerCase()) > -1);\r\n    }\r\n    else {\r\n      this.usuarioFiltered = this.usuarios.filter((user: User) => user.nome.toLocaleLowerCase().indexOf(this.filterBy.toLowerCase()) > -1);\r\n    }\r\n  }\r\n\r\n  get filter() {\r\n    return this.filterBy;\r\n  }\r\n\r\n  constructor(private accountService: AccountService,\r\n    private alertService: AlertService) { }\r\n\r\n  ngOnInit() {\r\n    this.getAllByRole();\r\n  }\r\n\r\n  deleteUser(id: number) {\r\n    const user = <any>this.usuarioFiltered.find(u => u.id === id);\r\n    user.isDeleting = true;\r\n\r\n    this.accountService.delete(id)\r\n      .pipe(first())\r\n      .subscribe(\r\n        () => {\r\n          this.getAllByRole();\r\n        },\r\n        error => {\r\n          this.alertService.error(error);\r\n        });\r\n\r\n  }\r\n\r\n  private getAllByRole() {\r\n    this.accountService.getAllByRole(TipoUser.aluno)\r\n      .pipe(first())\r\n      .subscribe(\r\n        users => {\r\n          if (users.length == 0) {\r\n            this.notFound = true;\r\n          }\r\n\r\n          this.usuarios = users;\r\n          this.usuarioFiltered = this.usuarios;\r\n        },\r\n        error => {\r\n          this.alertService.error(error);\r\n        });\r\n  }\r\n\r\n  private isNum(value: string): boolean {\r\n    console.log(/^\\d+$/.test(value))\r\n    return /^\\d+$/.test(value);\r\n  }\r\n}\r\n","<div class=\"p-4\">\r\n    <div class=\"container\">\r\n        <h1>Alunos</h1>\r\n\r\n        <div class=\"form-group row\">\r\n            <div class=\"col-sm-5\">\r\n                <input [(ngModel)]=\"filter\" class=\"form-control\" placeholder=\"Insira o email, rgm ou cpf\">\r\n            </div>\r\n        </div>\r\n        \r\n        <div style=\"display: flex;justify-content: end;\">\r\n            <a routerLink=\"/alunos/cadastro\" class=\"btn btn-sm btn-success mb-2\">Novo Aluno</a>\r\n        </div>\r\n\r\n        <table class=\"table table-striped\">\r\n            <thead>\r\n                <tr>\r\n                    <th style=\"width: 30%\">Nome</th>\r\n                    <th style=\"width: 30%\">Sobrenome</th>\r\n                    <th style=\"width: 30%\">RGM</th>\r\n                    <th style=\"width: 10%\"></th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr *ngFor=\"let user of usuarioFiltered\">\r\n                    <td>{{user.nome}}</td>\r\n                    <td>{{user.sobrenome}}</td>\r\n                    <td>{{user.rgm}}</td>\r\n                    <td style=\"white-space: nowrap\">\r\n                        <a routerLink=\"/alunos/editar/{{user.id}}\" class=\"btn btn-sm btn-primary mr-1\">Editar</a>\r\n                        <button (click)=\"deleteUser(user.id)\" class=\"btn btn-sm btn-danger btn-delete-user\"\r\n                            [disabled]=\"user.isDeleting\">\r\n                            <span *ngIf=\"user.isDeleting\" class=\"spinner-border spinner-border-sm\"></span>\r\n                            <span *ngIf=\"!user.isDeleting\">Deletar</span>\r\n                        </button>\r\n                    </td>\r\n                </tr>\r\n                <tr *ngIf=\"!usuarioFiltered && !notFound\">\r\n                    <td colspan=\"4\" class=\"text-center\">\r\n                        <span class=\"spinner-border spinner-border-lg align-center\"></span>\r\n                    </td>\r\n                </tr>\r\n                <tr *ngIf=\"notFound\">\r\n                    <td colspan=\"4\" class=\"text-center\">\r\n                        <span class=\"align-center\">Sem alunos cadastrados</span>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { first } from 'rxjs/operators';\r\nimport { TipoUser } from '../../models/user';\r\nimport { AccountService } from '../../services/account.service';\r\nimport { AlertService } from '../../services/alert.service';\r\n\r\n@Component({\r\n    selector: 'app-cadastro',\r\n    templateUrl: './cadastro.component.html',\r\n    styleUrls: ['./cadastro.component.css']\r\n})\r\nexport class CadastroComponent implements OnInit {\r\n    form: FormGroup;\r\n    loading = false;\r\n    submitted = false;\r\n\r\n    //get form fields\r\n    get formulario() { return this.form.controls; }\r\n\r\n    constructor(\r\n        private formBuilder: FormBuilder,\r\n        private route: ActivatedRoute,\r\n        private router: Router,\r\n        private accountService: AccountService,\r\n        private alertService: AlertService\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        // direciona pra home se ja tiver um usuario logado\r\n        if (this.accountService.userValue) {\r\n            this.router.navigate(['/']);\r\n        }\r\n\r\n        this.form = this.formBuilder.group({\r\n            nome: ['', [Validators.required]],\r\n            sobrenome: ['', [Validators.required]],\r\n            rgm: ['', [Validators.required, Validators.minLength(8)]],\r\n            cpf: ['', [Validators.required, Validators.minLength(11)]],\r\n            email: ['', [Validators.required, Validators.email]],\r\n            senha: ['', [Validators.required, Validators.minLength(6)]],\r\n            tipoUsuario: [TipoUser.aluno, Validators.required],\r\n        });\r\n    }\r\n\r\n    registrar() {\r\n        this.submitted = true;\r\n\r\n        this.alertService.clear();\r\n\r\n        if (this.form.invalid) {\r\n            return;\r\n        }\r\n\r\n        this.loading = true;\r\n\r\n        this.accountService.register(this.form.value)\r\n            .pipe(first())\r\n            .subscribe(\r\n                data => {\r\n                    this.alertService.success('Cadastrado com sucesso', { keepAfterRouteChange: true });\r\n                    this.router.navigate(['/login'], { relativeTo: this.route });\r\n                },\r\n                error => {\r\n                    this.alertService.error(error);\r\n                    this.loading = false;\r\n                });\r\n    }\r\n}","<section class=\"h-100 h-custom\" style=\"background-color: #01376d;\">\r\n    <div class=\"container py-5 h-100\">\r\n      <div class=\"row d-flex justify-content-center align-items-center h-100\">\r\n        <div class=\"col-12\">\r\n          <div class=\"card card-registration card-registration-2\" style=\"border-radius: 15px;\">\r\n            <div class=\"card-body p-0\">\r\n              <form [formGroup]=\"form\" (ngSubmit)=\"registrar()\">\r\n              <div class=\"row g-0\">\r\n\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"p-5\">\r\n                    <div class=\"d-flex justify-content-center\">\r\n                        <div style=\"width: 200px;\" class=\"d-flex justify-content-center\">\r\n                          <img class=\"mb-5\" style=\"width: 100%;\" src=\"assets/logo.png\">\r\n                        </div>\r\n                      </div>\r\n                    <div class=\"row\">\r\n                      <div class=\"col-md-6 mb-4 pb-2\">\r\n  \r\n                        <div class=\"form-outline\">\r\n                            <label for=\"nome\">Nome</label>\r\n                            <input type=\"text\" formControlName=\"nome\" class=\"form-control\"\r\n                                [ngClass]=\"{ 'is-invalid': submitted && formulario.nome.errors }\"\r\n                                placeholder=\"Insira seu nome\" />\r\n                            <div *ngIf=\"submitted && formulario.nome.errors\" class=\"invalid-feedback\">\r\n                                <div *ngIf=\"formulario.nome.errors.required\">Nome é obrigatório</div>\r\n                            </div>\r\n                        </div>\r\n  \r\n                      </div>\r\n                      <div class=\"col-md-6 mb-4 pb-2\">\r\n  \r\n                        <div class=\"form-outline\">\r\n                            <label for=\"sobrenome\">Sobrenome</label>\r\n                            <input type=\"text\" formControlName=\"sobrenome\" class=\"form-control\"\r\n                                [ngClass]=\"{ 'is-invalid': submitted && formulario.sobrenome.errors }\"\r\n                                placeholder=\"Insira seu sobrenome\" />\r\n                            <div *ngIf=\"submitted && formulario.sobrenome.errors\" class=\"invalid-feedback\">\r\n                                <div *ngIf=\"formulario.sobrenome.errors.required\">Sobrenome é obrigatório</div>\r\n                            </div>\r\n                        </div>\r\n  \r\n                      </div>\r\n                    </div>\r\n  \r\n                    <div class=\"mb-4 pb-2\">\r\n                      <div class=\"form-outline\">\r\n                        <label for=\"email\">Email</label>\r\n                        <input type=\"text\" formControlName=\"email\" class=\"form-control\"\r\n                            [ngClass]=\"{ 'is-invalid': submitted && formulario.email.errors }\"\r\n                            placeholder=\"Insira seu email\" />\r\n                        <div *ngIf=\"submitted && formulario.email.errors\" class=\"invalid-feedback\">\r\n                            <div *ngIf=\"formulario.email.errors.required\">Email é obrigatório</div>\r\n                            <div *ngIf=\"formulario.email.errors.email\">Email é obrigatório</div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n  \r\n                    <div class=\"mb-4 pb-2\">\r\n                        <div class=\"form-outline\">\r\n                            <label for=\"senha\">Senha</label>\r\n                            <input type=\"senha\" formControlName=\"senha\" class=\"form-control\"\r\n                                [ngClass]=\"{ 'is-invalid': submitted && formulario.senha.errors }\"\r\n                                placeholder=\"Insira sua senha\" />\r\n                            <div *ngIf=\"submitted && formulario.senha.errors\" class=\"invalid-feedback\">\r\n                                <div *ngIf=\"formulario.senha.errors.required\">Senha é obrigatório</div>\r\n                                <div *ngIf=\"formulario.senha.errors.minlength\">Senha precisa ter ao menos 6\r\n                                    caracteres</div>\r\n                            </div>\r\n                        </div>\r\n                      </div>\r\n  \r\n                  </div>\r\n                </div>\r\n                <div class=\"col-lg-6 bg-indigo text-white\" style=\"background-color: #00a88e;\">\r\n                  <div class=\"p-5\">\r\n                    <h3 class=\"fw-normal mb-5\">Informações sobre sua matricula</h3>\r\n  \r\n                    <div class=\"mb-4 pb-2\">\r\n                      <div class=\"form-outline form-white\">\r\n                        <label for=\"rgm\">RGM</label>\r\n                        <input type=\"text\" formControlName=\"rgm\" class=\"form-control\"\r\n                            [ngClass]=\"{ 'is-invalid': submitted && formulario.rgm.errors }\"\r\n                            placeholder=\"Insira seu RGM\" maxlength=\"8\" />\r\n                        <div *ngIf=\"submitted && formulario.rgm.errors\" class=\"invalid-feedback\">\r\n                            <div *ngIf=\"formulario.rgm.errors.required\">RGM é obrigatório</div>\r\n                            <div *ngIf=\"formulario.rgm.errors.minlength\">RGM precisa ter ao menos 8\r\n                                caracteres</div>\r\n                            <div *ngIf=\"formulario.rgm.errors.maxlength\">RGM precisa ter no maximo 8\r\n                                caracteres</div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n  \r\n                    <div class=\"mb-4 pb-2\">\r\n                        <label for=\"semestre\">Semestre</label>\r\n                        <select class=\"form-select\" aria-label=\"Default select example\">\r\n                            <option selected>Selecione seu semestre</option>\r\n                            <option value=\"1\">1°Semestre</option>\r\n                            <option value=\"2\">2°Semestre</option>\r\n                            <option value=\"3\">3°Semestre</option>\r\n                            <option value=\"1\">4°Semestre</option>\r\n                            <option value=\"2\">5°Semestre</option>\r\n                            <option value=\"3\">6°Semestre</option>\r\n                            <option value=\"1\">7°Semestre</option>\r\n                            <option value=\"2\">8°Semestre</option>\r\n                          </select>\r\n                    </div>\r\n  \r\n                    <div class=\"mb-4 pb-2\">\r\n                        <label for=\"turno\">Turno</label>\r\n                        <select class=\"form-select\" aria-label=\"Default select example\">\r\n                            <option selected>Selecione seu turno</option>\r\n                            <option value=\"1\">Manhã</option>\r\n                            <option value=\"2\">Tarde</option>\r\n                            <option value=\"3\">Noite</option>\r\n                          </select>\r\n                    </div>\r\n                    <div class=\"row d-flex justify-content-center\">\r\n                        <div class=\"col-md-4 mb-1\">\r\n                            <button [disabled]=\"loading\" type=\"submit\" class=\"btn btn-block mb-3\" style=\"color: #fff; background-color: #01376d;\">\r\n                                <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\r\n                                Cadastre-se\r\n                            </button>\r\n                        </div>\r\n                        <div class=\"col-md-4 mb-1\">\r\n                            <a routerLink=\"../login\" class=\"btn  btn-block mb-3\" style=\"color: #fff; background-color: #01376d;\">Voltar</a>\r\n                        </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </section>","import { Component } from '@angular/core';\r\nimport { User } from '../../models/user';\r\nimport { AccountService } from '../../services/account.service';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent {\r\n  user: User;\r\n\r\n  constructor(private accountService: AccountService) {\r\n    this.accountService.user.subscribe(x => this.user = x);\r\n  }\r\n}\r\n","<div class=\"p-4\">\r\n    <div class=\"container\">\r\n        <h1>olá {{user.nome}}!</h1>\r\n        <p>perfil: {{user.tipoUsuario | trataTipoUser}}</p>      \r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { first } from 'rxjs/operators';\r\nimport { AccountService } from '../../services/account.service';\r\nimport { AlertService } from '../../services/alert.service';\r\n\r\n@Component({\r\n    selector: 'app-login',\r\n    templateUrl: './login.component.html',\r\n    styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n    form: FormGroup;\r\n    loading = false;\r\n    submitted = false;\r\n\r\n    // get form fields\r\n    get formulario() { return this.form.controls; }\r\n\r\n    constructor(\r\n        private formBuilder: FormBuilder,\r\n        private route: ActivatedRoute,\r\n        private router: Router,\r\n        private accountService: AccountService,\r\n        private alertService: AlertService\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        // direciona pra home se ja tiver um usuario logado\r\n        if (this.accountService.userValue) {\r\n            this.router.navigate(['/']);\r\n        }\r\n\r\n        this.form = this.formBuilder.group({\r\n            username: ['', Validators.required],\r\n            password: ['', Validators.required]\r\n        });\r\n    }\r\n\r\n    login() {\r\n        this.submitted = true;\r\n\r\n        this.alertService.clear();\r\n\r\n        if (this.form.invalid) {\r\n            return;\r\n        }\r\n\r\n        this.loading = true;\r\n\r\n        this.accountService.login(this.formulario.username.value, this.formulario.password.value)\r\n            .pipe(first())\r\n            .subscribe(\r\n                data => {\r\n                    this.router.navigate(['/']); //home\r\n                },\r\n                error => {\r\n                    this.alertService.error(error);\r\n                    this.loading = false;\r\n                });\r\n    }\r\n}","<section class=\"vh-100 overflow-auto\" style=\"background-color: #01376d;\">\r\n  <div class=\"container py-5 h-100\">\r\n    <div class=\"row d-flex justify-content-center align-items-center h-100\">\r\n      <div class=\"col-12 col-md-8 col-lg-6 col-xl-5\">\r\n        <div class=\"card shadow-2-strong\" style=\"border-radius: 1rem;\">\r\n          <div class=\"card-body p-4\">\r\n\r\n            <div class=\"d-flex justify-content-center\">\r\n              <div style=\"width: 200px;\" class=\"d-flex justify-content-center\">\r\n                <img class=\"mb-4\" style=\"width: 100%;\" src=\"assets/logo.png\">\r\n              </div>\r\n            </div>\r\n\r\n            <form [formGroup]=\"form\" (ngSubmit)=\"login()\">\r\n\r\n              <div class=\"form-outline mb-4\">\r\n                <label class=\"form-label\" for=\"username\">Acesso</label>\r\n                <input type=\"text\" formControlName=\"username\" class=\"form-control\"\r\n                  [ngClass]=\"{ 'is-invalid': submitted && formulario.username.errors }\"\r\n                  placeholder=\"Insira seu email, rgm ou cpf\" />\r\n                <div *ngIf=\"submitted && formulario.username.errors\" class=\"invalid-feedback\">\r\n                  <div *ngIf=\"formulario.username.errors.required\">Acesso é obrigatório</div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"form-outline mb-4\">\r\n                <label class=\"form-label\" for=\"password\">Senha</label>\r\n                <input type=\"password\" formControlName=\"password\" class=\"form-control\"\r\n                  [ngClass]=\"{ 'is-invalid': submitted && formulario.password.errors }\"\r\n                  placeholder=\"Insira sua senha\" />\r\n                <div *ngIf=\"submitted && formulario.password.errors\" class=\"invalid-feedback\">\r\n                  <div *ngIf=\"formulario.password.errors.required\">Senha é obrigatório</div>\r\n                </div>\r\n                <p class=\"small mb-2 pb-lg-2 d-flex justify-content-end\"><a class=\"text-muted\" href=\"#!\">Esqueceu a\r\n                    senha?</a></p>\r\n              </div>\r\n\r\n              <button [disabled]=\"loading\" class=\"btn btn-block mb-4\"\r\n                style=\"background-color: #00346d; color: #fff;\">\r\n                <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\r\n                Login\r\n              </button>\r\n              <p>Não possui conta ainda? <a routerLink=\"/cadastro\" class=\"text-blue-50 fw-bold\">Cadastre-se</a></p>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { TipoUser } from '../models/user';\r\n\r\n@Pipe({\r\n  name: 'trataTipoUser'\r\n})\r\nexport class TrataTipoUserPipe implements PipeTransform {\r\n\r\n  transform(value: TipoUser): unknown {\r\n    switch (value) {\r\n      case TipoUser.adm:\r\n        return 'Administrador';\r\n      case TipoUser.aluno:\r\n        return 'Aluno';\r\n      case TipoUser.professor:\r\n        return 'Professor(a)';\r\n    }\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { TipoUser, User } from '../models/user';\r\nimport { environment } from 'src/environments/environment';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AccountService {\r\n  private userSubject: BehaviorSubject<User>;\r\n  public user: Observable<User>;\r\n\r\n  constructor(\r\n      private router: Router,\r\n      private http: HttpClient\r\n  ) {\r\n      this.userSubject = new BehaviorSubject<User>(JSON.parse(localStorage.getItem('usuario')));\r\n      this.user = this.userSubject.asObservable();\r\n  }\r\n\r\n  public get userValue(): User {\r\n      return this.userSubject.value;\r\n  }\r\n\r\n  login(acesso, senha) {\r\n      return this.http.post<User>(`${environment.apiUrl}/login`, { acesso, senha })\r\n          .pipe(map(user => {\r\n              // store user details and jwt token in local storage to keep user logged in between page refreshes\r\n              localStorage.setItem('usuario', JSON.stringify(user));\r\n              this.userSubject.next(user);\r\n              return user;\r\n          }));\r\n  }\r\n\r\n  logout() {\r\n      // remove user from local storage and set current user to null\r\n      localStorage.removeItem('usuario');\r\n      this.userSubject.next(null);\r\n      this.router.navigate(['/login']);\r\n  }\r\n\r\n  register(user: User) {\r\n      return this.http.post(`${environment.apiUrl}/cadastro`, user);\r\n  }\r\n\r\n  getAll() {\r\n      return this.http.get<User[]>(`${environment.apiUrl}/users`);\r\n  }\r\n\r\n  getAllByRole(tipoUser: TipoUser) {\r\n    return this.http.get<User[]>(`${environment.apiUrl}/usuarios/role/${tipoUser}`);\r\n}\r\n\r\n  getById(id: string) {\r\n      return this.http.get<User>(`${environment.apiUrl}/users/${id}`);\r\n  }\r\n\r\n  update(id, params) {\r\n      return this.http.put(`${environment.apiUrl}/users/${id}`, params)\r\n          .pipe(map(x => {\r\n              // update stored user if the logged in user updated their own record\r\n              if (id == this.userValue.id) {\r\n                  // update local storage\r\n                  const user = { ...this.userValue, ...params };\r\n                  localStorage.setItem('user', JSON.stringify(user));\r\n\r\n                  // publish updated user to subscribers\r\n                  this.userSubject.next(user);\r\n              }\r\n              return x;\r\n          }));\r\n  }\r\n\r\n  delete(id: number) {\r\n      return this.http.delete(`${environment.apiUrl}/users/${id}`)\r\n          .pipe(map(x => {\r\n              // auto logout if the logged in user deleted their own record\r\n              if (id == this.userValue.id) {\r\n                  this.logout();\r\n              }\r\n              return x;\r\n          }));\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\nimport { Alert, AlertType } from '../models/alert';\r\n\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AlertService {\r\n    private subject = new Subject<Alert>();\r\n    private defaultId = 'default-alert';\r\n\r\n    // enable subscribing to alerts observable\r\n    onAlert(id = this.defaultId): Observable<Alert> {\r\n        return this.subject.asObservable().pipe(filter(x => x && x.id === id));\r\n    }\r\n\r\n    // convenience methods\r\n    success(message: string, options?: any) {\r\n        this.alert(new Alert({ ...options, type: AlertType.Success, message }));\r\n    }\r\n\r\n    error(message: string, options?: any) {\r\n        this.alert(new Alert({ ...options, type: AlertType.Error, message }));\r\n    }\r\n\r\n    info(message: string, options?: any) {\r\n        this.alert(new Alert({ ...options, type: AlertType.Info, message }));\r\n    }\r\n\r\n    warn(message: string, options?: any) {\r\n        this.alert(new Alert({ ...options, type: AlertType.Warning, message }));\r\n    }\r\n\r\n    // main alert method    \r\n    alert(alert: Alert) {\r\n        alert.id = alert.id || this.defaultId;\r\n        this.subject.next(alert);\r\n    }\r\n\r\n    // clear alerts\r\n    clear(id = this.defaultId) {\r\n        this.subject.next(new Alert({ id }));\r\n    }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiUrl: 'http://localhost:4000'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}