{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth/auth.guard.ts","webpack:///src/app/auth/error.interceptor.ts","webpack:///src/app/auth/fake-backend.ts","webpack:///src/app/auth/jwt.interceptor.ts","webpack:///src/app/components/alerta/alerta.component.ts","webpack:///src/app/components/alerta/alerta.component.html","webpack:///src/app/components/navbar/navbar.component.ts","webpack:///src/app/components/navbar/navbar.component.html","webpack:///src/app/models/alert.ts","webpack:///src/app/models/user.ts","webpack:///src/app/pages/cadastro/cadastro.component.ts","webpack:///src/app/pages/cadastro/cadastro.component.html","webpack:///src/app/pages/home/home.component.ts","webpack:///src/app/pages/home/home.component.html","webpack:///src/app/pages/login/login.component.ts","webpack:///src/app/pages/login/login.component.html","webpack:///src/app/pipes/trata-tipo-user.pipe.ts","webpack:///src/app/services/account.service.ts","webpack:///src/app/services/alert.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","canActivate","redirectTo","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","declarations","providers","bootstrap","AuthGuard","router","accountService","route","state","user","userValue","navigate","providedIn","ErrorInterceptor","request","next","handle","pipe","err","status","logout","error","message","statusText","users","JSON","parse","localStorage","getItem","prof","email","senha","rgm","cpf","nome","sobrenome","tipoUsuario","professor","adm","ok","find","x","length","Math","max","map","push","setItem","stringify","FakeBackendInterceptor","url","method","headers","body","handleRoute","endsWith","autenticar","cadastro","getUsers","match","getUserById","updateUser","deleteUser","acesso","includes","lenght","token","console","log","username","isLoggedIn","unauthorized","idFromUrl","params","password","Object","assign","filter","get","urlParts","split","parseInt","JwtInterceptor","isApiUrl","startsWith","apiUrl","clone","setHeaders","Authorization","AlertaComponent","alertService","fade","alerts","alertSubscription","onAlert","subscribe","alert","keepAfterRouteChange","forEach","autoClose","setTimeout","removeAlert","routeSubscription","events","event","clear","unsubscribe","classes","alertTypeClass","Success","Info","Warning","type","join","NavbarComponent","tipoAluno","aluno","tipoAdm","tipoProf","Alert","init","AlertType","User","TipoUser","CadastroComponent","formBuilder","loading","submitted","form","controls","group","required","minLength","invalid","register","value","data","success","relativeTo","registrar","HomeComponent","LoginComponent","login","formulario","TrataTipoUserPipe","name","AccountService","http","userSubject","asObservable","post","removeItem","put","AlertService","subject","defaultId","options","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AuthGuard } from './auth/auth.guard';\r\nimport { CadastroComponent } from './pages/cadastro/cadastro.component';\r\nimport { HomeComponent } from './pages/home/home.component';\r\nimport { LoginComponent } from './pages/login/login.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: HomeComponent, canActivate: [AuthGuard] },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'cadastro', component: CadastroComponent },\r\n  { path: '**', redirectTo: '' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\nimport { AccountService } from './services/account.service';\r\nimport { User } from './models/user';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'valida-presenca';\r\n}\r\n","<!-- nav -->\r\n<app-navbar></app-navbar>\r\n\r\n<!-- main container -->\r\n<div class=\"app-container\">\r\n  <alert></alert>\r\n  <router-outlet></router-outlet>\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { NavbarComponent } from './components/navbar/navbar.component';\r\nimport { LoginComponent } from './pages/login/login.component';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { CadastroComponent } from './pages/cadastro/cadastro.component';\r\nimport { HomeComponent } from './pages/home/home.component';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { JwtInterceptor } from './auth/jwt.interceptor';\r\nimport { ErrorInterceptor } from './auth/error.interceptor';\r\nimport { FakeBackendInterceptor } from './auth/fake-backend';\r\nimport { AlertaComponent } from './components/alerta/alerta.component';\r\nimport { TrataTipoUserPipe } from './pipes/trata-tipo-user.pipe';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavbarComponent,\r\n    LoginComponent,\r\n    CadastroComponent,\r\n    HomeComponent,\r\n    AlertaComponent,\r\n    TrataTipoUserPipe\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [\r\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: FakeBackendInterceptor, multi: true }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AccountService } from '../services/account.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(\n      private router: Router,\n      private accountService: AccountService\n  ) {}\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n      const user = this.accountService.userValue;\n      if (user) {\n          // authorised so return true\n          return true;\n      }\n\n      // not logged in so redirect to login page with the return url\n      this.router.navigate(['/login']);\n      return false;\n  }\n}","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { AccountService } from '../services/account.service';\r\n\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n    constructor(private accountService: AccountService) {}\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        return next.handle(request).pipe(catchError(err => {\r\n            if (err.status === 401) {\r\n                // auto logout if 401 response returned from api\r\n                this.accountService.logout();\r\n            }\r\n            \r\n            const error = err.error.message || err.statusText;\r\n            return throwError(error);\r\n        }))\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpResponse, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable, of, throwError } from 'rxjs';\r\nimport { delay, mergeMap, materialize, dematerialize } from 'rxjs/operators';\r\nimport { TipoUser, User } from '../models/user';\r\n\r\n// array in local storage for registered users\r\nlet users = <User[]>JSON.parse(localStorage.getItem('usuarios')) || [];\r\n\r\nlet prof: User = new User();\r\nprof.id = 0,\r\n    prof.email = 'prof@email.com',\r\n    prof.senha = 'prof123',\r\n    prof.rgm = '12345678',\r\n    prof.cpf = '11111111111',\r\n    prof.nome = 'Andrea',\r\n    prof.sobrenome = 'Martins',\r\n    prof.tipoUsuario = TipoUser.professor\r\n\r\nlet adm: User = new User();\r\nadm.id = 0,\r\n    adm.email = 'adm@email.com',\r\n    adm.senha = 'adm123',\r\n    adm.rgm = '87654321',\r\n    adm.cpf = '11111111100',\r\n    adm.nome = 'Adailton',\r\n    adm.sobrenome = 'Pereira',\r\n    adm.tipoUsuario = TipoUser.adm\r\n\r\nlet ok = true;\r\n\r\nif (users.find(x => x.cpf === prof.cpf || adm.cpf)) {\r\n    ok = false;\r\n}\r\n\r\nif (ok) {\r\n    prof.id = users.length ? Math.max(...users.map(x => x.id)) + 1 : 1;\r\n    users.push(prof);\r\n    users.push(adm);\r\n    localStorage.setItem('usuarios', JSON.stringify(users));\r\n}\r\n\r\n@Injectable()\r\nexport class FakeBackendInterceptor implements HttpInterceptor {\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        const { url, method, headers, body } = request;\r\n\r\n        // wrap in delayed observable to simulate server api call\r\n        return of(null)\r\n            .pipe(mergeMap(handleRoute))\r\n            .pipe(materialize()) // call materialize and dematerialize to ensure delay even if an error is thrown (https://github.com/Reactive-Extensions/RxJS/issues/648)\r\n            .pipe(delay(500))\r\n            .pipe(dematerialize());\r\n\r\n        function handleRoute() {\r\n            switch (true) {\r\n                case url.endsWith('/login') && method === 'POST':\r\n                    return autenticar();\r\n                case url.endsWith('/cadastro') && method === 'POST':\r\n                    return cadastro();\r\n                case url.endsWith('/users') && method === 'GET':\r\n                    return getUsers();\r\n                case url.match(/\\/users\\/\\d+$/) && method === 'GET':\r\n                    return getUserById();\r\n                case url.match(/\\/users\\/\\d+$/) && method === 'PUT':\r\n                    return updateUser();\r\n                case url.match(/\\/users\\/\\d+$/) && method === 'DELETE':\r\n                    return deleteUser();\r\n                default:\r\n                    // pass through any requests not handled above\r\n                    return next.handle(request);\r\n            }\r\n        }\r\n\r\n        // mock rotas\r\n        function autenticar() {\r\n            const { acesso, senha } = body;\r\n\r\n            let user: User;\r\n\r\n            if (acesso.includes('@')) {\r\n                //email\r\n                user = users.find(x => x.email === acesso && x.senha === senha);\r\n            }\r\n            else if (acesso.lenght === 8) {\r\n                //rgm\r\n                user = users.find(x => x.rgm === acesso && x.senha === senha);\r\n            }\r\n            else if (acesso.lenght == 11) {\r\n                //cpf\r\n                user = users.find(x => x.cpf === acesso && x.senha === senha);\r\n            }\r\n\r\n            if (!user) return error('Acesso ou Senha incorreto');\r\n            return ok({\r\n                id: user.id,\r\n                email: user.email,\r\n                senha: user.senha,\r\n                rgm: user.rgm,\r\n                cpf: user.cpf,\r\n                nome: user.nome,\r\n                sobrenome: user.sobrenome,\r\n                tipoUsuario: user.tipoUsuario,\r\n                token: 'fake-jwt-token'\r\n            })\r\n        }\r\n\r\n        function cadastro() {\r\n            const user = body\r\n\r\n            console.log('usuaros', users)\r\n\r\n            if (users.find(x => x.cpf === user.cpf)) {\r\n                return error('Username \"' + user.username + '\" is already taken')\r\n            }\r\n\r\n            user.id = users.length ? Math.max(...users.map(x => x.id)) + 1 : 1;\r\n            users.push(user);\r\n            localStorage.setItem('usuarios', JSON.stringify(users));\r\n            return ok();\r\n        }\r\n\r\n        function getUsers() {\r\n            if (!isLoggedIn()) return unauthorized();\r\n            return ok(users);\r\n        }\r\n\r\n        function getUserById() {\r\n            if (!isLoggedIn()) return unauthorized();\r\n\r\n            const user = users.find(x => x.id === idFromUrl());\r\n            return ok(user);\r\n        }\r\n\r\n        function updateUser() {\r\n            if (!isLoggedIn()) return unauthorized();\r\n\r\n            let params = body;\r\n            let user = users.find(x => x.id === idFromUrl());\r\n\r\n            // only update password if entered\r\n            if (!params.password) {\r\n                delete params.password;\r\n            }\r\n\r\n            // update and save user\r\n            Object.assign(user, params);\r\n            localStorage.setItem('users', JSON.stringify(users));\r\n\r\n            return ok();\r\n        }\r\n\r\n        function deleteUser() {\r\n            if (!isLoggedIn()) return unauthorized();\r\n\r\n            users = users.filter(x => x.id !== idFromUrl());\r\n            localStorage.setItem('users', JSON.stringify(users));\r\n            return ok();\r\n        }\r\n\r\n        // status code\r\n\r\n        function ok(body?) {\r\n            return of(new HttpResponse({ status: 200, body }))\r\n        }\r\n\r\n        function error(message) {\r\n            return throwError({ error: { message } });\r\n        }\r\n\r\n        function unauthorized() {\r\n            return throwError({ status: 401, error: { message: 'Unauthorised' } });\r\n        }\r\n\r\n        function isLoggedIn() {\r\n            return headers.get('Authorization') === 'Bearer fake-jwt-token';\r\n        }\r\n\r\n        function idFromUrl() {\r\n            const urlParts = url.split('/');\r\n            return parseInt(urlParts[urlParts.length - 1]);\r\n        }\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { AccountService } from '../services/account.service';\r\nimport { environment } from '../../environments/environment';\r\n@Injectable()\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n    constructor(private accountService: AccountService) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        // add auth header with jwt if user is logged in and request is to the api url\r\n        const user = this.accountService.userValue;\r\n        const isLoggedIn = user && user.token;\r\n        const isApiUrl = request.url.startsWith(environment.apiUrl);\r\n        if (isLoggedIn && isApiUrl) {\r\n            request = request.clone({\r\n                setHeaders: {\r\n                    Authorization: `Bearer ${user.token}`\r\n                }\r\n            });\r\n        }\r\n\r\n        return next.handle(request);\r\n    }\r\n}","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\nimport { Router, NavigationStart } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { Alert, AlertType } from '../../models/alert';\nimport { AlertService } from '../../services/alert.service';\n\n\n@Component({ selector: 'alert', templateUrl: 'alerta.component.html' })\n\nexport class AlertaComponent implements OnInit, OnDestroy {\n  @Input() id = 'default-alert';\n  @Input() fade = true;\n\n  alerts: Alert[] = [];\n  alertSubscription: Subscription;\n  routeSubscription: Subscription;\n\n  constructor(private router: Router, private alertService: AlertService) { }\n\n  ngOnInit() {\n    // subscribe to new alert notifications\n    this.alertSubscription = this.alertService.onAlert(this.id)\n      .subscribe(alert => {\n        // clear alerts when an empty alert is received\n        if (!alert.message) {\n          // filter out alerts without 'keepAfterRouteChange' flag\n          this.alerts = this.alerts.filter(x => x.keepAfterRouteChange);\n\n          // remove 'keepAfterRouteChange' flag on the rest\n          this.alerts.forEach(x => delete x.keepAfterRouteChange);\n          return;\n        }\n\n        // add alert to array\n        this.alerts.push(alert);\n\n        // auto close alert if required\n        if (alert.autoClose) {\n          setTimeout(() => this.removeAlert(alert), 3000);\n        }\n      });\n\n    // clear alerts on location change\n    this.routeSubscription = this.router.events.subscribe(event => {\n      if (event instanceof NavigationStart) {\n        this.alertService.clear(this.id);\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    // unsubscribe to avoid memory leaks\n    this.alertSubscription.unsubscribe();\n    this.routeSubscription.unsubscribe();\n  }\n\n  removeAlert(alert: Alert) {\n    // check if already removed to prevent error on auto close\n    if (!this.alerts.includes(alert)) return;\n\n    if (this.fade) {\n      // fade out alert\n      this.alerts.find(x => x === alert).fade = true;\n\n      // remove alert after faded out\n      setTimeout(() => {\n        this.alerts = this.alerts.filter(x => x !== alert);\n      }, 250);\n    } else {\n      // remove alert\n      this.alerts = this.alerts.filter(x => x !== alert);\n    }\n  }\n\n  cssClass(alert: Alert) {\n    if (!alert) return;\n\n    const classes = ['alert', 'alert-dismissable', 'mt-4', 'container'];\n\n    const alertTypeClass = {\n      [AlertType.Success]: 'alert alert-success',\n      [AlertType.Error]: 'alert alert-danger',\n      [AlertType.Info]: 'alert alert-info',\n      [AlertType.Warning]: 'alert alert-warning'\n    }\n\n    classes.push(alertTypeClass[alert.type]);\n\n    if (alert.fade) {\n      classes.push('fade');\n    }\n\n    return classes.join(' ');\n  }\n}","<div *ngFor=\"let alert of alerts\" class=\"{{cssClass(alert)}}\">\n    <a class=\"close\" (click)=\"removeAlert(alert)\">&times;</a>\n    <span [innerHTML]=\"alert.message\"></span>\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { TipoUser, User } from '../../models/user';\r\nimport { AccountService } from '../../services/account.service';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent {\r\n  tipoAluno = TipoUser.aluno;\r\n  tipoAdm = TipoUser.adm;\r\n  tipoProf = TipoUser.professor;\r\n\r\n  user: User;\r\n\r\n  constructor(private accountService: AccountService) {\r\n    this.accountService.user.subscribe(x => this.user = x);\r\n  }\r\n\r\n  logout() {\r\n    this.accountService.logout();\r\n  }\r\n\r\n}\r\n","<nav class=\"navbar navbar-expand navbar-dark bg-dark\" *ngIf=\"user\">\r\n  <div class=\"navbar-nav\">\r\n      <a class=\"nav-item nav-link\" routerLink=\"/\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\">Home</a>\r\n      <a class=\"nav-item nav-link\" routerLink=\"/users\" routerLinkActive=\"active\" *ngIf=\"user.tipoUsuario == tipoAluno\">Presencas</a>\r\n      <a class=\"nav-item nav-link\" routerLink=\"/users\" routerLinkActive=\"active\" *ngIf=\"user.tipoUsuario == tipoProf || tipoAdm\">Aulas</a>\r\n      <a class=\"nav-item nav-link\" routerLink=\"/users\" routerLinkActive=\"active\" *ngIf=\"user.tipoUsuario == tipoAdm\">Professores</a>\r\n      <a class=\"nav-item nav-link\" routerLink=\"/users\" routerLinkActive=\"active\" *ngIf=\"user.tipoUsuario == tipoAdm\">Alunos</a>\r\n      <a class=\"nav-item nav-link\" (click)=\"logout()\">Sair</a>\r\n  </div>\r\n</nav>","export class Alert {\r\n    id: string;\r\n    type: AlertType;\r\n    message: string;\r\n    autoClose: boolean;\r\n    keepAfterRouteChange: boolean;\r\n    fade: boolean;\r\n\r\n    constructor(init?:Partial<Alert>) {\r\n        Object.assign(this, init);\r\n    }\r\n}\r\n\r\nexport enum AlertType {\r\n    Success,\r\n    Error,\r\n    Info,\r\n    Warning\r\n}","export class User {\r\n    id: number;\r\n    email: string;\r\n    senha: string;\r\n    rgm: string;\r\n    cpf: string;\r\n    nome: string;\r\n    sobrenome: string;\r\n    tipoUsuario: TipoUser\r\n    token: string;\r\n}\r\n\r\nexport enum TipoUser {\r\n    aluno,\r\n    professor,\r\n    adm\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { first } from 'rxjs/operators';\r\nimport { TipoUser, User } from 'src/app/models/user';\r\nimport { AccountService } from 'src/app/services/account.service';\r\nimport { AlertService } from 'src/app/services/alert.service';\r\n\r\n@Component({\r\n    selector: 'app-cadastro',\r\n    templateUrl: './cadastro.component.html',\r\n    styleUrls: ['./cadastro.component.css']\r\n})\r\nexport class CadastroComponent implements OnInit {\r\n    form: FormGroup;\r\n    loading = false;\r\n    submitted = false;\r\n\r\n    //get form fields\r\n    get formulario() { return this.form.controls; }\r\n\r\n    constructor(\r\n        private formBuilder: FormBuilder,\r\n        private route: ActivatedRoute,\r\n        private router: Router,\r\n        private accountService: AccountService,\r\n        private alertService: AlertService\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        // direciona pra home se ja tiver um usuario logado\r\n        if (this.accountService.userValue) {\r\n            this.router.navigate(['/']);\r\n        }\r\n\r\n        this.form = this.formBuilder.group({\r\n            nome: ['', [Validators.required]],\r\n            sobrenome: ['', [Validators.required]],\r\n            rgm: ['', [Validators.required, Validators.minLength(8)]],\r\n            cpf: ['', [Validators.required, Validators.minLength(11)]],\r\n            email: ['', [Validators.required, Validators.email]],\r\n            senha: ['', [Validators.required, Validators.minLength(6)]],\r\n            tipoUsuario: [TipoUser.aluno, Validators.required],\r\n        });\r\n    }\r\n\r\n    registrar() {\r\n        this.submitted = true;\r\n\r\n        this.alertService.clear();\r\n\r\n        if (this.form.invalid) {\r\n            return;\r\n        }\r\n\r\n        this.loading = true;\r\n\r\n        this.accountService.register(this.form.value)\r\n            .pipe(first())\r\n            .subscribe(\r\n                data => {\r\n                    this.alertService.success('Cadastrado com sucesso', { keepAfterRouteChange: true });\r\n                    this.router.navigate(['/login'], { relativeTo: this.route });\r\n                },\r\n                error => {\r\n                    this.alertService.error(error);\r\n                    this.loading = false;\r\n                });\r\n    }\r\n}","<div class=\"card\">\r\n    <h4 class=\"card-header\">Register</h4>\r\n    <div class=\"card-body\">\r\n        <form [formGroup]=\"form\" (ngSubmit)=\"registrar()\">\r\n            <div class=\"form-group\">\r\n                <label for=\"nome\">Nome</label>\r\n                <input type=\"text\" formControlName=\"nome\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && formulario.nome.errors }\"placeholder=\"Insira seu nome\" />\r\n                <div *ngIf=\"submitted && formulario.nome.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"formulario.nome.errors.required\">Nome é obrigatório</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"sobrenome\">Sobrenome</label>\r\n                <input type=\"text\" formControlName=\"sobrenome\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && formulario.sobrenome.errors }\" placeholder=\"Insira seu sobrenome\"/>\r\n                <div *ngIf=\"submitted && formulario.sobrenome.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"formulario.sobrenome.errors.required\">Sobrenome é obrigatório</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"rgm\">RGM</label>\r\n                <input type=\"text\" formControlName=\"rgm\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && formulario.rgm.errors }\" placeholder=\"Insira seu RGM\" maxlength=\"8\"/>\r\n                <div *ngIf=\"submitted && formulario.rgm.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"formulario.rgm.errors.required\">RGM é obrigatório</div>\r\n                    <div *ngIf=\"formulario.rgm.errors.minlength\">RGM precisa ter ao menos 8 caracteres</div>\r\n                    <div *ngIf=\"formulario.rgm.errors.maxlength\">RGM precisa ter no maximo 8 caracteres</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"cpf\">CPF</label>\r\n                <input type=\"text\" formControlName=\"cpf\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && formulario.cpf.errors }\" placeholder=\"Insira seu CPF\" maxlength=\"11\"/>\r\n                <div *ngIf=\"submitted && formulario.cpf.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"formulario.cpf.errors.required\">CPF é obrigatório</div>\r\n                    <div *ngIf=\"formulario.cpf.errors.minlength\">CPF precisa ter ao menos 11 caracteres</div>\r\n                    <div *ngIf=\"formulario.cpf.errors.maxlength\">CPF precisa ter no maximo 11 caracteres</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"email\">Email</label>\r\n                <input type=\"text\" formControlName=\"email\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && formulario.email.errors }\" placeholder=\"Insira seu email\"/>\r\n                <div *ngIf=\"submitted && formulario.email.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"formulario.email.errors.required\">Email é obrigatório</div>\r\n                    <div *ngIf=\"formulario.email.errors.email\">Email é obrigatório</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"senha\">Senha</label>\r\n                <input type=\"senha\" formControlName=\"senha\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && formulario.senha.errors }\"  placeholder=\"Insira sua senha\"/>\r\n                <div *ngIf=\"submitted && formulario.senha.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"formulario.senha.errors.required\">Senha é obrigatório</div>\r\n                    <div *ngIf=\"formulario.senha.errors.minlength\">Senha precisa ter ao menos 6 caracteres</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <button [disabled]=\"loading\" class=\"btn btn-primary\">\r\n                    <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\r\n                    Registrar\r\n                </button>\r\n                <a routerLink=\"../login\" class=\"btn btn-link\">Voltar</a>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>","import { Component } from '@angular/core';\nimport { User } from '../../models/user';\nimport { AccountService } from '../../services/account.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent {\n  user: User;\n\n  constructor(private accountService: AccountService) {\n    this.accountService.user.subscribe(x => this.user = x);\n  }\n}\n","<div class=\"p-4\">\n    <div class=\"container\">\n        <h1>olá {{user.nome}}!</h1>\n        <p>perfil: {{user.tipoUsuario | trataTipoUser}}</p>      \n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { first } from 'rxjs/operators';\r\nimport { AccountService } from '../../services/account.service';\r\nimport { AlertService } from '../../services/alert.service';\r\n\r\n@Component({\r\n    selector: 'app-login',\r\n    templateUrl: './login.component.html',\r\n    styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n    form: FormGroup;\r\n    loading = false;\r\n    submitted = false;\r\n\r\n    // get form fields\r\n    get formulario() { return this.form.controls; }\r\n\r\n    constructor(\r\n        private formBuilder: FormBuilder,\r\n        private route: ActivatedRoute,\r\n        private router: Router,\r\n        private accountService: AccountService,\r\n        private alertService: AlertService\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        // direciona pra home se ja tiver um usuario logado\r\n        if (this.accountService.userValue) {\r\n            this.router.navigate(['/']);\r\n        }\r\n\r\n        this.form = this.formBuilder.group({\r\n            username: ['', Validators.required],\r\n            password: ['', Validators.required]\r\n        });\r\n    }\r\n\r\n    login() {\r\n        this.submitted = true;\r\n\r\n        this.alertService.clear();\r\n\r\n        if (this.form.invalid) {\r\n            return;\r\n        }\r\n\r\n        this.loading = true;\r\n\r\n        this.accountService.login(this.formulario.username.value, this.formulario.password.value)\r\n            .pipe(first())\r\n            .subscribe(\r\n                data => {\r\n                    this.router.navigate(['/']); //home\r\n                },\r\n                error => {\r\n                    this.alertService.error(error);\r\n                    this.loading = false;\r\n                });\r\n    }\r\n}","<div class=\"card\">\r\n    <h4 class=\"card-header\">Login</h4>\r\n    <div class=\"card-body\">\r\n        <form [formGroup]=\"form\" (ngSubmit)=\"login()\">\r\n            <div class=\"form-group\">\r\n                <label for=\"username\">Acesso</label>\r\n                <input type=\"text\" formControlName=\"username\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && formulario.username.errors }\" placeholder=\"Insira seu email, rgm ou cpf\"/>\r\n                <div *ngIf=\"submitted && formulario.username.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"formulario.username.errors.required\">Acesso é obrigatório</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"password\">Senha</label>\r\n                <input type=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && formulario.password.errors }\" placeholder=\"Insira sua senha\"/>\r\n                <div *ngIf=\"submitted && formulario.password.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"formulario.password.errors.required\">Senha é obrigatório</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <button [disabled]=\"loading\" class=\"btn btn-primary\">\r\n                    <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\r\n                    Login\r\n                </button>\r\n                <a routerLink=\"/cadastro\" class=\"btn btn-link\">Registrar</a>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>","import { Pipe, PipeTransform } from '@angular/core';\nimport { TipoUser } from '../models/user';\n\n@Pipe({\n  name: 'trataTipoUser'\n})\nexport class TrataTipoUserPipe implements PipeTransform {\n\n  transform(value: TipoUser): unknown {\n    switch (value) {\n      case TipoUser.adm:\n        return 'Administrador';\n      case TipoUser.aluno:\n        return 'Aluno';\n      case TipoUser.professor:\n        return 'Professor(a)';\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { User } from '../models/user';\r\nimport { environment } from 'src/environments/environment';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AccountService {\r\n  private userSubject: BehaviorSubject<User>;\r\n  public user: Observable<User>;\r\n\r\n  constructor(\r\n      private router: Router,\r\n      private http: HttpClient\r\n  ) {\r\n      this.userSubject = new BehaviorSubject<User>(JSON.parse(localStorage.getItem('usuario')));\r\n      this.user = this.userSubject.asObservable();\r\n  }\r\n\r\n  public get userValue(): User {\r\n      return this.userSubject.value;\r\n  }\r\n\r\n  login(acesso, senha) {\r\n      return this.http.post<User>(`${environment.apiUrl}/login`, { acesso, senha })\r\n          .pipe(map(user => {\r\n              // store user details and jwt token in local storage to keep user logged in between page refreshes\r\n              localStorage.setItem('usuario', JSON.stringify(user));\r\n              this.userSubject.next(user);\r\n              return user;\r\n          }));\r\n  }\r\n\r\n  logout() {\r\n      // remove user from local storage and set current user to null\r\n      localStorage.removeItem('usuario');\r\n      this.userSubject.next(null);\r\n      this.router.navigate(['/login']);\r\n  }\r\n\r\n  register(user: User) {\r\n      return this.http.post(`${environment.apiUrl}/cadastro`, user);\r\n  }\r\n\r\n  getAll() {\r\n      return this.http.get<User[]>(`${environment.apiUrl}/users`);\r\n  }\r\n\r\n  getById(id: string) {\r\n      return this.http.get<User>(`${environment.apiUrl}/users/${id}`);\r\n  }\r\n\r\n  update(id, params) {\r\n      return this.http.put(`${environment.apiUrl}/users/${id}`, params)\r\n          .pipe(map(x => {\r\n              // update stored user if the logged in user updated their own record\r\n              if (id == this.userValue.id) {\r\n                  // update local storage\r\n                  const user = { ...this.userValue, ...params };\r\n                  localStorage.setItem('user', JSON.stringify(user));\r\n\r\n                  // publish updated user to subscribers\r\n                  this.userSubject.next(user);\r\n              }\r\n              return x;\r\n          }));\r\n  }\r\n\r\n  delete(id: number) {\r\n      return this.http.delete(`${environment.apiUrl}/users/${id}`)\r\n          .pipe(map(x => {\r\n              // auto logout if the logged in user deleted their own record\r\n              if (id == this.userValue.id) {\r\n                  this.logout();\r\n              }\r\n              return x;\r\n          }));\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\nimport { Alert, AlertType } from '../models/alert';\r\n\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AlertService {\r\n    private subject = new Subject<Alert>();\r\n    private defaultId = 'default-alert';\r\n\r\n    // enable subscribing to alerts observable\r\n    onAlert(id = this.defaultId): Observable<Alert> {\r\n        return this.subject.asObservable().pipe(filter(x => x && x.id === id));\r\n    }\r\n\r\n    // convenience methods\r\n    success(message: string, options?: any) {\r\n        this.alert(new Alert({ ...options, type: AlertType.Success, message }));\r\n    }\r\n\r\n    error(message: string, options?: any) {\r\n        this.alert(new Alert({ ...options, type: AlertType.Error, message }));\r\n    }\r\n\r\n    info(message: string, options?: any) {\r\n        this.alert(new Alert({ ...options, type: AlertType.Info, message }));\r\n    }\r\n\r\n    warn(message: string, options?: any) {\r\n        this.alert(new Alert({ ...options, type: AlertType.Warning, message }));\r\n    }\r\n\r\n    // main alert method    \r\n    alert(alert: Alert) {\r\n        alert.id = alert.id || this.defaultId;\r\n        this.subject.next(alert);\r\n    }\r\n\r\n    // clear alerts\r\n    clear(id = this.defaultId) {\r\n        this.subject.next(new Alert({ id }));\r\n    }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:4000'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}